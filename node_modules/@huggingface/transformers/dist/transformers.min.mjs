import*as e from"fs";import*as t from"onnxruntime-node";import*as s from"path";import*as r from"sharp";import*as o from"url";var n,a,i={fs:t=>{t.exports=e},"onnxruntime-node":e=>{e.exports=t},path:e=>{e.exports=s},sharp:e=>{e.exports=r},url:e=>{e.exports=o},"?8b6b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,t,s)=>{s.r(t),s.d(t,{Environment:()=>Y,Interpreter:()=>K,Template:()=>te,parse:()=>N,tokenize:()=>d});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),o=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,true:r.BooleanLiteral,false:r.BooleanLiteral,none:r.NullLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral,None:r.NullLiteral}),n=class{constructor(e,t){this.value=e,this.type=t}};function a(e){return/\w/.test(e)}function i(e){return/[0-9]/.test(e)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],c=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e,t={}){const s=[],d=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let u=0;const m=e=>{let t="";for(;e(d[u]);)if("\\"!==d[u]){if(t+=d[u++],u>=d.length)throw new SyntaxError("Unexpected end of input")}else{if(++u,u>=d.length)throw new SyntaxError("Unexpected end of input");const e=d[u++],s=c.get(e);if(void 0===s)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=s}return t};e:for(;u<d.length;){const e=s.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e="";for(;u<d.length&&("{"!==d[u]||"%"!==d[u+1]&&"{"!==d[u+1]);)e+=d[u++];if(e.length>0){s.push(new n(e,r.Text));continue}}m((e=>/\s/.test(e)));const t=d[u];if("-"===t||"+"===t){const e=s.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.NullLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++u;const e=m(i);s.push(new n(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of l){if(d.slice(u,u+e.length)===e){s.push(new n(e,t)),u+=e.length;continue e}}if("'"!==t&&'"'!==t)if(i(t)){const e=m(i);s.push(new n(e,r.NumericLiteral))}else{if(!a(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=m(a),t=Object.hasOwn(o,e)?o[e]:r.Identifier;t===r.In&&s.at(-1)?.type===r.Not?(s.pop(),s.push(new n("not in",r.NotIn))):s.push(new n(e,t))}}else{++u;const e=m((e=>e!==t));s.push(new n(e,r.StringLiteral)),++u}}return s}var u=class{type="Statement"},m=class extends u{constructor(e){super(),this.body=e}type="Program"},p=class extends u{constructor(e,t,s){super(),this.test=e,this.body=t,this.alternate=s}type="If"},_=class extends u{constructor(e,t,s,r){super(),this.loopvar=e,this.iterable=t,this.body=s,this.defaultBlock=r}type="For"},h=class extends u{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},g=class extends u{constructor(e,t,s){super(),this.name=e,this.args=t,this.body=s}type="Macro"},f=class extends u{type="Expression"},M=class extends f{constructor(e,t,s){super(),this.object=e,this.property=t,this.computed=s}type="MemberExpression"},w=class extends f{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},T=class extends f{constructor(e){super(),this.value=e}type="Identifier"},b=class extends f{constructor(e){super(),this.value=e}type="Literal"},P=class extends b{type="NumericLiteral"},x=class extends b{type="StringLiteral"},k=class extends b{type="BooleanLiteral"},y=class extends b{type="NullLiteral"},F=class extends b{type="ArrayLiteral"},v=class extends b{type="TupleLiteral"},C=class extends b{type="ObjectLiteral"},S=class extends f{constructor(e,t,s){super(),this.operator=e,this.left=t,this.right=s}type="BinaryExpression"},A=class extends f{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},E=class extends f{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},L=class extends f{constructor(e,t,s){super(),this.operand=e,this.negate=t,this.test=s}type="TestExpression"},I=class extends f{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},z=class extends f{constructor(e=void 0,t=void 0,s=void 0){super(),this.start=e,this.stop=t,this.step=s}type="SliceExpression"},j=class extends f{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function N(e){const t=new m([]);let s=0;function o(t,r){const o=e[s++];if(!o||o.type!==t)throw new Error(`Parser Error: ${r}. ${o.type} !== ${t}.`);return o}function n(){switch(e[s].type){case r.Text:return new x(o(r.Text,"Expected text token").value);case r.OpenStatement:return function(){let t;switch(o(r.OpenStatement,"Expected opening statement token"),e[s].type){case r.Set:++s,t=l(),o(r.CloseStatement,"Expected closing statement token");break;case r.If:++s,t=c(),o(r.OpenStatement,"Expected {% token"),o(r.EndIf,"Expected endif token"),o(r.CloseStatement,"Expected %} token");break;case r.Macro:++s,t=function(){const e=W();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=D();o(r.CloseStatement,"Expected closing statement token");const s=[];for(;a(r.OpenStatement,r.EndMacro);)s.push(n());return new g(e,t,s)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndMacro,"Expected endmacro token"),o(r.CloseStatement,"Expected %} token");break;case r.For:++s,t=function(){const e=d(!0);if(!(e instanceof T||e instanceof v))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);o(r.In,"Expected `in` keyword following loop variable");const t=u();o(r.CloseStatement,"Expected closing statement token");const l=[];for(;a(r.OpenStatement,r.EndFor)&&a(r.OpenStatement,r.Else);)l.push(n());const c=[];if(i(r.OpenStatement,r.Else))for(++s,++s,o(r.CloseStatement,"Expected closing statement token");a(r.OpenStatement,r.EndFor);)c.push(n());return new _(e,t,l,c)}(),o(r.OpenStatement,"Expected {% token"),o(r.EndFor,"Expected endfor token"),o(r.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[s].type}`)}return t}();case r.OpenExpression:return function(){o(r.OpenExpression,"Expected opening expression token");const e=u();return o(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[s].type}`)}}function a(...t){return s+t.length<=e.length&&t.some(((t,r)=>t!==e[s+r].type))}function i(...t){return s+t.length<=e.length&&t.every(((t,r)=>t===e[s+r].type))}function l(){const e=u();if(i(r.Equals)){++s;const t=l();return new h(e,t)}return e}function c(){const t=u();o(r.CloseStatement,"Expected closing statement token");const a=[],l=[];for(;e[s]?.type!==r.OpenStatement||e[s+1]?.type!==r.ElseIf&&e[s+1]?.type!==r.Else&&e[s+1]?.type!==r.EndIf;)a.push(n());if(e[s]?.type===r.OpenStatement&&e[s+1]?.type!==r.EndIf)if(++s,i(r.ElseIf))o(r.ElseIf,"Expected elseif token"),l.push(c());else for(o(r.Else,"Expected else token"),o(r.CloseStatement,"Expected closing statement token");e[s]?.type!==r.OpenStatement||e[s+1]?.type!==r.EndIf;)l.push(n());return new p(t,a,l)}function d(e=!1){const t=e?W:u,o=[t()],n=i(r.Comma);for(;n&&(++s,o.push(t()),i(r.Comma)););return n?new v(o):o[0]}function u(){return function(){const e=f();if(i(r.If)){++s;const t=f();if(i(r.Else)){++s;const r=f();return new p(t,[e],[r])}return new E(e,t)}return e}()}function f(){let t=b();for(;i(r.Or);){const r=e[s];++s;const o=b();t=new S(r,t,o)}return t}function b(){let t=N();for(;i(r.And);){const r=e[s];++s;const o=N();t=new S(r,t,o)}return t}function N(){let t;for(;i(r.Not);){const r=e[s];++s;const o=N();t=new I(r,o)}return t??function(){let t=B();for(;i(r.ComparisonBinaryOperator)||i(r.In)||i(r.NotIn);){const r=e[s];++s;const o=B();t=new S(r,t,o)}return t}()}function B(){let t=R();for(;i(r.AdditiveBinaryOperator);){const r=e[s];++s;const o=R();t=new S(r,t,o)}return t}function V(){const t=function(){let t=W();for(;i(r.Dot)||i(r.OpenSquareBracket);){const n=e[s];let a;++s;const i=n.type!==r.Dot;if(i)a=G(),o(r.CloseSquareBracket,"Expected closing square bracket");else if(a=W(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new M(t,a,i)}return t}();return i(r.OpenParen)?O(t):t}function O(e){let t=new w(e,D());return i(r.OpenParen)&&(t=O(t)),t}function D(){o(r.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!i(r.CloseParen);){let t=u();if(i(r.Equals)){if(++s,!(t instanceof T))throw new SyntaxError("Expected identifier for keyword argument");const e=u();t=new j(t,e)}e.push(t),i(r.Comma)&&++s}return e}();return o(r.CloseParen,"Expected closing parenthesis for arguments list"),e}function G(){const e=[];let t=!1;for(;!i(r.CloseSquareBracket);)i(r.Colon)?(e.push(void 0),++s,t=!0):(e.push(u()),i(r.Colon)&&(++s,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new z(...e)}return e[0]}function R(){let t=q();for(;i(r.MultiplicativeBinaryOperator);){const r=e[s];++s;const o=q();t=new S(r,t,o)}return t}function q(){let e=function(){let e=V();for(;i(r.Pipe);){++s;let t=W();if(!(t instanceof T))throw new SyntaxError("Expected identifier for the filter");i(r.OpenParen)&&(t=O(t)),e=new A(e,t)}return e}();for(;i(r.Is);){++s;const t=i(r.Not);t&&++s;let o=W();if(o instanceof k?o=new T(o.value.toString()):o instanceof y&&(o=new T("none")),!(o instanceof T))throw new SyntaxError("Expected identifier for the test");e=new L(e,t,o)}return e}function W(){const t=e[s];switch(t.type){case r.NumericLiteral:return++s,new P(Number(t.value));case r.StringLiteral:return++s,new x(t.value);case r.BooleanLiteral:return++s,new k("true"===t.value.toLowerCase());case r.NullLiteral:return++s,new y(null);case r.Identifier:return++s,new T(t.value);case r.OpenParen:{++s;const t=d();if(e[s].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[s].type} instead`);return++s,t}case r.OpenSquareBracket:{++s;const e=[];for(;!i(r.CloseSquareBracket);)e.push(u()),i(r.Comma)&&++s;return++s,new F(e)}case r.OpenCurlyBracket:{++s;const e=new Map;for(;!i(r.CloseCurlyBracket);){const t=u();o(r.Colon,"Expected colon between key and value in object literal");const n=u();e.set(t,n),i(r.Comma)&&++s}return++s,new C(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;s<e.length;)t.body.push(n());return t}function B(e,t,s=1){void 0===t&&(t=e,e=0);const r=[];for(let o=e;o<t;o+=s)r.push(o);return r}function V(e,t,s,r=1){const o=Math.sign(r);o>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),s=(s??=e.length)<0?Math.max(e.length+s,0):Math.min(s,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),s=(s??=-1)<-1?Math.max(e.length+s,-1):Math.min(s,e.length-1));const n=[];for(let a=t;o*a<o*s;a+=r)n.push(e[a]);return n}function O(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var D=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new q(!!this.value)}},G=class extends D{type="NumericValue"},R=class extends D{type="StringValue";builtins=new Map([["upper",new X((()=>new R(this.value.toUpperCase())))],["lower",new X((()=>new R(this.value.toLowerCase())))],["strip",new X((()=>new R(this.value.trim())))],["title",new X((()=>new R(O(this.value))))],["length",new G(this.value.length)],["rstrip",new X((()=>new R(this.value.trimEnd())))],["lstrip",new X((()=>new R(this.value.trimStart())))]])},q=class extends D{type="BooleanValue"},W=class extends D{type="ObjectValue";__bool__(){return new q(this.value.size>0)}builtins=new Map([["get",new X((([e,t])=>{if(!(e instanceof R))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new H}))],["items",new X((()=>new U(Array.from(this.value.entries()).map((([e,t])=>new U([new R(e),t]))))))]])},$=class extends W{type="KeywordArgumentsValue"},U=class extends D{type="ArrayValue";builtins=new Map([["length",new G(this.value.length)]]);__bool__(){return new q(this.value.length>0)}},Q=class extends U{type="TupleValue"},X=class extends D{type="FunctionValue"},H=class extends D{type="NullValue"},J=class extends D{type="UndefinedValue"},Y=class{constructor(e){this.parent=e}variables=new Map([["namespace",new X((e=>{if(0===e.length)return new W(new Map);if(1!==e.length||!(e[0]instanceof W))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof X],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,Z(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new J}catch{return new J}}},K=class{global;constructor(e){this.global=e??new Y}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const s=this.evaluate(e.left,t);switch(e.operator.value){case"and":return s.__bool__().value?this.evaluate(e.right,t):s;case"or":return s.__bool__().value?s:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new q(s.value==r.value);case"!=":return new q(s.value!=r.value)}if(s instanceof J||r instanceof J)throw new Error("Cannot perform operation on undefined values");if(s instanceof H||r instanceof H)throw new Error("Cannot perform operation on null values");if(s instanceof G&&r instanceof G)switch(e.operator.value){case"+":return new G(s.value+r.value);case"-":return new G(s.value-r.value);case"*":return new G(s.value*r.value);case"/":return new G(s.value/r.value);case"%":return new G(s.value%r.value);case"<":return new q(s.value<r.value);case">":return new q(s.value>r.value);case">=":return new q(s.value>=r.value);case"<=":return new q(s.value<=r.value)}else if(s instanceof U&&r instanceof U){if("+"===e.operator.value)return new U(s.value.concat(r.value))}else if(r instanceof U){const t=void 0!==r.value.find((e=>e.value===s.value));switch(e.operator.value){case"in":return new q(t);case"not in":return new q(!t)}}if((s instanceof R||r instanceof R)&&"+"===e.operator.value)return new R(s.value.toString()+r.value.toString());if(s instanceof R&&r instanceof R)switch(e.operator.value){case"in":return new q(r.value.includes(s.value));case"not in":return new q(!r.value.includes(s.value))}if(s instanceof R&&r instanceof W)switch(e.operator.value){case"in":return new q(r.value.has(s.value));case"not in":return new q(!r.value.has(s.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${s.type} and ${r.type}`)}evaluateArguments(e,t){const s=[],r=new Map;for(const o of e)if("KeywordArgumentExpression"===o.type){const e=o;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(o,t))}return[s,r]}evaluateFilterExpression(e,t){const s=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new R(ee(s));if(s instanceof U)switch(t.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new G(s.value.length);case"reverse":return new U(s.value.reverse());case"sort":return new U(s.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(s instanceof R)switch(t.value){case"length":return new G(s.value.length);case"upper":return new R(s.value.toUpperCase());case"lower":return new R(s.value.toLowerCase());case"title":return new R(O(s.value));case"capitalize":return new R(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new R(s.value.trim());case"indent":return new R(s.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"string":return s;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(s instanceof G){if("abs"===t.value)return new G(Math.abs(s.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(s instanceof W)switch(t.value){case"items":return new U(Array.from(s.value.entries()).map((([e,t])=>new U([new R(e),t]))));case"length":return new G(s.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${s.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const o=r.callee.value;if("tojson"===o){const[,e]=this.evaluateArguments(r.args,t),o=e.get("indent")??new H;if(!(o instanceof G||o instanceof H))throw new Error("If set, indent must be a number");return new R(ee(s,o.value))}if(s instanceof U){switch(o){case"selectattr":case"rejectattr":{const e="selectattr"===o;if(s.value.some((e=>!(e instanceof W))))throw new Error(`\`${o}\` can only be applied to array of objects`);if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error(`arguments of \`${o}\` must be strings`);const[n,a,i]=r.args.map((e=>this.evaluate(e,t)));let l;if(a){const e=t.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const c=s.value.filter((t=>{const s=t.value.get(n.value),r=!!s&&l(s,i);return e?r:!r}));return new U(c)}case"map":{const[,e]=this.evaluateArguments(r.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof R))throw new Error("attribute must be a string");const r=e.get("default"),o=s.value.map((e=>{if(!(e instanceof W))throw new Error("items in map must be an object");return e.value.get(t.value)??r??new J}));return new U(o)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${o}`)}if(s instanceof R){if("indent"===o){const[e,o]=this.evaluateArguments(r.args,t),n=e.at(0)??o.get("width")??new G(4);if(!(n instanceof G))throw new Error("width must be a number");const a=e.at(1)??o.get("first")??new q(!1),i=e.at(2)??o.get("blank")??new q(!1),l=s.value.split("\n"),c=" ".repeat(n.value),d=l.map(((e,t)=>!a.value&&0===t||!i.value&&0===e.length?e:c+e));return new R(d.join("\n"))}throw new Error(`Unknown StringValue filter: ${o}`)}throw new Error(`Cannot apply filter "${o}" to type: ${s.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const s=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const o=r(s);return new q(e.negate?!o:o)}evaluateUnaryExpression(e,t){const s=this.evaluate(e.argument,t);if("not"===e.operator.value)return new q(!s.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let s="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(s+=e.value)}return new R(s)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[s,r]=this.evaluateArguments(e.args,t);r.size>0&&s.push(new $(r));const o=this.evaluate(e.callee,t);if("FunctionValue"!==o.type)throw new Error(`Cannot call something that is not a function: got ${o.type}`);return o.value(s,t)}evaluateSliceExpression(e,t,s){if(!(e instanceof U||e instanceof R))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,s),o=this.evaluate(t.stop,s),n=this.evaluate(t.step,s);if(!(r instanceof G||r instanceof J))throw new Error("Slice start must be numeric or undefined");if(!(o instanceof G||o instanceof J))throw new Error("Slice stop must be numeric or undefined");if(!(n instanceof G||n instanceof J))throw new Error("Slice step must be numeric or undefined");return e instanceof U?new U(V(e.value,r.value,o.value,n.value)):new R(V(Array.from(e.value),r.value,o.value,n.value).join(""))}evaluateMemberExpression(e,t){const s=this.evaluate(e.object,t);let r,o;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(s,e.property,t);r=this.evaluate(e.property,t)}else r=new R(e.property.value);if(s instanceof W){if(!(r instanceof R))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=s.value.get(r.value)??s.builtins.get(r.value)}else if(s instanceof U||s instanceof R)if(r instanceof G)o=s.value.at(r.value),s instanceof R&&(o=new R(s.value.at(r.value)));else{if(!(r instanceof R))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);o=s.builtins.get(r.value)}else{if(!(r instanceof R))throw new Error(`Cannot access property with non-string: got ${r.type}`);o=s.builtins.get(r.value)}return o instanceof D?o:new J}evaluateSet(e,t){const s=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,s)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,o=this.evaluate(r.object,t);if(!(o instanceof W))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");o.value.set(r.property.value,s)}}return new H}evaluateIf(e,t){const s=this.evaluate(e.test,t);return this.evaluateBlock(s.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const s=new Y(t);let r,o;if("SelectExpression"===e.iterable.type){const t=e.iterable;o=this.evaluate(t.iterable,s),r=t.test}else o=this.evaluate(e.iterable,s);if(!(o instanceof U))throw new Error(`Expected iterable type in for loop: got ${o.type}`);const n=[],a=[];for(let t=0;t<o.value.length;++t){const i=new Y(s),l=o.value[t];let c;if("Identifier"===e.loopvar.type)c=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const s=l;if(t.value.length!==s.value.length)throw new Error(`Too ${t.value.length>s.value.length?"few":"many"} items to unpack`);c=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,s.value[r])}}}}if(r){c(i);if(!this.evaluate(r,i).__bool__().value)continue}n.push(l),a.push(c)}let i="",l=!0;for(let t=0;t<n.length;++t){const r=new Map([["index",new G(t+1)],["index0",new G(t)],["revindex",new G(n.length-t)],["revindex0",new G(n.length-t-1)],["first",new q(0===t)],["last",new q(t===n.length-1)],["length",new G(n.length)],["previtem",t>0?n[t-1]:new J],["nextitem",t<n.length-1?n[t+1]:new J]]);s.setVariable("loop",new W(r)),a[t](s);i+=this.evaluateBlock(e.body,s).value,l=!1}if(l){i+=this.evaluateBlock(e.defaultBlock,s).value}return new R(i)}evaluateMacro(e,t){return t.setVariable(e.name.value,new X(((t,s)=>{const r=new Y(s);let o;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(o=t.pop());for(let s=0;s<e.args.length;++s){const n=e.args[s],a=t[s];if("Identifier"===n.type){const e=n;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==n.type)throw new Error(`Unknown argument type: ${n.type}`);{const e=n,t=a??o?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new H}evaluate(e,t){if(void 0===e)return new J;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"NumericLiteral":return new G(Number(e.value));case"StringLiteral":return new R(e.value);case"BooleanLiteral":return new q(e.value);case"NullLiteral":return new H(e.value);case"ArrayLiteral":return new U(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new Q(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const s=new Map;for(const[r,o]of e.value){const e=this.evaluate(r,t);if(!(e instanceof R))throw new Error(`Object keys must be strings: got ${e.type}`);s.set(e.value,this.evaluate(o,t))}return new W(s)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function Z(e){switch(typeof e){case"number":return new G(e);case"string":return new R(e);case"boolean":return new q(e);case"undefined":return new J;case"object":return null===e?new H:Array.isArray(e)?new U(e.map(Z)):new W(new Map(Object.entries(e).map((([e,t])=>[e,Z(t)]))));case"function":return new X(((t,s)=>Z(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function ee(e,t,s){const r=s??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const s=t?" ".repeat(t):"",o="\n"+s.repeat(r),n=o+s;if("ArrayValue"===e.type){const s=e.value.map((e=>ee(e,t,r+1)));return t?`[${n}${s.join(`,${n}`)}${o}]`:`[${s.join(", ")}]`}{const s=Array.from(e.value.entries()).map((([e,s])=>{const o=`"${e}": ${ee(s,t,r+1)}`;return t?`${n}${o}`:o}));return t?`{${s.join(",")}${o}}`:`{${s.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var te=class{parsed;constructor(e){const t=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=N(t)}render(e){const t=new Y;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",B);for(const[s,r]of Object.entries(e))t.set(s,r);return new K(t).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(e,t,s)=>{s.r(t),s.d(t,{registerBackend:()=>n,resolveBackendAndExecutionProviders:()=>i});const r=new Map,o=[],n=(e,t,s)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{const n=r.get(e);if(void 0===n)r.set(e,{backend:t,priority:s});else{if(n.priority>s)return;if(n.priority===s&&n.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${s}`)}if(s>=0){const t=o.indexOf(e);-1!==t&&o.splice(t,1);for(let t=0;t<o.length;t++)if(r.get(o[t]).priority<=s)return void o.splice(t,0,e);o.push(e)}}},a=async e=>{const t=r.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const s=!!t.initPromise;try{return s||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return s||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},i=async e=>{const t=e.executionProviders||[],s=t.map((e=>"string"==typeof e?e:e.name)),r=0===s.length?o:s;let n;const i=[],l=new Set;for(const e of r){const t=await a(e);"string"==typeof t?i.push({name:e,err:t}):(n||(n=t),n===t&&l.add(e))}if(!n)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(const{name:e,err:t}of i)s.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);const c=t.filter((e=>l.has("string"==typeof e?e:e.name)));return[n,new Proxy(e,{get:(e,t)=>"executionProviders"===t?c:Reflect.get(e,t)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(e,t,s)=>{s.r(t),s.d(t,{registerBackend:()=>r.registerBackend});var r=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(e,t,s)=>{s.r(t),s.d(t,{env:()=>n});var r=s("./node_modules/onnxruntime-common/dist/esm/version.js");let o="warning";const n={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);o=e}},get logLevel(){return o}};Object.defineProperty(n,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(e,t,s)=>{s.r(t),s.d(t,{env:()=>r});const r=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(e,t,s)=>{s.r(t),s.d(t,{InferenceSession:()=>n.InferenceSession,TRACE:()=>i.TRACE,TRACE_FUNC_BEGIN:()=>i.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>i.TRACE_FUNC_END,Tensor:()=>a.Tensor,TrainingSession:()=>l.TrainingSession,env:()=>o.env,registerBackend:()=>r.registerBackend});var r=s("./node_modules/onnxruntime-common/dist/esm/backend.js"),o=s("./node_modules/onnxruntime-common/dist/esm/env.js"),n=s("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),a=s("./node_modules/onnxruntime-common/dist/esm/tensor.js"),i=(s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),s("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js"),s("./node_modules/onnxruntime-common/dist/esm/trace.js")),l=(s("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),s("./node_modules/onnxruntime-common/dist/esm/onnx-value.js"),s("./node_modules/onnxruntime-common/dist/esm/training-session.js"))},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(e,t,s)=>{s.r(t),s.d(t,{InferenceSession:()=>a});var r=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),o=s("./node_modules/onnxruntime-common/dist/esm/tensor.js"),n=s("./node_modules/onnxruntime-common/dist/esm/trace.js");class a{constructor(e){this.handler=e}async run(e,t,s){(0,n.TRACE_FUNC_BEGIN)();const r={};let a={};if("object"!=typeof e||null===e||e instanceof o.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof o.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof s&&null!==s)a=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else{let e=!1;const n=Object.getOwnPropertyNames(t);for(const s of this.outputNames)if(-1!==n.indexOf(s)){const n=t[s];(null===n||n instanceof o.Tensor)&&(e=!0,i=!1,r[s]=n)}if(e){if("object"==typeof s&&null!==s)a=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else a=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(const e of this.outputNames)r[e]=null;const l=await this.handler.run(e,r,a),c={};for(const e in l)if(Object.hasOwnProperty.call(l,e)){const t=l[e];t instanceof o.Tensor?c[e]=t:c[e]=new o.Tensor(t.type,t.data,t.dims)}return(0,n.TRACE_FUNC_END)(),c}async release(){return this.handler.dispose()}static async create(e,t,s,o){let i;(0,n.TRACE_FUNC_BEGIN)();let l={};if("string"==typeof e){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let n=0,a=e.byteLength;if("object"==typeof t&&null!==t)l=t;else if("number"==typeof t){if(n=t,!Number.isSafeInteger(n))throw new RangeError("'byteOffset' must be an integer.");if(n<0||n>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(a=e.byteLength-n,"number"==typeof s){if(a=s,!Number.isSafeInteger(a))throw new RangeError("'byteLength' must be an integer.");if(a<=0||n+a>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-n}].`);if("object"==typeof o&&null!==o)l=o;else if(void 0!==o)throw new TypeError("'options' must be an object.")}else if(void 0!==s)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");i=new Uint8Array(r,n,a)}}const[c,d]=await(0,r.resolveBackendAndExecutionProviders)(l),u=await c.createInferenceSessionHandler(i,d);return(0,n.TRACE_FUNC_END)(),new a(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(e,t,s)=>{s.r(t),s.d(t,{InferenceSession:()=>r});const r=s("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(e,t,s)=>{s.r(t)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(e,t,s)=>{s.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(e,t,s)=>{s.r(t),s.d(t,{tensorToDataURL:()=>r,tensorToImageData:()=>o});const r=(e,t)=>{const s="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=e.dims[3],s.height=e.dims[2];const r=s.getContext("2d");if(null!=r){let o,n;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",i=t?.norm;let l,c;void 0===i||void 0===i.mean?l=[255,255,255,255]:"number"==typeof i.mean?l=[i.mean,i.mean,i.mean,i.mean]:(l=[i.mean[0],i.mean[1],i.mean[2],0],void 0!==i.mean[3]&&(l[3]=i.mean[3])),void 0===i||void 0===i.bias?c=[0,0,0,0]:"number"==typeof i.bias?c=[i.bias,i.bias,i.bias,i.bias]:(c=[i.bias[0],i.bias[1],i.bias[2],0],void 0!==i.bias[3]&&(c[3]=i.bias[3]));const d=n*o;let u=0,m=d,p=2*d,_=-1;"RGBA"===a?(u=0,m=d,p=2*d,_=3*d):"RGB"===a?(u=0,m=d,p=2*d):"RBG"===a&&(u=0,p=d,m=2*d);for(let t=0;t<n;t++)for(let s=0;s<o;s++){const o=(e.data[u++]-c[0])*l[0],n=(e.data[m++]-c[1])*l[1],a=(e.data[p++]-c[2])*l[2],i=-1===_?255:(e.data[_++]-c[3])*l[3];r.fillStyle="rgba("+o+","+n+","+a+","+i+")",r.fillRect(s,t,1,1)}if("toDataURL"in s)return s.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},o=(e,t)=>{const s="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==s)throw new Error("Can not access image data");{let o,n,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],n=e.dims[1],a=e.dims[3]):(o=e.dims[3],n=e.dims[2],a=e.dims[1]);const i=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let c,d;void 0===l||void 0===l.mean?c=[255,255,255,255]:"number"==typeof l.mean?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(c[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const u=n*o;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const m=4;let p=0,_=1,h=2,g=3,f=0,M=u,w=2*u,T=-1;"RGBA"===i?(f=0,M=u,w=2*u,T=3*u):"RGB"===i?(f=0,M=u,w=2*u):"RBG"===i&&(f=0,w=u,M=2*u),r=s.createImageData(o,n);for(let t=0;t<n*o;p+=m,_+=m,h+=m,g+=m,t++)r.data[p]=(e.data[f++]-d[0])*c[0],r.data[_]=(e.data[M++]-d[1])*c[1],r.data[h]=(e.data[w++]-d[2])*c[2],r.data[g]=-1===T?255:(e.data[T++]-d[3])*c[3]}return r}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(e,t,s)=>{s.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(e,t,s)=>{s.r(t),s.d(t,{bufferToTensor:()=>o,tensorFromGpuBuffer:()=>i,tensorFromImage:()=>n,tensorFromMLTensor:()=>l,tensorFromPinnedBuffer:()=>c,tensorFromTexture:()=>a});var r=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const o=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:s,width:o}=t,n=t.norm??{mean:255,bias:0};let a,i;a="number"==typeof n.mean?[n.mean,n.mean,n.mean,n.mean]:[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],i="number"==typeof n.bias?[n.bias,n.bias,n.bias,n.bias]:[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const l=void 0!==t.format?t.format:"RGBA",c=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",d=s*o,u="RGBA"===c?new Float32Array(4*d):new Float32Array(3*d);let m=4,p=0,_=1,h=2,g=3,f=0,M=d,w=2*d,T=-1;"RGB"===l&&(m=3,p=0,_=1,h=2,g=-1),"RGBA"===c?T=3*d:"RBG"===c?(f=0,w=d,M=2*d):"BGR"===c&&(w=0,M=d,f=2*d);for(let t=0;t<d;t++,p+=m,h+=m,_+=m,g+=m)u[f++]=(e[p]+i[0])/a[0],u[M++]=(e[_]+i[1])/a[1],u[w++]=(e[h]+i[2])/a[2],-1!==T&&-1!==g&&(u[T++]=(e[g]+i[3])/a[3]);return"RGBA"===c?new r.Tensor("float32",u,[1,4,s,o]):new r.Tensor("float32",u,[1,3,s,o])},n=async(e,t)=>{const s="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,n="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,a="string"==typeof e;let i,l=t??{};const c=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(s){const s=c();s.width=e.width,s.height=e.height;const r=d(s);if(null==r)throw new Error("Can not access image data");{let s=e.height,o=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(s=t.resizedHeight,o=t.resizedWidth),void 0!==t){if(l=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=s,l.width=o}else l.tensorFormat="RGBA",l.height=s,l.width=o;r.drawImage(e,0,0),i=r.getImageData(0,0,o,s).data}}else{if(!r){if(n){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const s=c();s.width=e.width,s.height=e.height;const r=d(s);if(null!=r){const t=e.height,s=e.width;return r.drawImage(e,0,0,s,t),i=r.getImageData(0,0,s,t).data,l.height=t,l.width=s,o(i,l)}throw new Error("Can not access image data")}if(a)return new Promise(((t,s)=>{const r=c(),n=d(r);if(!e||!n)return s();const a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{r.width=a.width,r.height=a.height,n.drawImage(a,0,0,r.width,r.height);const e=n.getImageData(0,0,r.width,r.height);l.height=r.height,l.width=r.width,t(o(e.data,l))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let s,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(s=t.resizedHeight,r=t.resizedWidth):(s=e.height,r=e.width),void 0!==t&&(l=t),l.format="RGBA",l.height=s,l.width=r,void 0!==t){const t=c();t.width=r,t.height=s;const o=d(t);if(null==o)throw new Error("Can not access image data");o.putImageData(e,0,0),i=o.getImageData(0,0,r,s).data}else i=e.data}}if(void 0!==i)return o(i,l);throw new Error("Input data provided is not supported - aborted tensor creation")},a=(e,t)=>{const{width:s,height:o,download:n,dispose:a}=t,i=[1,o,s,4];return new r.Tensor({location:"texture",type:"float32",texture:e,dims:i,download:n,dispose:a})},i=(e,t)=>{const{dataType:s,dims:o,download:n,dispose:a}=t;return new r.Tensor({location:"gpu-buffer",type:s??"float32",gpuBuffer:e,dims:o,download:n,dispose:a})},l=(e,t)=>{const{dataType:s,dims:o,download:n,dispose:a}=t;return new r.Tensor({location:"ml-tensor",type:s??"float32",mlTensor:e,dims:o,download:n,dispose:a})},c=(e,t,s)=>new r.Tensor({location:"cpu-pinned",type:e,data:t,dims:s??[t.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(e,t,s)=>{s.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(e,t,s)=>{s.r(t),s.d(t,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>o,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>r,checkTypedArray:()=>a});const r=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),o=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let n=!1;const a=()=>{if(!n){n=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,s="undefined"!=typeof Float16Array&&Float16Array.from;e&&(r.set("int64",BigInt64Array),o.set(BigInt64Array,"int64")),t&&(r.set("uint64",BigUint64Array),o.set(BigUint64Array,"uint64")),s?(r.set("float16",Float16Array),o.set(Float16Array,"float16")):r.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(e,t,s)=>{s.r(t),s.d(t,{Tensor:()=>i});var r=s("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),o=s("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),n=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),a=s("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class i{constructor(e,t,s){let r,o;if((0,n.checkTypedArray)(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,o=e.dims,e.location){case"cpu-pinned":{const t=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,i;if("string"==typeof e)if(r=e,i=s,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const s=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===s)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&s===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${s.name} as data.`);a="uint64"===e||"int64"===e?s.from(t,BigInt):s.from(t)}else if(t instanceof s)a=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${s}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");a=Uint8Array.from(t)}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",a=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",a=Uint8Array.from(e);else{const t=n.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,a=e}if(void 0===i)i=[a.length];else if(!Array.isArray(i))throw new TypeError("A tensor's dims must be a number array");o=i,this.cpuData=a,this.dataLocation="cpu"}const i=(0,a.calculateSize)(o);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=o,this.size=i}static async fromImage(e,t){return(0,o.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,o.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,o.tensorFromGpuBuffer)(e,t)}static fromMLTensor(e,t){return(0,o.tensorFromMLTensor)(e,t)}static fromPinnedBuffer(e,t,s){return(0,o.tensorFromPinnedBuffer)(e,t,s)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,a.tensorReshape)(this,e)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(e,t,s)=>{s.r(t),s.d(t,{calculateSize:()=>o,tensorReshape:()=>n});var r=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const o=e=>{let t=1;for(let s=0;s<e.length;s++){const r=e[s];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${s}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${s}] must be a non-negative integer, got: ${r}`);t*=r}return t},n=(e,t)=>{switch(e.location){case"cpu":return new r.Tensor(e.type,e.data,t);case"cpu-pinned":return new r.Tensor({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new r.Tensor({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new r.Tensor({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new r.Tensor({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(e,t,s)=>{s.r(t),s.d(t,{Tensor:()=>r});const r=s("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(e,t,s)=>{s.r(t),s.d(t,{TRACE:()=>o,TRACE_FUNC_BEGIN:()=>a,TRACE_FUNC_END:()=>i});var r=s("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const o=(e,t)=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&console.timeStamp(`${e}::ORT::${t}`)},n=(e,t)=>{const s=(new Error).stack?.split(/\r\n|\r|\n/g)||[];let r=!1;for(let n=0;n<s.length;n++){if(r&&!s[n].includes("TRACE_FUNC")){let r=`FUNC_${e}::${s[n].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void o("CPU",r)}s[n].includes("TRACE_FUNC")&&(r=!0)}},a=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&n("BEGIN",e)},i=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&n("END",e)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(e,t,s)=>{s.r(t),s.d(t,{TrainingSession:()=>n});var r=s("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),o=s("./node_modules/onnxruntime-common/dist/esm/tensor.js");class n{constructor(e,t,s){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,t){const s=e.evalModel||"",o=e.optimizerModel||"",a=t||{},[i,l]=await(0,r.resolveBackendAndExecutionProviders)(a);if(i.createTrainingSessionHandler){const t=await i.createTrainingSessionHandler(e.checkpointState,e.trainModel,s,o,l);return new n(t,!!e.optimizerModel,!!e.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,s,r,n){const a={};let i={};if("object"!=typeof s||null===s||s instanceof o.Tensor||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof o.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(const e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);a[e]=null}if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const s=Object.getOwnPropertyNames(r);for(const n of t)if(-1!==s.indexOf(n)){const t=r[n];(null===t||t instanceof o.Tensor)&&(e=!0,l=!1,a[n]=t)}if(e){if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else i=r}}else if(void 0!==r)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of e)if(void 0===s[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(l)for(const e of t)a[e]=null;return[a,i]}convertHandlerReturnTypeToMapOfTensors(e){const t={};for(const s in e)if(Object.hasOwnProperty.call(e,s)){const r=e[s];r instanceof o.Tensor?t[s]=r:t[s]=new o.Tensor(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,s){const[r,o]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,s),n=await this.handler.runTrainStep(e,r,o);return this.convertHandlerReturnTypeToMapOfTensors(n)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,s){if(this.hasEvalModel){const[r,o]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,s),n=await this.handler.runEvalStep(e,r,o);return this.convertHandlerReturnTypeToMapOfTensors(n)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){const s=await this.getParametersSize(t);if(e.length!==4*s)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(e,t,s)=>{s.r(t),s.d(t,{TrainingSession:()=>r});const r=s("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(e,t,s)=>{s.r(t),s.d(t,{version:()=>r});const r="1.20.1"},"./src/backends/onnx.js":(e,t,s)=>{var r;s.r(t),s.d(t,{Tensor:()=>i.Tensor,createInferenceSession:()=>g,deviceToExecutionProviders:()=>_,isONNXProxy:()=>w,isONNXTensor:()=>f});var o=s("./src/env.js"),n=s("onnxruntime-node"),a=s("?8b6b"),i=s("./node_modules/onnxruntime-common/dist/esm/index.js");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let d,u;const m=Symbol.for("onnxruntime");if(m in globalThis)u=globalThis[m];else if(o.apis.IS_NODE_ENV){switch(u=n.default??n,process.platform){case"win32":c.push("dml");break;case"linux":"x64"===process.arch&&c.push("cuda")}c.push("cpu"),d=["cpu"]}else u=r||(r=s.t(a,2)),o.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),d=["wasm"];const p=u.InferenceSession;function _(e=null){if(!e)return d;switch(e){case"auto":return c;case"gpu":return c.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(c.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${c.join(", ")}.`)}let h=null;async function g(e,t,s){h&&await h;const r=p.create(e,t);h??=r;const o=await r;return o.config=s,o}function f(e){return e instanceof u.Tensor}const M=u?.env;function w(){return M?.wasm?.proxy}M?.wasm&&(M.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`,M.wasm.proxy=!1,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(M.wasm.numThreads=1)),M?.webgpu&&(M.webgpu.powerPreference="high-performance"),o.env.backends.onnx=M},"./src/base/feature_extraction_utils.js":(e,t,s)=>{s.r(t),s.d(t,{FeatureExtractor:()=>a,validate_audio_inputs:()=>i});var r=s("./src/utils/constants.js"),o=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class a extends o.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t){return new this(await(0,n.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function i(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,t,s)=>{s.r(t),s.d(t,{ImageProcessor:()=>w,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>M,post_process_object_detection:()=>m,post_process_panoptic_segmentation:()=>f,post_process_semantic_segmentation:()=>p});var r=s("./src/utils/generic.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js"),a=(s("./src/utils/image.js"),s("./src/utils/core.js")),i=s("./src/utils/hub.js"),l=s("./src/utils/constants.js");function c(e,t,s=0,r=null){const o=e/t;let a=(0,n.bankers_round)(o)*t;return null!==r&&a>r&&(a=Math.floor(o)*t),a<s&&(a=Math.ceil(o)*t),a}function d([e,t],s){return[Math.max(Math.floor(e/s),1)*s,Math.max(Math.floor(t/s),1)*s]}function u([e,t,s,r]){return[e-s/2,t-r/2,e+s/2,t+r/2]}function m(e,t=.5,s=null,r=!1){const o=e.logits,a=e.pred_boxes,[i,l,c]=o.dims;if(null!==s&&s.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let e=0;e<i;++e){let i=null!==s?s[e]:null,m={boxes:[],classes:[],scores:[]},p=o[e],_=a[e];for(let e=0;e<l;++e){let s,o=p[e],a=[];if(r){s=o.sigmoid().data;for(let e=0;e<s.length;++e)s[e]>t&&a.push(e)}else{let e=(0,n.max)(o.data)[1];if(e===c-1)continue;if(s=(0,n.softmax)(o.data),s[e]<t)continue;a.push(e)}for(const t of a){let r=_[e].data;r=u(r),null!==i&&(r=r.map(((e,t)=>e*i[(t+1)%2]))),m.boxes.push(r),m.classes.push(t),m.scores.push(s[t])}}d.push(m)}return d}function p(e,t=null){const s=e.logits,r=s.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const n=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let a=s[e];null!==r&&(a=(0,o.interpolate)(a,r,"bilinear",!1));const[i,l]=r??a.dims.slice(-2),c=new o.Tensor("int32",new Int32Array(i*l),[i,l]),d=a[0].data,u=c.data;for(let e=1;e<a.dims[0];++e){const t=a[e].data;for(let s=0;s<t.length;++s)t[s]>d[s]&&(d[s]=t[s],u[s]=e)}const m=new Array(a.dims[0]);for(let e=0;e<u.length;++e){const t=u[e];m[t]=t}const p=m.filter((e=>void 0!==e));n.push({segmentation:c,labels:p})}return n}function _(e,t,s,r){const o=[],a=[],i=[];for(let l=0;l<e.dims[0];++l){const c=e[l],d=t[l],u=(0,n.max)(c.data)[1];if(u===r)continue;const m=(0,n.softmax)(c.data)[u];m>s&&(o.push(d),a.push(m),i.push(u))}return[o,a,i]}function h(e,t,s,r=.5,o=.8){const n=[];let a=0,i=0;const l=t[s].data;for(let t=0;t<e.length;++t)e[t]===s&&(n.push(t),++a),l[t]>=r&&++i;let c=a>0&&i>0;if(c){c=a/i>o}return[c,n]}function g(e,t,s,r,n,a=null,i=null){const[l,c]=i??e[0].dims,d=new o.Tensor("int32",new Int32Array(l*c),[l,c]),u=[];if(null!==i)for(let t=0;t<e.length;++t)e[t]=(0,o.interpolate)(e[t],i,"bilinear",!1);const m=new Int32Array(e[0].data.length),p=new Float32Array(e[0].data.length);for(let s=0;s<e.length;++s){let r=t[s];const o=e[s].data;for(let e=0;e<o.length;++e)o[e]*=r,o[e]>p[e]&&(m[e]=s,p[e]=o[e])}let _=0;const g=d.data;for(let o=0;o<s.length;++o){const a=s[o],[i,l]=h(m,e,o,r,n);if(i){++_;for(const e of l)g[e]=_;u.push({id:_,label_id:a,score:t[o]})}}return[d,u]}function f(e,t=.5,s=.5,r=.8,n=null,a=null){null===n&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),n=new Set);const i=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[c,d,u]=i.dims;if(u-=1,null!==a&&a.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let m=[];for(let e=0;e<c;++e){let c=null!==a?a[e]:null,d=i[e],p=l[e],[h,f,M]=_(d,p,t,u);if(0===M.length){let[e,t]=c??p.dims.slice(-2),s=new o.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);m.push({segmentation:s,segments_info:[]});continue}let[w,T]=g(h,f,M,s,r,n,c);m.push({segmentation:w,segments_info:T})}return m}function M(e,t=.5,s=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class w extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,s=2){const r=e.height,o=e.width,n=t.height,a=t.width;let i=Math.min(r,n),l=Math.min(o,a);return i===r&&l===o?e:(r>o?l=Math.floor(o*i/r):o>r&&(i=Math.floor(r*l/o)),await e.resize(l,i,{resample:s}))}async crop_margin(e,t=200){const s=e.clone().grayscale(),r=(0,n.min)(s.data)[0],o=(0,n.max)(s.data)[0]-r;if(0===o)return e;const a=t/255;let i=s.width,l=s.height,c=0,d=0;const u=s.data;for(let e=0;e<s.height;++e){const t=e*s.width;for(let n=0;n<s.width;++n)(u[t+n]-r)/o<a&&(i=Math.min(i,n),l=Math.min(l,e),c=Math.max(c,n),d=Math.max(d,e))}return e=await e.crop([i,l,c,d])}pad_image(e,t,s,{mode:r="constant",center:o=!1,constant_values:n=0}={}){const[i,l,c]=t;let d,u;if("number"==typeof s?(d=s,u=s):"square"===s?d=u=Math.max(i,l):(d=s.width,u=s.height),d!==l||u!==i){const s=new Float32Array(d*u*c);if(Array.isArray(n))for(let e=0;e<s.length;++e)s[e]=n[e%c];else 0!==n&&s.fill(n);const[m,p]=o?[Math.floor((d-l)/2),Math.floor((u-i)/2)]:[0,0];for(let t=0;t<i;++t){const r=(t+p)*d,o=t*l;for(let t=0;t<l;++t){const n=(r+t+m)*c,a=(o+t)*c;for(let t=0;t<c;++t)s[n+t]=e[a+t]}}if("symmetric"===r){if(o)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=i-1,r=l-1;for(let o=0;o<u;++o){const n=o*d,u=(0,a.calculateReflectOffset)(o,t)*l;for(let t=0;t<d;++t){if(o<i&&t<l)continue;const d=(n+t)*c,m=(u+(0,a.calculateReflectOffset)(t,r))*c;for(let t=0;t<c;++t)s[d+t]=e[m+t]}}}e=s,t=[u,d,c]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[s,r]=e.size;let o,n;if(this.do_thumbnail){const{height:e,width:s}=t;o=Math.min(e,s)}else Number.isInteger(t)?(o=t,n=this.config.max_size??o):void 0!==t&&(o=t.shortest_edge,n=t.longest_edge);if(void 0!==o||void 0!==n){const e=void 0===o?1:Math.max(o/s,o/r),t=s*e,a=r*e,i=void 0===n?1:Math.min(n/t,n/a);let l=Math.floor(Number((t*i).toFixed(2))),c=Math.floor(Number((a*i).toFixed(2)));return void 0!==this.size_divisibility&&([l,c]=d([l,c],this.size_divisibility)),[l,c]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,o=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=o/r,n=e/s;Math.abs(1-n)<Math.abs(1-t)?t=n:n=t,o=c(t*r,this.config.ensure_multiple_of),e=c(n*s,this.config.ensure_multiple_of)}return[e,o]}if(void 0!==this.size_divisibility)return d([s,r],this.size_divisibility);if(void 0!==t.min_pixels&&void 0!==t.max_pixels){const{min_pixels:e,max_pixels:o}=t;return function(e,t,s=28,r=3136,o=1003520){if(e<s||t<s)throw new Error(`height:${e} or width:${t} must be larger than factor:${s}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let n=Math.round(e/s)*s,a=Math.round(t/s)*s;if(n*a>o){const r=Math.sqrt(e*t/o);n=Math.floor(e/r/s)*s,a=Math.floor(t/r/s)*s}else if(n*a<r){const o=Math.sqrt(r/(e*t));n=Math.ceil(e*o/s)*s,a=Math.ceil(t*o/s)*s}return[n,a]}(r,s,this.config.patch_size*this.config.merge_size,e,o)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,s]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,s,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:s=null,do_convert_rgb:r=null,do_convert_grayscale:n=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[i,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():n&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,s;Number.isInteger(this.crop_size)?(t=this.crop_size,s=this.crop_size):(t=this.crop_size.width,s=this.crop_size.height),e=await e.center_crop(t,s)}const c=[e.height,e.width];let u=Float32Array.from(e.data),m=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(u),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let s=this.image_std;if(Array.isArray(this.image_std)||(s=new Array(e.channels).fill(t)),t.length!==e.channels||s.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<u.length;r+=e.channels)for(let o=0;o<e.channels;++o)u[r+o]=(u[r+o]-t[o])/s[o]}if(s??this.do_pad)if(this.pad_size){const t=this.pad_image(u,[e.height,e.width,e.channels],this.pad_size);[u,m]=t}else if(this.size_divisibility){const[e,t]=d([m[1],m[0]],this.size_divisibility);[u,m]=this.pad_image(u,m,{width:e,height:t})}if(a??this.do_flip_channel_order){if(3!==m[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<u.length;e+=3){const t=u[e];u[e]=u[e+2],u[e+2]=t}}return{original_size:[l,i],reshaped_input_size:c,pixel_values:new o.Tensor("float32",u,m).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const s=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,o.stack)(s.map((e=>e.pixel_values)),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}static async from_pretrained(e,t){return new this(await(0,i.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":(e,t,s)=>{s.r(t),s.d(t,{Processor:()=>a});var r=s("./src/utils/constants.js"),o=s("./src/utils/generic.js"),n=s("./src/utils/hub.js");class a extends o.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(e,t){super(),this.config=e,this.components=t}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t){const[s,o]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(e,r.PROCESSOR_NAME,!0,t):{},Promise.all(this.classes.filter((e=>e in this)).map((async s=>{const r=await this[s].from_pretrained(e,t);return[s.replace(/_class$/,""),r]}))).then(Object.fromEntries)]);return new this(s,o)}}},"./src/configs.js":(e,t,s)=>{s.r(t),s.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>i,getKeyValueShapes:()=>a});var r=s("./src/utils/core.js"),o=s("./src/utils/hub.js");function n(e){const t={};let s={};switch(e.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":s=n(e.text_config);break;case"moondream1":s=n(e.phi_config);break;case"musicgen":s=n(e.decoder);break;case"multi_modality":s=n(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const o=n(e.decoder),a="num_decoder_layers"in o,i=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return a?(i.num_decoder_layers=o.num_decoder_layers,i.num_decoder_heads=o.num_decoder_heads,i.decoder_hidden_size=o.decoder_hidden_size,i.num_encoder_layers=o.num_encoder_layers,i.num_encoder_heads=o.num_encoder_heads,i.encoder_hidden_size=o.encoder_hidden_size):(i.num_layers=o.num_layers,i.num_heads=o.num_heads,i.hidden_size=o.hidden_size),i}const o={...s,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const s in t)o[s]=e[t[s]];return o}function a(e,{prefix:t="past_key_values",batch_size:s=1}={}){const r={},o=e.normalized_config;if(o.is_encoder_decoder&&"num_encoder_heads"in o&&"num_decoder_heads"in o){const e=o.encoder_dim_kv??o.encoder_hidden_size/o.num_encoder_heads,n=o.decoder_dim_kv??o.decoder_hidden_size/o.num_decoder_heads,a=[s,o.num_encoder_heads,0,e],i=[s,o.num_decoder_heads,0,n];for(let e=0;e<o.num_decoder_layers;++e)r[`${t}.${e}.encoder.key`]=a,r[`${t}.${e}.encoder.value`]=a,r[`${t}.${e}.decoder.key`]=i,r[`${t}.${e}.decoder.value`]=i}else{const e=o.num_heads,n=o.num_layers,a=o.dim_kv??o.hidden_size/(o.num_attention_heads??e);if("falcon"===o.model_type){const o=[s*e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=o}else if(o.multi_query){const o=[s*e,0,2*a];for(let e=0;e<n;++e)r[`${t}.${e}.key_value`]=o}else if("bloom"===o.model_type){const o=[s*e,a,0],i=[s*e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=i}else if("openelm"===o.model_type)for(let o=0;o<n;++o){const n=[s,e[o],0,a];r[`${t}.${o}.key`]=n,r[`${t}.${o}.value`]=n}else{const o=[s,e,0,a];for(let e=0;e<n;++e)r[`${t}.${e}.key`]=o,r[`${t}.${e}.value`]=o}}return r}class i{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=n(this)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:n=!1,revision:a="main"}={}){!s||s instanceof i||(s=new i(s));const l=s??await async function(e,t){return await(0,o.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:n,revision:a});return new this(l)}}class l{static async from_pretrained(...e){return i.from_pretrained(...e)}}},"./src/env.js":(e,t,s)=>{s.r(t),s.d(t,{apis:()=>h,env:()=>T});var r=s("fs"),o=s("path"),n=s("url");const a="undefined"!=typeof window&&void 0!==window.document,i="undefined"!=typeof self&&"DedicatedWorkerGlobalScope"===self.constructor?.name,l="undefined"!=typeof self&&"caches"in self,c="undefined"!=typeof navigator&&"gpu"in navigator,d="undefined"!=typeof navigator&&"ml"in navigator,u="undefined"!=typeof process,m=u&&"node"===process?.release?.name,p=!b(r.default),_=!b(o.default),h=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:i,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:c,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:m,IS_FS_AVAILABLE:p,IS_PATH_AVAILABLE:_}),g=p&&_;let f="./";if(g){const e=Object(import.meta).url;e?f=o.default.dirname(o.default.dirname(n.default.fileURLToPath(e))):"undefined"!=typeof __dirname&&(f=o.default.dirname(__dirname))}const M=g?o.default.join(f,"/.cache/"):null,w="/models/",T={version:"3.3.2",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||i),localModelPath:g?o.default.join(f,w):w,useFS:p,useBrowserCache:l,useFSCache:p,cacheDir:M,useCustomCache:!1,customCache:null};function b(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":(e,t,s)=>{s.r(t),s.d(t,{GenerationConfig:()=>o});var r=s("./src/utils/core.js");class o{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,t,s)=>{s.r(t),s.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>f,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>i,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>_,MinNewTokensLengthLogitsProcessor:()=>h,NoBadWordsLogitsProcessor:()=>g,NoRepeatNGramLogitsProcessor:()=>m,RepetitionPenaltyLogitsProcessor:()=>p,SuppressTokensAtBeginLogitsProcessor:()=>d,TemperatureLogitsWarper:()=>M,TopKLogitsWarper:()=>T,TopPLogitsWarper:()=>w,WhisperTimeStampLogitsProcessor:()=>u});var r=s("./src/utils/generic.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/maths.js"));class n extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let s=t;for(const t of this.processors)s=t(e,s);return s}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let s=0;s<e.length;++s)if(1===e[s].length){const e=t[s].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class c extends n{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.max_length-1){const e=t[s].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class d extends n{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length===this.begin_index){const e=t[s].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class u extends n{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data;if(r[this.no_timestamps_token_id]=-1/0,e[s].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const n=e[s].slice(this.begin_index),a=n.length>=1&&n[n.length-1]>=this.timestamp_begin,i=n.length<2||n[n.length-2]>=this.timestamp_begin;if(a&&(i?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,o.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,o.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class m extends n{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,s=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let s=0;s<this.no_repeat_ngram_size;++s)t.push(e[r+s]);s.push(t.map(Number))}const r=new Map;for(const e of s){const t=e.slice(0,e.length-1),s=JSON.stringify(t),o=r.get(s)??[];o.push(e[e.length-1]),r.set(s,o)}return r}getGeneratedNgrams(e,t){const s=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data,o=this.calcBannedNgramTokens(e[s]);for(const e of o)r[e]=-1/0}return t}}class p extends n{constructor(e){super(),this.penalty=e}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data;for(const t of new Set(e[s])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class _ extends n{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s)if(e[s].length<this.min_length){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class h extends n{constructor(e,t,s){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(s)?s:[s]}_call(e,t){for(let s=0;s<e.length;++s){if(e[s].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[s].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class g extends n{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let s=0;s<e.length;++s){const r=t[s].data,o=e[s];for(const e of this.bad_words_ids){let t=!0;for(let s=1;s<=e.length-1&&e.length<o.length;++s)if(e.at(-s-1)!=o.at(-s)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class f extends n{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const s=e.length,r=t.slice([0,s],null),o=t.slice([s,t.dims[0]],null);for(let e=0;e<o.data.length;++e)o.data[e]+=(r.data[e]-o.data[e])*this.guidance_scale;return o}}class M extends a{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const s=t.data;for(let e=0;e<s.length;++e)s[e]/=this.temperature;return t}}class w extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(s)||s<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=s}}class T extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,s),this.filter_value=t}}},"./src/generation/logits_sampler.js":(e,t,s)=>{s.r(t),s.d(t,{LogitsSampler:()=>a});var r=s("./src/utils/generic.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");s("./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let s=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-s);else{let e=t*s;r=r.slice(e,e+s)}return r}randomSelect(e){let t=0;for(let s=0;s<e.length;++s)t+=e[s];let s=Math.random()*t;for(let t=0;t<e.length;++t)if(s-=e[t],s<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new c(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new i(e)}}class i extends a{async sample(e){const t=(0,n.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,r]=await(0,o.topk)(e,t),a=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]}))}}class c extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[s,r]=await(0,o.topk)(e,t),a=(0,n.softmax)(s.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(a[t])]))}}},"./src/generation/stopping_criteria.js":(e,t,s)=>{s.r(t),s.d(t,{EosTokenCriteria:()=>i,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>o,StoppingCriteriaList:()=>n});var r=s("./src/utils/generic.js");class o extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class n extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof n?e=e.criteria:e instanceof o&&(e=[e]),this.criteria.push(...e)}_call(e,t){const s=new Array(e.length).fill(!1);for(const r of this.criteria){const o=r(e,t);for(let e=0;e<s.length;++e)s[e]||=o[e]}return s}[Symbol.iterator](){return this.criteria.values()}}class a extends o{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class i extends o{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,t,s)=>{s.r(t),s.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var r=s("./src/utils/core.js"),o=s("./src/tokenizers.js"),n=s("./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const i=n.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:r=null,skip_special_tokens:o=!0,decode_kwargs:n={},...a}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=s??i,this.token_callback_function=r,this.decode_kwargs={skip_special_tokens:o,...n,...a},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const t=e[0];this.token_callback_function?.(t),this.token_cache=(0,r.mergeArrays)(this.token_cache,t);const s=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let n;s.endsWith("\n")?(n=s.slice(this.print_len),this.token_cache=[],this.print_len=0):s.length>0&&(0,o.is_chinese_char)(s.charCodeAt(s.length-1))?(n=s.slice(this.print_len),this.print_len+=n.length):(n=s.slice(this.print_len,s.lastIndexOf(" ")+1),this.print_len+=n.length),this.on_finalized_text(n,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===i&&n.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class c extends l{constructor(e,{skip_prompt:t=!1,callback_function:s=null,token_callback_function:r=null,on_chunk_start:o=null,on_chunk_end:n=null,on_finalize:a=null,time_precision:i=.02,skip_special_tokens:l=!0,decode_kwargs:c={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:s,token_callback_function:r,decode_kwargs:c}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=o,this.on_chunk_end=n,this.on_finalize=a,this.time_precision=i,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const s=Number(t[0])-this.timestamp_begin;if(s>=0){const t=s*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(t):this.on_chunk_start?.(t),this.waiting_for_timestamp=!this.waiting_for_timestamp,e=[[]]}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,t,s)=>{s.r(t),s.d(t,{ASTForAudioClassification:()=>hs,ASTModel:()=>_s,ASTPreTrainedModel:()=>ps,AlbertForMaskedLM:()=>kt,AlbertForQuestionAnswering:()=>xt,AlbertForSequenceClassification:()=>Pt,AlbertModel:()=>bt,AlbertPreTrainedModel:()=>Tt,AutoModel:()=>tc,AutoModelForAudioClassification:()=>Tc,AutoModelForAudioFrameClassification:()=>Pc,AutoModelForCTC:()=>wc,AutoModelForCausalLM:()=>lc,AutoModelForDepthEstimation:()=>Fc,AutoModelForDocumentQuestionAnswering:()=>xc,AutoModelForImageClassification:()=>mc,AutoModelForImageFeatureExtraction:()=>Sc,AutoModelForImageMatting:()=>kc,AutoModelForImageSegmentation:()=>pc,AutoModelForImageToImage:()=>yc,AutoModelForMaskGeneration:()=>Mc,AutoModelForMaskedLM:()=>cc,AutoModelForNormalEstimation:()=>vc,AutoModelForObjectDetection:()=>gc,AutoModelForPoseEstimation:()=>Cc,AutoModelForQuestionAnswering:()=>dc,AutoModelForSemanticSegmentation:()=>_c,AutoModelForSeq2SeqLM:()=>oc,AutoModelForSequenceClassification:()=>sc,AutoModelForSpeechSeq2Seq:()=>nc,AutoModelForTextToSpectrogram:()=>ac,AutoModelForTextToWaveform:()=>ic,AutoModelForTokenClassification:()=>rc,AutoModelForUniversalSegmentation:()=>hc,AutoModelForVision2Seq:()=>uc,AutoModelForXVector:()=>bc,AutoModelForZeroShotObjectDetection:()=>fc,BartForConditionalGeneration:()=>Nt,BartForSequenceClassification:()=>Bt,BartModel:()=>jt,BartPretrainedModel:()=>zt,BaseModelOutput:()=>Y,BeitForImageClassification:()=>ln,BeitModel:()=>an,BeitPreTrainedModel:()=>nn,BertForMaskedLM:()=>ee,BertForQuestionAnswering:()=>re,BertForSequenceClassification:()=>te,BertForTokenClassification:()=>se,BertModel:()=>Z,BertPreTrainedModel:()=>K,BlenderbotForConditionalGeneration:()=>$t,BlenderbotModel:()=>Wt,BlenderbotPreTrainedModel:()=>qt,BlenderbotSmallForConditionalGeneration:()=>Xt,BlenderbotSmallModel:()=>Qt,BlenderbotSmallPreTrainedModel:()=>Ut,BloomForCausalLM:()=>fo,BloomModel:()=>go,BloomPreTrainedModel:()=>ho,CLIPModel:()=>Ns,CLIPPreTrainedModel:()=>js,CLIPSegForImageSegmentation:()=>Zs,CLIPSegModel:()=>Ks,CLIPSegPreTrainedModel:()=>Ys,CLIPTextModel:()=>Bs,CLIPTextModelWithProjection:()=>Vs,CLIPVisionModel:()=>Os,CLIPVisionModelWithProjection:()=>Ds,CamembertForMaskedLM:()=>Ee,CamembertForQuestionAnswering:()=>ze,CamembertForSequenceClassification:()=>Le,CamembertForTokenClassification:()=>Ie,CamembertModel:()=>Ae,CamembertPreTrainedModel:()=>Se,CausalLMOutput:()=>Nc,CausalLMOutputWithPast:()=>Bc,ChineseCLIPModel:()=>Us,ChineseCLIPPreTrainedModel:()=>$s,ClapAudioModelWithProjection:()=>Ai,ClapModel:()=>Ci,ClapPreTrainedModel:()=>vi,ClapTextModelWithProjection:()=>Si,CodeGenForCausalLM:()=>Tr,CodeGenModel:()=>wr,CodeGenPreTrainedModel:()=>Mr,CohereForCausalLM:()=>Qr,CohereModel:()=>Ur,CoherePreTrainedModel:()=>$r,ConvBertForMaskedLM:()=>we,ConvBertForQuestionAnswering:()=>Pe,ConvBertForSequenceClassification:()=>Te,ConvBertForTokenClassification:()=>be,ConvBertModel:()=>Me,ConvBertPreTrainedModel:()=>fe,ConvNextForImageClassification:()=>na,ConvNextModel:()=>oa,ConvNextPreTrainedModel:()=>ra,ConvNextV2ForImageClassification:()=>la,ConvNextV2Model:()=>ia,ConvNextV2PreTrainedModel:()=>aa,DPTForDepthEstimation:()=>Dn,DPTModel:()=>On,DPTPreTrainedModel:()=>Vn,DebertaForMaskedLM:()=>Be,DebertaForQuestionAnswering:()=>De,DebertaForSequenceClassification:()=>Ve,DebertaForTokenClassification:()=>Oe,DebertaModel:()=>Ne,DebertaPreTrainedModel:()=>je,DebertaV2ForMaskedLM:()=>qe,DebertaV2ForQuestionAnswering:()=>Ue,DebertaV2ForSequenceClassification:()=>We,DebertaV2ForTokenClassification:()=>$e,DebertaV2Model:()=>Re,DebertaV2PreTrainedModel:()=>Ge,DecisionTransformerModel:()=>al,DecisionTransformerPreTrainedModel:()=>nl,DeiTForImageClassification:()=>yn,DeiTModel:()=>kn,DeiTPreTrainedModel:()=>xn,DepthAnythingForDepthEstimation:()=>Rn,DepthAnythingPreTrainedModel:()=>Gn,DepthProForDepthEstimation:()=>Xn,DepthProPreTrainedModel:()=>Qn,DetrForObjectDetection:()=>un,DetrForSegmentation:()=>mn,DetrModel:()=>dn,DetrObjectDetectionOutput:()=>pn,DetrPreTrainedModel:()=>cn,DetrSegmentationOutput:()=>_n,Dinov2ForImageClassification:()=>ua,Dinov2Model:()=>da,Dinov2PreTrainedModel:()=>ca,Dinov2WithRegistersForImageClassification:()=>_a,Dinov2WithRegistersModel:()=>pa,Dinov2WithRegistersPreTrainedModel:()=>ma,DistilBertForMaskedLM:()=>Ke,DistilBertForQuestionAnswering:()=>Ye,DistilBertForSequenceClassification:()=>He,DistilBertForTokenClassification:()=>Je,DistilBertModel:()=>Xe,DistilBertPreTrainedModel:()=>Qe,DonutSwinModel:()=>sa,DonutSwinPreTrainedModel:()=>ta,EfficientNetForImageClassification:()=>Ri,EfficientNetModel:()=>Gi,EfficientNetPreTrainedModel:()=>Di,ElectraForMaskedLM:()=>ye,ElectraForQuestionAnswering:()=>Ce,ElectraForSequenceClassification:()=>Fe,ElectraForTokenClassification:()=>ve,ElectraModel:()=>ke,ElectraPreTrainedModel:()=>xe,EsmForMaskedLM:()=>tt,EsmForSequenceClassification:()=>st,EsmForTokenClassification:()=>rt,EsmModel:()=>et,EsmPreTrainedModel:()=>Ze,ExaoneForCausalLM:()=>Lr,ExaoneModel:()=>Er,ExaonePreTrainedModel:()=>Ar,FalconForCausalLM:()=>Fi,FalconModel:()=>yi,FalconPreTrainedModel:()=>ki,FastViTForImageClassification:()=>Wo,FastViTModel:()=>qo,FastViTPreTrainedModel:()=>Ro,Florence2ForConditionalGeneration:()=>Cs,Florence2PreTrainedModel:()=>vs,GLPNForDepthEstimation:()=>ea,GLPNModel:()=>Zn,GLPNPreTrainedModel:()=>Kn,GPT2LMHeadModel:()=>sr,GPT2Model:()=>tr,GPT2PreTrainedModel:()=>er,GPTBigCodeForCausalLM:()=>fr,GPTBigCodeModel:()=>gr,GPTBigCodePreTrainedModel:()=>hr,GPTJForCausalLM:()=>_r,GPTJModel:()=>pr,GPTJPreTrainedModel:()=>mr,GPTNeoForCausalLM:()=>lr,GPTNeoModel:()=>ir,GPTNeoPreTrainedModel:()=>ar,GPTNeoXForCausalLM:()=>ur,GPTNeoXModel:()=>dr,GPTNeoXPreTrainedModel:()=>cr,Gemma2ForCausalLM:()=>Zr,Gemma2Model:()=>Kr,Gemma2PreTrainedModel:()=>Yr,GemmaForCausalLM:()=>Jr,GemmaModel:()=>Hr,GemmaPreTrainedModel:()=>Xr,GlmForCausalLM:()=>Sr,GlmModel:()=>Cr,GlmPreTrainedModel:()=>vr,GraniteForCausalLM:()=>Wr,GraniteModel:()=>qr,GranitePreTrainedModel:()=>Rr,GroundingDinoForObjectDetection:()=>ga,GroundingDinoPreTrainedModel:()=>ha,GroupViTModel:()=>Go,GroupViTPreTrainedModel:()=>Do,HeliumForCausalLM:()=>Fr,HeliumModel:()=>yr,HeliumPreTrainedModel:()=>kr,HieraForImageClassification:()=>Cn,HieraModel:()=>vn,HieraPreTrainedModel:()=>Fn,HubertForCTC:()=>ti,HubertForSequenceClassification:()=>si,HubertModel:()=>ei,HubertPreTrainedModel:()=>Za,IJepaForImageClassification:()=>So,IJepaModel:()=>Co,IJepaPreTrainedModel:()=>vo,Idefics3ForConditionalGeneration:()=>Ls,Idefics3PreTrainedModel:()=>Es,ImageMattingOutput:()=>Vc,JAISLMHeadModel:()=>nr,JAISModel:()=>or,JAISPreTrainedModel:()=>rr,JinaCLIPModel:()=>Xs,JinaCLIPPreTrainedModel:()=>Qs,JinaCLIPTextModel:()=>Hs,JinaCLIPVisionModel:()=>Js,LlamaForCausalLM:()=>xr,LlamaModel:()=>Pr,LlamaPreTrainedModel:()=>br,LlavaForConditionalGeneration:()=>ks,LlavaOnevisionForConditionalGeneration:()=>ys,LlavaPreTrainedModel:()=>xs,LongT5ForConditionalGeneration:()=>At,LongT5Model:()=>St,LongT5PreTrainedModel:()=>Ct,M2M100ForConditionalGeneration:()=>Sa,M2M100Model:()=>Ca,M2M100PreTrainedModel:()=>va,MBartForCausalLM:()=>Rt,MBartForConditionalGeneration:()=>Dt,MBartForSequenceClassification:()=>Gt,MBartModel:()=>Ot,MBartPreTrainedModel:()=>Vt,MPNetForMaskedLM:()=>ut,MPNetForQuestionAnswering:()=>_t,MPNetForSequenceClassification:()=>mt,MPNetForTokenClassification:()=>pt,MPNetModel:()=>dt,MPNetPreTrainedModel:()=>ct,MT5ForConditionalGeneration:()=>It,MT5Model:()=>Lt,MT5PreTrainedModel:()=>Et,MarianMTModel:()=>Fa,MarianModel:()=>ya,MarianPreTrainedModel:()=>ka,MaskFormerForInstanceSegmentation:()=>Yn,MaskFormerModel:()=>Jn,MaskFormerPreTrainedModel:()=>Hn,MaskedLMOutput:()=>zc,MgpstrForSceneTextRecognition:()=>ul,MgpstrModelOutput:()=>cl,MgpstrPreTrainedModel:()=>dl,MistralForCausalLM:()=>Ti,MistralModel:()=>wi,MistralPreTrainedModel:()=>Mi,MobileBertForMaskedLM:()=>at,MobileBertForQuestionAnswering:()=>lt,MobileBertForSequenceClassification:()=>it,MobileBertModel:()=>nt,MobileBertPreTrainedModel:()=>ot,MobileLLMForCausalLM:()=>jr,MobileLLMModel:()=>zr,MobileLLMPreTrainedModel:()=>Ir,MobileNetV1ForImageClassification:()=>Hi,MobileNetV1Model:()=>Xi,MobileNetV1PreTrainedModel:()=>Qi,MobileNetV2ForImageClassification:()=>Ki,MobileNetV2Model:()=>Yi,MobileNetV2PreTrainedModel:()=>Ji,MobileNetV3ForImageClassification:()=>tl,MobileNetV3Model:()=>el,MobileNetV3PreTrainedModel:()=>Zi,MobileNetV4ForImageClassification:()=>ol,MobileNetV4Model:()=>rl,MobileNetV4PreTrainedModel:()=>sl,MobileViTForImageClassification:()=>Ho,MobileViTModel:()=>Xo,MobileViTPreTrainedModel:()=>Qo,MobileViTV2ForImageClassification:()=>Ko,MobileViTV2Model:()=>Yo,MobileViTV2PreTrainedModel:()=>Jo,ModelOutput:()=>J,ModernBertForMaskedLM:()=>ae,ModernBertForSequenceClassification:()=>ie,ModernBertForTokenClassification:()=>le,ModernBertModel:()=>ne,ModernBertPreTrainedModel:()=>oe,Moondream1ForConditionalGeneration:()=>Fs,MoonshineForConditionalGeneration:()=>bs,MoonshineModel:()=>Ts,MoonshinePreTrainedModel:()=>ws,MptForCausalLM:()=>To,MptModel:()=>wo,MptPreTrainedModel:()=>Mo,MultiModalityCausalLM:()=>ll,MultiModalityPreTrainedModel:()=>il,MusicgenForCausalLM:()=>$i,MusicgenForConditionalGeneration:()=>Ui,MusicgenModel:()=>Wi,MusicgenPreTrainedModel:()=>qi,NomicBertModel:()=>de,NomicBertPreTrainedModel:()=>ce,OPTForCausalLM:()=>xo,OPTModel:()=>Po,OPTPreTrainedModel:()=>bo,Olmo2ForCausalLM:()=>Gr,Olmo2Model:()=>Dr,Olmo2PreTrainedModel:()=>Or,OlmoForCausalLM:()=>Vr,OlmoModel:()=>Br,OlmoPreTrainedModel:()=>Nr,OpenELMForCausalLM:()=>so,OpenELMModel:()=>to,OpenELMPreTrainedModel:()=>eo,OwlViTForObjectDetection:()=>tn,OwlViTModel:()=>en,OwlViTPreTrainedModel:()=>Zo,Owlv2ForObjectDetection:()=>on,Owlv2Model:()=>rn,Owlv2PreTrainedModel:()=>sn,PaliGemmaForConditionalGeneration:()=>As,PaliGemmaPreTrainedModel:()=>Ss,PatchTSMixerForPrediction:()=>fl,PatchTSMixerModel:()=>gl,PatchTSMixerPreTrainedModel:()=>hl,PatchTSTForPrediction:()=>_l,PatchTSTModel:()=>pl,PatchTSTPreTrainedModel:()=>ml,Phi3ForCausalLM:()=>_o,Phi3Model:()=>po,Phi3PreTrainedModel:()=>mo,Phi3VForCausalLM:()=>zs,Phi3VPreTrainedModel:()=>Is,PhiForCausalLM:()=>uo,PhiModel:()=>co,PhiPreTrainedModel:()=>lo,PreTrainedModel:()=>H,PretrainedMixin:()=>Ml,PvtForImageClassification:()=>zo,PvtModel:()=>Io,PvtPreTrainedModel:()=>Lo,PyAnnoteForAudioFrameClassification:()=>Ba,PyAnnoteModel:()=>Na,PyAnnotePreTrainedModel:()=>ja,QuestionAnsweringModelOutput:()=>jc,Qwen2ForCausalLM:()=>no,Qwen2Model:()=>oo,Qwen2PreTrainedModel:()=>ro,Qwen2VLForConditionalGeneration:()=>io,Qwen2VLPreTrainedModel:()=>ao,RTDetrForObjectDetection:()=>fn,RTDetrModel:()=>gn,RTDetrObjectDetectionOutput:()=>Mn,RTDetrPreTrainedModel:()=>hn,ResNetForImageClassification:()=>En,ResNetModel:()=>An,ResNetPreTrainedModel:()=>Sn,RoFormerForMaskedLM:()=>pe,RoFormerForQuestionAnswering:()=>ge,RoFormerForSequenceClassification:()=>_e,RoFormerForTokenClassification:()=>he,RoFormerModel:()=>me,RoFormerPreTrainedModel:()=>ue,RobertaForMaskedLM:()=>Yt,RobertaForQuestionAnswering:()=>es,RobertaForSequenceClassification:()=>Kt,RobertaForTokenClassification:()=>Zt,RobertaModel:()=>Jt,RobertaPreTrainedModel:()=>Ht,SamImageSegmentationOutput:()=>xa,SamModel:()=>Pa,SamPreTrainedModel:()=>ba,SapiensForDepthEstimation:()=>$n,SapiensForNormalEstimation:()=>Un,SapiensForSemanticSegmentation:()=>Wn,SapiensPreTrainedModel:()=>qn,SegformerForImageClassification:()=>ji,SegformerForSemanticSegmentation:()=>Ni,SegformerModel:()=>zi,SegformerPreTrainedModel:()=>Ii,Seq2SeqLMOutput:()=>Ac,SequenceClassifierOutput:()=>Ec,SiglipModel:()=>Rs,SiglipPreTrainedModel:()=>Gs,SiglipTextModel:()=>qs,SiglipVisionModel:()=>Ws,SpeechT5ForSpeechToText:()=>pi,SpeechT5ForTextToSpeech:()=>_i,SpeechT5HifiGan:()=>hi,SpeechT5Model:()=>mi,SpeechT5PreTrainedModel:()=>ui,SqueezeBertForMaskedLM:()=>ft,SqueezeBertForQuestionAnswering:()=>wt,SqueezeBertForSequenceClassification:()=>Mt,SqueezeBertModel:()=>gt,SqueezeBertPreTrainedModel:()=>ht,StableLmForCausalLM:()=>Oi,StableLmModel:()=>Vi,StableLmPreTrainedModel:()=>Bi,Starcoder2ForCausalLM:()=>xi,Starcoder2Model:()=>Pi,Starcoder2PreTrainedModel:()=>bi,StyleTextToSpeech2Model:()=>di,StyleTextToSpeech2PreTrainedModel:()=>ci,Swin2SRForImageSuperResolution:()=>Bn,Swin2SRModel:()=>Nn,Swin2SRPreTrainedModel:()=>jn,SwinForImageClassification:()=>zn,SwinModel:()=>In,SwinPreTrainedModel:()=>Ln,T5ForConditionalGeneration:()=>vt,T5Model:()=>Ft,T5PreTrainedModel:()=>yt,TableTransformerForObjectDetection:()=>bn,TableTransformerModel:()=>Tn,TableTransformerObjectDetectionOutput:()=>Pn,TableTransformerPreTrainedModel:()=>wn,TokenClassifierOutput:()=>Ic,TrOCRForCausalLM:()=>fi,TrOCRPreTrainedModel:()=>gi,UniSpeechForCTC:()=>Ra,UniSpeechForSequenceClassification:()=>qa,UniSpeechModel:()=>Ga,UniSpeechPreTrainedModel:()=>Da,UniSpeechSatForAudioFrameClassification:()=>Xa,UniSpeechSatForCTC:()=>Ua,UniSpeechSatForSequenceClassification:()=>Qa,UniSpeechSatModel:()=>$a,UniSpeechSatPreTrainedModel:()=>Wa,ViTForImageClassification:()=>Fo,ViTMAEModel:()=>No,ViTMAEPreTrainedModel:()=>jo,ViTMSNForImageClassification:()=>Oo,ViTMSNModel:()=>Vo,ViTMSNPreTrainedModel:()=>Bo,ViTModel:()=>yo,ViTPreTrainedModel:()=>ko,VisionEncoderDecoderModel:()=>Ps,VitMatteForImageMatting:()=>Uo,VitMattePreTrainedModel:()=>$o,VitPoseForPoseEstimation:()=>Eo,VitPosePreTrainedModel:()=>Ao,VitsModel:()=>Li,VitsModelOutput:()=>Oc,VitsPreTrainedModel:()=>Ei,Wav2Vec2BertForCTC:()=>Ya,Wav2Vec2BertForSequenceClassification:()=>Ka,Wav2Vec2BertModel:()=>Ja,Wav2Vec2BertPreTrainedModel:()=>Ha,Wav2Vec2ForAudioFrameClassification:()=>za,Wav2Vec2ForCTC:()=>La,Wav2Vec2ForSequenceClassification:()=>Ia,Wav2Vec2Model:()=>Ea,Wav2Vec2PreTrainedModel:()=>Aa,WavLMForAudioFrameClassification:()=>li,WavLMForCTC:()=>ni,WavLMForSequenceClassification:()=>ai,WavLMForXVector:()=>ii,WavLMModel:()=>oi,WavLMPreTrainedModel:()=>ri,WeSpeakerResNetModel:()=>Oa,WeSpeakerResNetPreTrainedModel:()=>Va,WhisperForConditionalGeneration:()=>Ms,WhisperModel:()=>fs,WhisperPreTrainedModel:()=>gs,XLMForQuestionAnswering:()=>as,XLMForSequenceClassification:()=>os,XLMForTokenClassification:()=>ns,XLMModel:()=>ss,XLMPreTrainedModel:()=>ts,XLMRobertaForMaskedLM:()=>cs,XLMRobertaForQuestionAnswering:()=>ms,XLMRobertaForSequenceClassification:()=>ds,XLMRobertaForTokenClassification:()=>us,XLMRobertaModel:()=>ls,XLMRobertaPreTrainedModel:()=>is,XLMWithLMHeadModel:()=>rs,XVectorOutput:()=>Lc,YolosForObjectDetection:()=>wa,YolosModel:()=>Ma,YolosObjectDetectionOutput:()=>Ta,YolosPreTrainedModel:()=>fa});var r=s("./src/configs.js"),o=s("./src/backends/onnx.js"),n=s("./src/utils/dtypes.js"),a=s("./src/utils/generic.js"),i=s("./src/utils/core.js"),l=s("./src/utils/hub.js"),c=s("./src/utils/constants.js"),d=s("./src/generation/logits_process.js"),u=s("./src/generation/configuration_utils.js"),m=s("./src/utils/tensor.js"),p=s("./src/utils/image.js"),_=s("./src/utils/maths.js"),h=s("./src/generation/stopping_criteria.js"),g=s("./src/generation/logits_sampler.js"),f=s("./src/env.js"),M=s("./src/models/whisper/generation_whisper.js"),w=s("./src/models/whisper/common_whisper.js");const T=0,b=1,P=2,x=3,k=4,y=5,F=6,v=7,C=8,S=9,A=new Map,E=new Map,L=new Map;async function I(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async a=>{const{buffer:i,session_options:c,session_config:d}=await async function(e,t,s){const a=s.config?.["transformers.js_config"]??{};let i=s.device??a.device;i&&"string"!=typeof i&&(i.hasOwnProperty(t)?i=i[t]:(console.warn(`device not specified for "${t}". Using the default device.`),i=null));const c=i??(f.apis.IS_NODE_ENV?"cpu":"wasm"),d=(0,o.deviceToExecutionProviders)(c);let u=s.dtype??a.dtype;if("string"!=typeof u&&(u&&u.hasOwnProperty(t)?u=u[t]:(u=n.DEFAULT_DEVICE_DTYPE_MAPPING[c]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${u}) for this device (${c}).`))),u===n.DATA_TYPES.auto){let e=a.dtype;"string"!=typeof e&&(e=e[t]),u=e&&e!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(e)?e:n.DEFAULT_DEVICE_DTYPE_MAPPING[c]??n.DATA_TYPES.fp32}const m=u;if(!n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(m))throw new Error(`Invalid dtype: ${m}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);if(m===n.DATA_TYPES.fp16&&"webgpu"===c&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${c}) does not support fp16.`);const p=a.kv_cache_dtype?"string"==typeof a.kv_cache_dtype?a.kv_cache_dtype:a.kv_cache_dtype[m]??"float32":void 0;if(p&&!["float32","float16"].includes(p))throw new Error(`Invalid kv_cache_dtype: ${p}. Should be one of: float32, float16`);const _={dtype:m,kv_cache_dtype:p},h=n.DEFAULT_DTYPE_SUFFIX_MAPPING[m],g=`${s.subfolder??""}/${t}${h}.onnx`,M={...s.session_options};M.executionProviders??=d;const w=a.free_dimension_overrides;w?M.freeDimensionOverrides??=w:c.startsWith("webnn")&&!M.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const T=(0,l.getModelFile)(e,g,!0,s),b=s.use_external_data_format??a.use_external_data_format;let P=[];if(b&&(!0===b||"object"==typeof b&&b.hasOwnProperty(t)&&!0===b[t])){if(f.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const r=`${t}${h}.onnx_data`,o=`${s.subfolder??""}/${r}`;P.push(new Promise((async(t,n)=>{const a=await(0,l.getModelFile)(e,o,!0,s);t({path:r,data:a})})))}else void 0!==M.externalData&&(P=M.externalData.map((async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,s);return{...t,data:r}}return t})));if(P.length>0&&(M.externalData=await Promise.all(P)),"webgpu"===c){const e=(0,r.getKeyValueShapes)(s.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,o.isONNXProxy)()){const t={};for(const s in e)t[s]="gpu-buffer";M.preferredOutputLocation=t}}return{buffer:await T,session_options:M,session_config:_}}(e,t[a],s);return[a,await(0,o.createInferenceSession)(i,c,d)]}))))}async function z(e,t,s){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,s)]))))}async function j(e,t){const s=function(e,t){const s=Object.create(null),r=[];for(const n of e.inputNames){const e=t[n];e instanceof m.Tensor?s[n]=(0,o.isONNXProxy)()?e.clone():e:r.push(n)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const n=Object.keys(t).length,a=e.inputNames.length;if(n>a){let s=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${n} > ${a}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(e,t);try{const t=Object.fromEntries(Object.entries(s).map((([e,t])=>[e,t.ort_tensor])));let r=await e.run(t);return r=N(r),r}catch(e){const t=Object.fromEntries(Object.entries(s).map((([e,{type:t,dims:s,data:r}])=>[e,{type:t,dims:s,data:r}])));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function N(e){for(let t in e)(0,o.isONNXTensor)(e[t])?e[t]=new m.Tensor(e[t]):"object"==typeof e[t]&&N(e[t]);return e}function B(e){if(e instanceof m.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new m.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new m.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function V(e){return new m.Tensor("bool",[e],[1])}async function O(e,t){let{encoder_outputs:s,input_ids:r,decoder_input_ids:o,...n}=t;if(!s){const r=(0,i.pick)(t,e.sessions.model.inputNames);s=(await D(e,r)).last_hidden_state}n.input_ids=o,n.encoder_hidden_states=s,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(n.encoder_attention_mask=t.attention_mask);return await G(e,n,!0)}async function D(e,t){const s=e.sessions.model,r=(0,i.pick)(t,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(s.inputNames.includes("token_type_ids")&&!r.token_type_ids){if(!r.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");r.token_type_ids=(0,m.zeros_like)(r.input_ids)}if(s.inputNames.includes("pixel_mask")&&!r.pixel_mask){if(!r.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=r.pixel_values.dims;r.pixel_mask=(0,m.ones)([e[0],e[2],e[3]])}return await j(s,r)}async function G(e,t,s=!1){const r=e.sessions[s?"decoder_model_merged":"model"],{past_key_values:o,...n}=t;if(r.inputNames.includes("use_cache_branch")&&(n.use_cache_branch=V(!!o)),r.inputNames.includes("position_ids")&&n.attention_mask&&!n.position_ids){const t="paligemma"===e.config.model_type?1:0;n.position_ids=function(e,t=null,s=0){const{input_ids:r,inputs_embeds:o,attention_mask:n}=e,{data:a,dims:i}=W(n,s);let l=new m.Tensor("int64",a,i);if(t){const e=-(r??o).dims.at(1);l=l.slice(null,[e,null])}return l}(n,o,t)}e.addPastKeyValues(n,o);const a=(0,i.pick)(n,r.inputNames);return await j(r,a)}function R({image_token_id:e,inputs_embeds:t,image_features:s,input_ids:r,attention_mask:o}){const n=r.tolist().map((t=>t.reduce(((t,s,r)=>(s==e&&t.push(r),t)),[]))),a=n.reduce(((e,t)=>e+t.length),0),i=s.dims[0];if(a!==i)throw new Error(`Image features and image tokens do not match: tokens: ${a}, features ${i}`);let l=0;for(let e=0;e<n.length;++e){const r=n[e],o=t[e];for(let e=0;e<r.length;++e)o[r[e]].data.set(s[l++].data)}return{inputs_embeds:t,attention_mask:o}}async function q(e,{input_ids:t=null,attention_mask:s=null,pixel_values:r=null,position_ids:o=null,inputs_embeds:n=null,past_key_values:a=null,generation_config:i=null,logits_processor:l=null,...c}){if(!n)if(n=await e.encode_text({input_ids:t,...c}),r&&1!==t.dims[1]){const o=await e.encode_image({pixel_values:r,...c});({inputs_embeds:n,attention_mask:s}=e._merge_input_ids_with_image_features({image_features:o,inputs_embeds:n,input_ids:t,attention_mask:s}))}else if(a&&r&&1===t.dims[1]){const e=t.dims[1],r=Object.values(a)[0].dims.at(-2);s=(0,m.cat)([(0,m.ones)([t.dims[0],r]),s.slice(null,[s.dims[1]-e,s.dims[1]])],1)}if(!o&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:r,video_grid_thw:n}=c;[o]=e.get_rope_index(t,r,n,s)}return await G(e,{inputs_embeds:n,past_key_values:a,attention_mask:s,position_ids:o,generation_config:i,logits_processor:l},!0)}function W(e,t=0){const[s,r]=e.dims,o=e.data,n=new BigInt64Array(o.length);for(let e=0;e<s;++e){const s=e*r;let a=BigInt(t);for(let e=0;e<r;++e){const t=s+e;0n===o[t]?n[t]=BigInt(1):(n[t]=a,a+=o[t])}}return{data:n,dims:e.dims}}function $(e,t,s,r){if(s.past_key_values){const t=Object.values(s.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:o}=s;if(o&&o.dims[1]>r.dims[1]);else if(t<r.dims[1])s.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const o=e.config.num_image_tokens;if(!o)throw new Error("`num_image_tokens` is missing in the model configuration.");const n=r.dims[1]-(t-o);s.input_ids=r.slice(null,[-n,null]),s.attention_mask=(0,m.ones)([1,t+n])}}return s}function U(e,t,s,r){return s.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...s,decoder_input_ids:B(t)}}function Q(e,...t){return e.config.is_encoder_decoder?U(e,...t):$(e,...t)}function X(e,t,s,r){const o=!!s.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(o?s.input_ids=(0,m.cat)([s.input_ids,s.input_ids],0):(s.input_ids=(0,m.cat)([s.input_ids,(0,m.full_like)(s.input_ids,BigInt(r.pad_token_id))],0),s.attention_mask=(0,m.cat)([s.attention_mask,(0,m.full_like)(s.attention_mask,0n)],0))),!o&&s.pixel_values||(s.pixel_values=(0,m.full)([0,0,3,384,384],1)),o){const e=0,t=1,r=e>0?1:0,o=1;s.images_seq_mask=new m.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[o,e+t]),s.images_emb_mask=new m.Tensor("bool",new Array(e).fill(!!r),[o,1,e])}return s}class H extends a.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,s){super(),this.config=e,this.sessions=t,this.configs=s;const r=L.get(this.constructor),o=A.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,o){case k:this.can_generate=!0,this._forward=G,this._prepare_inputs_for_generation=$;break;case P:case x:case v:this.can_generate=!0,this._forward=O,this._prepare_inputs_for_generation=U;break;case b:this._forward=O;break;case F:this.can_generate=!0,this._forward=q,this._prepare_inputs_for_generation=Q;break;case S:this.can_generate=!0,this._prepare_inputs_for_generation=Q;break;case C:this.can_generate=!0,this._prepare_inputs_for_generation=X;break;default:this._forward=D}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:d=null,dtype:u=null,use_external_data_format:m=null,session_options:p={}}={}){let _={progress_callback:t,config:s,cache_dir:o,local_files_only:n,revision:a,model_file_name:i,subfolder:l,device:d,dtype:u,use_external_data_format:m,session_options:p};const h=L.get(this),g=A.get(h);let f;if(s=_.config=await r.AutoConfig.from_pretrained(e,_),g===k)f=await Promise.all([I(e,{model:_.model_file_name??"model"},_),z(e,{generation_config:"generation_config.json"},_)]);else if(g===P||g===x)f=await Promise.all([I(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_),z(e,{generation_config:"generation_config.json"},_)]);else if(g===y)f=await Promise.all([I(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},_)]);else if(g===b)f=await Promise.all([I(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_)]);else if(g===F){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(t.model="encoder_model"),f=await Promise.all([I(e,t,_),z(e,{generation_config:"generation_config.json"},_)])}else if(g===v)f=await Promise.all([I(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},_),z(e,{generation_config:"generation_config.json"},_)]);else if(g===C)f=await Promise.all([I(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},_),z(e,{generation_config:"generation_config.json"},_)]);else if(g===S)f=await Promise.all([I(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},_),z(e,{generation_config:"generation_config.json"},_)]);else{if(g!==T){const e=h??s?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}f=await Promise.all([I(e,{model:_.model_file_name??"model"},_)])}return new this(s,...f)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new d.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new d.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new d.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new d.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,s=null){const r=new d.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new d.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new d.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new d.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new d.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new d.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new d.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new d.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const s=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new d.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,s))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new d.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==s&&r.extend(s),r}_prepare_generation_config(e,t,s=u.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const o=new s(r);return Object.assign(o,this.generation_config??{}),e&&Object.assign(o,e),t&&Object.assign(o,(0,i.pick)(t,Object.getOwnPropertyNames(o))),o}_get_stopping_criteria(e,t=null){const s=new h.StoppingCriteriaList;return null!==e.max_length&&s.push(new h.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&s.push(new h.EosTokenCriteria(e.eos_token_id)),t&&s.extend(t),s}_validate_model_class(){if(!this.can_generate){const e=[Cl,Ll,vl,Pl],t=L.get(this.constructor),s=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&s.add(e[0])}let o=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw s.size>0&&(o+=` Please use the following class instead: ${[...s].join(", ")}`),Error(o)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:s,is_encoder_decoder:r}){return s.past_key_values=this.getPastKeyValues(t,s.past_key_values),s.input_ids=new m.Tensor("int64",e.flat(),[e.length,1]),r||(s.attention_mask=(0,m.cat)([s.attention_mask,(0,m.ones)([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:s}){const r=(0,i.pick)(s,this.forward_params),o=this.main_input_name;if(o in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[o]=e;return{inputs_tensor:r[o],model_inputs:r,model_input_name:o}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:s,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:s,attention_mask:r,...o}=t,n=await this._prepare_inputs_embeds(t);t={...o,...(0,i.pick)(n,["inputs_embeds","attention_mask"])}}let{last_hidden_state:o}=await D(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)o=(0,m.cat)([o,(0,m.full_like)(o,0)],0),"attention_mask"in t&&(t.attention_mask=(0,m.cat)([t.attention_mask,(0,m.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=B(t.decoder_input_ids).dims[0];if(e!==o.dims[0]){if(1!==o.dims[0])throw new Error(`The encoder outputs have a different batch size (${o.dims[0]}) than the decoder inputs (${e}).`);o=(0,m.cat)(Array.from({length:e},(()=>o)),0)}}return t.encoder_outputs=o,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:s,decoder_start_token_id:r,bos_token_id:o,generation_config:n}){let{decoder_input_ids:a,...i}=s;if(!(a instanceof m.Tensor)){if(a)Array.isArray(a[0])||(a=Array.from({length:e},(()=>a)));else if(r??=o,"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},(()=>[r]));a=B(a)}return s.decoder_attention_mask=(0,m.ones_like)(a),{input_ids:a,model_inputs:i}}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:r=null,streamer:o=null,...n}){this._validate_model_class(),t=this._prepare_generation_config(t,n);let{inputs_tensor:a,model_inputs:i,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:n});const c=this.config.is_encoder_decoder;let d;c&&("encoder_outputs"in i||(i=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:i,model_input_name:l,generation_config:t}))),c?({input_ids:d,model_inputs:i}=this._prepare_decoder_input_ids_for_generation({batch_size:i[l].dims.at(0),model_input_name:l,model_kwargs:i,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=i[l];let u=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=u+t.max_new_tokens);const p=this._get_logits_processor(t,u,s),_=this._get_stopping_criteria(t,r),h=i[l].dims.at(0),f=g.LogitsSampler.getSampler(t),M=new Array(h).fill(0),w=d.tolist();let T;o&&o.put(w);let b={};for(;;){if(i=this.prepare_inputs_for_generation(w,i,t),T=await this.forward(i),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(T);for(const t in e)t in b||(b[t]=[]),b[t].push(e[t])}const e=p(w,T.logits.slice(null,-1,null)),s=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],o=await f(r);for(const[e,r]of o){const o=BigInt(e);M[t]+=r,w[t].push(o),s.push([o]);break}}o&&o.put(s);if(_(w).every((e=>e)))break;i=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:T,model_inputs:i,is_encoder_decoder:c})}o&&o.end();const P=this.getPastKeyValues(T,i.past_key_values,!0),x=new m.Tensor("int64",w.flat(),[w.length,w[0].length]);if(t.return_dict_in_generate)return{sequences:x,past_key_values:P,...b};for(const e of Object.values(T))"gpu-buffer"===e.location&&e.dispose();return x}getPastKeyValues(e,t,s=!1){const r=Object.create(null);for(const o in e)if(o.startsWith("present")){const n=o.replace("present","past_key_values"),a=o.includes("encoder");if(r[n]=a&&t?t[n]:e[o],t&&(!a||s)){const e=t[n];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const s of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(s)&&(s in t||(t[s]=[]),t[s].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,s=t?.config?.kv_cache_dtype??"float32",o="float16"===s?new Uint16Array:[],n=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,a=(0,r.getKeyValueShapes)(this.config,{batch_size:n});for(const t in a)e[t]=new m.Tensor(s,o,a[t])}}async encode_image({pixel_values:e}){const t=(await j(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await j(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}}class J{}class Y extends J{constructor({last_hidden_state:e,hidden_states:t=null,attentions:s=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=s}}class K extends H{}class Z extends K{}class ee extends K{async _call(e){return new zc(await super._call(e))}}class te extends K{async _call(e){return new Ec(await super._call(e))}}class se extends K{async _call(e){return new Ic(await super._call(e))}}class re extends K{async _call(e){return new jc(await super._call(e))}}class oe extends H{}class ne extends oe{}class ae extends oe{async _call(e){return new zc(await super._call(e))}}class ie extends oe{async _call(e){return new Ec(await super._call(e))}}class le extends oe{async _call(e){return new Ic(await super._call(e))}}class ce extends H{}class de extends ce{}class ue extends H{}class me extends ue{}class pe extends ue{async _call(e){return new zc(await super._call(e))}}class _e extends ue{async _call(e){return new Ec(await super._call(e))}}class he extends ue{async _call(e){return new Ic(await super._call(e))}}class ge extends ue{async _call(e){return new jc(await super._call(e))}}class fe extends H{}class Me extends fe{}class we extends fe{async _call(e){return new zc(await super._call(e))}}class Te extends fe{async _call(e){return new Ec(await super._call(e))}}class be extends fe{async _call(e){return new Ic(await super._call(e))}}class Pe extends fe{async _call(e){return new jc(await super._call(e))}}class xe extends H{}class ke extends xe{}class ye extends xe{async _call(e){return new zc(await super._call(e))}}class Fe extends xe{async _call(e){return new Ec(await super._call(e))}}class ve extends xe{async _call(e){return new Ic(await super._call(e))}}class Ce extends xe{async _call(e){return new jc(await super._call(e))}}class Se extends H{}class Ae extends Se{}class Ee extends Se{async _call(e){return new zc(await super._call(e))}}class Le extends Se{async _call(e){return new Ec(await super._call(e))}}class Ie extends Se{async _call(e){return new Ic(await super._call(e))}}class ze extends Se{async _call(e){return new jc(await super._call(e))}}class je extends H{}class Ne extends je{}class Be extends je{async _call(e){return new zc(await super._call(e))}}class Ve extends je{async _call(e){return new Ec(await super._call(e))}}class Oe extends je{async _call(e){return new Ic(await super._call(e))}}class De extends je{async _call(e){return new jc(await super._call(e))}}class Ge extends H{}class Re extends Ge{}class qe extends Ge{async _call(e){return new zc(await super._call(e))}}class We extends Ge{async _call(e){return new Ec(await super._call(e))}}class $e extends Ge{async _call(e){return new Ic(await super._call(e))}}class Ue extends Ge{async _call(e){return new jc(await super._call(e))}}class Qe extends H{}class Xe extends Qe{}class He extends Qe{async _call(e){return new Ec(await super._call(e))}}class Je extends Qe{async _call(e){return new Ic(await super._call(e))}}class Ye extends Qe{async _call(e){return new jc(await super._call(e))}}class Ke extends Qe{async _call(e){return new zc(await super._call(e))}}class Ze extends H{}class et extends Ze{}class tt extends Ze{async _call(e){return new zc(await super._call(e))}}class st extends Ze{async _call(e){return new Ec(await super._call(e))}}class rt extends Ze{async _call(e){return new Ic(await super._call(e))}}class ot extends H{}class nt extends ot{}class at extends ot{async _call(e){return new zc(await super._call(e))}}class it extends ot{async _call(e){return new Ec(await super._call(e))}}class lt extends ot{async _call(e){return new jc(await super._call(e))}}class ct extends H{}class dt extends ct{}class ut extends ct{async _call(e){return new zc(await super._call(e))}}class mt extends ct{async _call(e){return new Ec(await super._call(e))}}class pt extends ct{async _call(e){return new Ic(await super._call(e))}}class _t extends ct{async _call(e){return new jc(await super._call(e))}}class ht extends H{}class gt extends ht{}class ft extends ht{async _call(e){return new zc(await super._call(e))}}class Mt extends ht{async _call(e){return new Ec(await super._call(e))}}class wt extends ht{async _call(e){return new jc(await super._call(e))}}class Tt extends H{}class bt extends Tt{}class Pt extends Tt{async _call(e){return new Ec(await super._call(e))}}class xt extends Tt{async _call(e){return new jc(await super._call(e))}}class kt extends Tt{async _call(e){return new zc(await super._call(e))}}class yt extends H{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Ft extends yt{}class vt extends yt{}class Ct extends H{}class St extends Ct{}class At extends Ct{}class Et extends H{}class Lt extends Et{}class It extends Et{}class zt extends H{}class jt extends zt{}class Nt extends zt{}class Bt extends zt{async _call(e){return new Ec(await super._call(e))}}class Vt extends H{}class Ot extends Vt{}class Dt extends Vt{}class Gt extends Vt{async _call(e){return new Ec(await super._call(e))}}class Rt extends Vt{}class qt extends H{}class Wt extends qt{}class $t extends qt{}class Ut extends H{}class Qt extends Ut{}class Xt extends Ut{}class Ht extends H{}class Jt extends Ht{}class Yt extends Ht{async _call(e){return new zc(await super._call(e))}}class Kt extends Ht{async _call(e){return new Ec(await super._call(e))}}class Zt extends Ht{async _call(e){return new Ic(await super._call(e))}}class es extends Ht{async _call(e){return new jc(await super._call(e))}}class ts extends H{}class ss extends ts{}class rs extends ts{async _call(e){return new zc(await super._call(e))}}class os extends ts{async _call(e){return new Ec(await super._call(e))}}class ns extends ts{async _call(e){return new Ic(await super._call(e))}}class as extends ts{async _call(e){return new jc(await super._call(e))}}class is extends H{}class ls extends is{}class cs extends is{async _call(e){return new zc(await super._call(e))}}class ds extends is{async _call(e){return new Ec(await super._call(e))}}class us extends is{async _call(e){return new Ic(await super._call(e))}}class ms extends is{async _call(e){return new jc(await super._call(e))}}class ps extends H{}class _s extends ps{}class hs extends ps{}class gs extends H{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class fs extends gs{}class Ms extends gs{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,M.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let s=e.language;const r=e.task;if(e.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");const o=`<|${(0,w.whisper_language_to_code)(s)}|>`;t.push(e.lang_to_id[o]),t.push(e.task_to_id[r??"transcribe"])}else if(s||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:s=null,stopping_criteria:r=null,...o}){t=this._prepare_generation_config(t,o);const n=o.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(s??=new d.LogitsProcessorList,s.push(new d.WhisperTimeStampLogitsProcessor(t,n))),t.begin_suppress_tokens&&(s??=new d.LogitsProcessorList,s.push(new d.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,n.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:s,decoder_input_ids:n,...o});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,s=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let o=this.config.median_filter_width;void 0===o&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),o=7);const n=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},((e,t)=>(0,m.cat)(n.map((e=>e[t])),2))),l=(0,m.stack)(t.map((([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return s?a[e].slice(null,t,null,[0,s]):a[e].slice(null,t)}))).transpose(1,0,2,3),[c,d]=(0,m.std_mean)(l,-2,0,!0),u=l.clone();for(let e=0;e<u.dims[0];++e){const t=u[e];for(let s=0;s<t.dims[0];++s){const r=t[s],n=c[e][s][0].data,a=d[e][s][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-a[e])/n[e];t.set((0,_.medianFilter)(t,o))}}}const p=[(0,m.mean)(u,1)],h=e.sequences.dims,g=new m.Tensor("float32",new Float32Array(h[0]*h[1]),h);for(let e=0;e<h[0];++e){const t=p[e].neg().squeeze_(0),[s,o]=(0,_.dynamic_time_warping)(t.tolist()),n=Array.from({length:s.length-1},((e,t)=>s[t+1]-s[t])),a=(0,i.mergeArrays)([1],n).map((e=>!!e)),l=[];for(let e=0;e<a.length;++e)a[e]&&l.push(o[e]*r);g[e].data.set(l,1)}return g}}class ws extends H{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class Ts extends ws{}class bs extends ws{}class Ps extends H{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class xs extends H{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class ks extends xs{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:s,attention_mask:r}){const o=this.config.image_token_index,n=s.tolist().map((e=>e.findIndex((e=>e==o)))),a=n.every((e=>-1===e)),i=n.every((e=>-1!==e));if(!a&&!i)throw new Error("Every input should contain either 0 or 1 image token.");if(a)return{inputs_embeds:e,attention_mask:r};const l=[],c=[];for(let s=0;s<n.length;++s){const o=n[s],a=e[s],i=t[s],d=r[s];l.push((0,m.cat)([a.slice([0,o]),i,a.slice([o+1,a.dims[0]])],0)),c.push((0,m.cat)([d.slice([0,o]),(0,m.ones)([i.dims[0]]),d.slice([o+1,d.dims[0]])],0))}return{inputs_embeds:(0,m.stack)(l,0),attention_mask:(0,m.stack)(c,0)}}}class ys extends ks{}class Fs extends ks{}class vs extends H{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Cs extends vs{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:s,attention_mask:r}){return{inputs_embeds:(0,m.cat)([t,e],1),attention_mask:(0,m.cat)([(0,m.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:s,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let o,n;return e&&(o=await this.encode_text({input_ids:e})),t&&(n=await this.encode_image({pixel_values:t})),o&&n?({inputs_embeds:s,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:o,image_features:n,input_ids:e,attention_mask:r})):s=o||n,{inputs_embeds:s,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:s,decoder_input_ids:r,decoder_attention_mask:o,encoder_outputs:n,past_key_values:a,inputs_embeds:i,decoder_inputs_embeds:l}){if(i||({inputs_embeds:i,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:i,attention_mask:s})),!n){let{last_hidden_state:e}=await D(this,{inputs_embeds:i,attention_mask:s});n=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const c={inputs_embeds:l,attention_mask:o,encoder_attention_mask:s,encoder_hidden_states:n,past_key_values:a};return await G(this,c,!0)}}class Ss extends H{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class As extends Ss{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return R({image_token_id:this.config.image_token_index,...e,image_features:s})}}class Es extends H{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class Ls extends Es{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await j(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),s=e.image_features.view(-1,t);return R({image_token_id:this.config.image_token_id,...e,image_features:s})}}class Is extends H{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class zs extends Is{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:s=null,image_sizes:r=null,position_ids:o=null,inputs_embeds:n=null,past_key_values:a=null,generation_config:i=null,logits_processor:l=null,...c}){if(!n){let t;if(s&&1!==e.dims[1]){if(!r)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await j(this.sessions.vision_encoder,{pixel_values:s,image_sizes:r}))}else{const e=this.config.normalized_config.hidden_size;t=new m.Tensor("float32",[],[0,e])}({inputs_embeds:n}=await j(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await G(this,{inputs_embeds:n,past_key_values:a,attention_mask:t,position_ids:o,generation_config:i,logits_processor:l},!1)}}class js extends H{}class Ns extends js{}class Bs extends js{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Vs extends js{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Os extends js{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Ds extends js{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Gs extends H{}class Rs extends Gs{}class qs extends Gs{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Ws extends js{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class $s extends H{}class Us extends $s{}class Qs extends H{}class Xs extends Qs{async forward(e){const t=!e.input_ids,s=!e.pixel_values;if(t&&s)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,m.ones)([e.pixel_values.dims[0],1])),s){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,m.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:o,l2norm_text_embeddings:n,l2norm_image_embeddings:a}=await super.forward(e),i={};return t||(i.text_embeddings=r,i.l2norm_text_embeddings=n),s||(i.image_embeddings=o,i.l2norm_image_embeddings=a),i}}class Hs extends Qs{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Js extends Qs{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Ys extends H{}class Ks extends Ys{}class Zs extends Ys{}class er extends H{}class tr extends er{}class sr extends er{}class rr extends H{}class or extends rr{}class nr extends rr{}class ar extends H{}class ir extends ar{}class lr extends ar{}class cr extends H{}class dr extends cr{}class ur extends cr{}class mr extends H{}class pr extends mr{}class _r extends mr{}class hr extends H{}class gr extends hr{}class fr extends hr{}class Mr extends H{}class wr extends Mr{}class Tr extends Mr{}class br extends H{}class Pr extends br{}class xr extends br{}class kr extends H{}class yr extends kr{}class Fr extends kr{}class vr extends H{}class Cr extends vr{}class Sr extends vr{}class Ar extends H{}class Er extends Ar{}class Lr extends Ar{}class Ir extends H{}class zr extends Ir{}class jr extends Ir{}class Nr extends H{}class Br extends Nr{}class Vr extends Nr{}class Or extends H{}class Dr extends Or{}class Gr extends Or{}class Rr extends H{}class qr extends Rr{}class Wr extends Rr{}class $r extends H{}class Ur extends $r{}class Qr extends $r{}class Xr extends H{}class Hr extends Xr{}class Jr extends Xr{}class Yr extends H{}class Kr extends Yr{}class Zr extends Yr{}class eo extends H{}class to extends eo{}class so extends eo{}class ro extends H{}class oo extends ro{}class no extends ro{}class ao extends H{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class io extends ao{get_rope_index(e,t,s,r){const{vision_config:o,image_token_id:n,video_token_id:a,vision_start_token_id:i}=this.config,l=o.spatial_merge_size??2,c=[];if(t||s){let o=e.tolist();r||(r=(0,m.ones_like)(e));const d=r.tolist(),u=Array.from({length:3},(t=>Array.from({length:e.dims[0]},(t=>Array.from({length:e.dims[1]},(e=>1)))))),p=t?t.tolist():[],h=s?s.tolist():[];let g=0,f=0;for(let e=0;e<o.length;++e){const t=o[e].filter(((t,s)=>1==d[e][s])),s=t.reduce(((e,t,s)=>(t==i&&e.push(s),e)),[]).map((e=>t[e+1])),r=s.filter((e=>e==n)).length,m=s.filter((e=>e==a)).length;let M=[],w=0,T=r,b=m;for(let e=0;e<s.length;++e){const e=t.findIndex(((e,t)=>t>w&&e==n)),s=t.findIndex(((e,t)=>t>w&&e==a)),r=T>0&&-1!==e?e:t.length+1,o=b>0&&-1!==s?s:t.length+1;let i,c,d,u;r<o?([c,d,u]=p[g],++g,--T,i=r):([c,d,u]=h[f],++f,--b,i=o);const[m,P,x]=[Number(c),Math.floor(Number(d)/l),Math.floor(Number(u)/l)],k=i-w,y=M.length>0?(0,_.max)(M.at(-1))[0]+1:0;M.push(Array.from({length:3*k},((e,t)=>y+t%k)));const F=k+y,v=m*P*x,C=Array.from({length:v},((e,t)=>F+Math.floor(t/(P*x)))),S=Array.from({length:v},((e,t)=>F+Math.floor(t/x)%P)),A=Array.from({length:v},((e,t)=>F+t%x));M.push([C,S,A].flat()),w=i+v}if(w<t.length){const e=M.length>0?(0,_.max)(M.at(-1))[0]+1:0,s=t.length-w;M.push(Array.from({length:3*s},((t,r)=>e+r%s)))}const P=M.reduce(((e,t)=>e+t.length),0),x=new Array(P);let k=0;for(let e=0;e<3;++e)for(let t=0;t<M.length;++t){const s=M[t],r=s.length/3;for(let t=e*r;t<(e+1)*r;++t)x[k++]=s[t]}let y=0;const F=d[e];for(let t=0;t<F.length;++t)if(1==F[t]){for(let s=0;s<3;++s)u[s][e][t]=x[s*P/3+y];++y}const v=(0,_.max)(x)[0];c.push(v+1-o[e].length)}return[new m.Tensor("int64",u.flat(1/0),[3,e.dims[0],e.dims[1]]),new m.Tensor("int64",c,[c.length,1])]}if(r){const{data:e,dims:t}=W(r),s=BigInt64Array.from({length:3*e.length},((t,s)=>e[s%e.length])),o=Array.from({length:t[0]},((s,r)=>(0,_.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1n+BigInt(t[1])));return[new m.Tensor("int64",s,[3,...t]),new m.Tensor("int64",o,[o.length,1])]}{const[t,s]=e.dims,r=BigInt64Array.from({length:3*t*s},((e,r)=>BigInt(Math.floor(r%s/t))));return[new m.Tensor("int64",r,[3,...e.dims]),(0,m.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await j(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return R({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,s){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),s=t.rope_deltas.map((t=>e+t));t.position_ids=(0,m.stack)([s,s,s],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class lo extends H{}class co extends lo{}class uo extends lo{}class mo extends H{}class po extends mo{}class _o extends mo{}class ho extends H{}class go extends ho{}class fo extends ho{}class Mo extends H{}class wo extends Mo{}class To extends Mo{}class bo extends H{}class Po extends bo{}class xo extends bo{}class ko extends H{}class yo extends ko{}class Fo extends ko{async _call(e){return new Ec(await super._call(e))}}class vo extends H{}class Co extends vo{}class So extends vo{async _call(e){return new Ec(await super._call(e))}}class Ao extends H{}class Eo extends Ao{}class Lo extends H{}class Io extends Lo{}class zo extends Lo{async _call(e){return new Ec(await super._call(e))}}class jo extends H{}class No extends jo{}class Bo extends H{}class Vo extends Bo{}class Oo extends Bo{async _call(e){return new Ec(await super._call(e))}}class Do extends H{}class Go extends Do{}class Ro extends H{}class qo extends Ro{}class Wo extends Ro{async _call(e){return new Ec(await super._call(e))}}class $o extends H{}class Uo extends $o{async _call(e){return new Vc(await super._call(e))}}class Qo extends H{}class Xo extends Qo{}class Ho extends Qo{async _call(e){return new Ec(await super._call(e))}}class Jo extends H{}class Yo extends Jo{}class Ko extends Jo{async _call(e){return new Ec(await super._call(e))}}class Zo extends H{}class en extends Zo{}class tn extends Zo{}class sn extends H{}class rn extends sn{}class on extends sn{}class nn extends H{}class an extends nn{}class ln extends nn{async _call(e){return new Ec(await super._call(e))}}class cn extends H{}class dn extends cn{}class un extends cn{async _call(e){return new pn(await super._call(e))}}class mn extends cn{async _call(e){return new _n(await super._call(e))}}class pn extends J{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class _n extends J{constructor({logits:e,pred_boxes:t,pred_masks:s}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=s}}class hn extends H{}class gn extends hn{}class fn extends hn{async _call(e){return new Mn(await super._call(e))}}class Mn extends J{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class wn extends H{}class Tn extends wn{}class bn extends wn{async _call(e){return new Pn(await super._call(e))}}class Pn extends pn{}class xn extends H{}class kn extends xn{}class yn extends xn{async _call(e){return new Ec(await super._call(e))}}class Fn extends H{}class vn extends Fn{}class Cn extends Fn{async _call(e){return new Ec(await super._call(e))}}class Sn extends H{}class An extends Sn{}class En extends Sn{async _call(e){return new Ec(await super._call(e))}}class Ln extends H{}class In extends Ln{}class zn extends Ln{async _call(e){return new Ec(await super._call(e))}}class jn extends H{}class Nn extends jn{}class Bn extends jn{}class Vn extends H{}class On extends Vn{}class Dn extends Vn{}class Gn extends H{}class Rn extends Gn{}class qn extends H{}class Wn extends qn{}class $n extends qn{}class Un extends qn{}class Qn extends H{}class Xn extends Qn{}class Hn extends H{}class Jn extends Hn{}class Yn extends Hn{}class Kn extends H{}class Zn extends Kn{}class ea extends Kn{}class ta extends H{}class sa extends ta{}class ra extends H{}class oa extends ra{}class na extends ra{async _call(e){return new Ec(await super._call(e))}}class aa extends H{}class ia extends aa{}class la extends aa{async _call(e){return new Ec(await super._call(e))}}class ca extends H{}class da extends ca{}class ua extends ca{async _call(e){return new Ec(await super._call(e))}}class ma extends H{}class pa extends ma{}class _a extends ma{async _call(e){return new Ec(await super._call(e))}}class ha extends H{}class ga extends ha{}class fa extends H{}class Ma extends fa{}class wa extends fa{async _call(e){return new Ta(await super._call(e))}}class Ta extends J{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ba extends H{}class Pa extends ba{async get_image_embeddings({pixel_values:e}){return await D(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),s=t.reduce(((e,t)=>e*t),1);e.input_labels=new m.Tensor("int64",new BigInt64Array(s).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await j(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new xa(await super._call(e))}}class xa extends J{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class ka extends H{}class ya extends ka{}class Fa extends ka{}class va extends H{}class Ca extends va{}class Sa extends va{}class Aa extends H{}class Ea extends Aa{}class La extends Aa{async _call(e){return new Nc(await super._call(e))}}class Ia extends Aa{async _call(e){return new Ec(await super._call(e))}}class za extends Aa{async _call(e){return new Ic(await super._call(e))}}class ja extends H{}class Na extends ja{}class Ba extends ja{async _call(e){return new Ic(await super._call(e))}}class Va extends H{}class Oa extends Va{}class Da extends H{}class Ga extends Da{}class Ra extends Da{async _call(e){return new Nc(await super._call(e))}}class qa extends Da{async _call(e){return new Ec(await super._call(e))}}class Wa extends H{}class $a extends Wa{}class Ua extends Wa{async _call(e){return new Nc(await super._call(e))}}class Qa extends Wa{async _call(e){return new Ec(await super._call(e))}}class Xa extends Wa{async _call(e){return new Ic(await super._call(e))}}class Ha extends H{}class Ja extends Ha{}class Ya extends Ha{async _call(e){return new Nc(await super._call(e))}}class Ka extends Ha{async _call(e){return new Ec(await super._call(e))}}class Za extends H{}class ei extends Aa{}class ti extends Aa{async _call(e){return new Nc(await super._call(e))}}class si extends Aa{async _call(e){return new Ec(await super._call(e))}}class ri extends H{}class oi extends ri{}class ni extends ri{async _call(e){return new Nc(await super._call(e))}}class ai extends ri{async _call(e){return new Ec(await super._call(e))}}class ii extends ri{async _call(e){return new Lc(await super._call(e))}}class li extends ri{async _call(e){return new Ic(await super._call(e))}}class ci extends H{}class di extends ci{}class ui extends H{}class mi extends ui{}class pi extends ui{}class _i extends ui{async generate_speech(e,t,{threshold:s=.5,minlenratio:r=0,maxlenratio:o=20,vocoder:n=null}={}){const a={input_ids:e},{encoder_outputs:i,encoder_attention_mask:l}=await D(this,a),c=i.dims[1]/this.config.reduction_factor,d=Math.floor(c*o),u=Math.floor(c*r),p=this.config.num_mel_bins;let _=[],h=null,g=null,f=0;for(;;){++f;const e=V(!!g);let r;r=g?g.output_sequence_out:new m.Tensor("float32",new Float32Array(p),[1,1,p]);let o={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:i};this.addPastKeyValues(o,h),g=await j(this.sessions.decoder_model_merged,o),h=this.getPastKeyValues(g,h);const{prob:n,spectrum:a}=g;if(_.push(a),f>=u&&(Array.from(n.data).filter((e=>e>=s)).length>0||f>=d))break}const M=(0,m.cat)(_),{waveform:w}=await j(n.sessions.model,{spectrogram:M});return{spectrogram:M,waveform:w}}}class hi extends H{main_input_name="spectrogram"}class gi extends H{}class fi extends gi{}class Mi extends H{}class wi extends Mi{}class Ti extends Mi{}class bi extends H{}class Pi extends bi{}class xi extends bi{}class ki extends H{}class yi extends ki{}class Fi extends ki{}class vi extends H{}class Ci extends vi{}class Si extends vi{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Ai extends vi{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class Ei extends H{}class Li extends Ei{async _call(e){return new Oc(await super._call(e))}}class Ii extends H{}class zi extends Ii{}class ji extends Ii{}class Ni extends Ii{}class Bi extends H{}class Vi extends Bi{}class Oi extends Bi{}class Di extends H{}class Gi extends Di{}class Ri extends Di{async _call(e){return new Ec(await super._call(e))}}class qi extends H{}class Wi extends qi{}class $i extends qi{}class Ui extends H{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,s]=e.dims,r=this.config.decoder.num_codebooks,o=s-r;let n=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const a=t%s-Math.floor(t/s)%r;a>0&&a<=o&&(e.data[n++]=e.data[t])}const a=Math.floor(t/r),i=n/(a*r);return new m.Tensor(e.type,e.data.slice(0,n),[a,r,i])}prepare_inputs_for_generation(e,t,s){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==s.guidance_scale&&s.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,s)}async generate(e){const t=await super.generate(e),s=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await j(this.sessions.encodec_decode,{audio_codes:s});return r}}class Qi extends H{}class Xi extends Qi{}class Hi extends Qi{async _call(e){return new Ec(await super._call(e))}}class Ji extends H{}class Yi extends Ji{}class Ki extends Ji{async _call(e){return new Ec(await super._call(e))}}class Zi extends H{}class el extends Zi{}class tl extends Zi{async _call(e){return new Ec(await super._call(e))}}class sl extends H{}class rl extends sl{}class ol extends sl{async _call(e){return new Ec(await super._call(e))}}class nl extends H{}class al extends nl{}class il extends H{}class ll extends il{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let s;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,i.pick)({image_ids:e.input_ids},t.inputNames);s=await j(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,i.pick)(e,t.inputNames);s=await j(t,r)}const r={...e,...s},o=await G(this,r),n=this.sessions["text"===t?"lm_head":"gen_head"];if(!n)throw new Error(`Unable to find "${n}" generation head`);const a=await j(n,(0,i.pick)(o,n.inputNames));return{...s,...o,...a}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],s=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:o}=await j(r,{generated_tokens:s}),n=o.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),a=[];for(const e of n){const t=p.RawImage.fromTensor(e);a.push(t)}return a}}class cl extends J{constructor({char_logits:e,bpe_logits:t,wp_logits:s}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class dl extends H{}class ul extends dl{async _call(e){return new cl(await super._call(e))}}class ml extends H{}class pl extends ml{}class _l extends ml{}class hl extends H{}class gl extends hl{}class fl extends hl{}class Ml{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:c=null,dtype:d=null,use_external_data_format:u=null,session_options:m={}}={}){const p={progress_callback:t,config:s,cache_dir:o,local_files_only:n,revision:a,model_file_name:i,subfolder:l,device:c,dtype:d,use_external_data_format:u,session_options:m};if(p.config=await r.AutoConfig.from_pretrained(e,p),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const t of this.MODEL_CLASS_MAPPINGS){const s=t.get(p.config.model_type);if(s)return await s[1].from_pretrained(e,p)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${p.config.model_type}", attempting to construct from base class.`),await H.from_pretrained(e,p);throw Error(`Unsupported model type: ${p.config.model_type}`)}}const wl=new Map([["bert",["BertModel",Z]],["modernbert",["ModernBertModel",ne]],["nomic_bert",["NomicBertModel",de]],["roformer",["RoFormerModel",me]],["electra",["ElectraModel",ke]],["esm",["EsmModel",et]],["convbert",["ConvBertModel",Me]],["camembert",["CamembertModel",Ae]],["deberta",["DebertaModel",Ne]],["deberta-v2",["DebertaV2Model",Re]],["mpnet",["MPNetModel",dt]],["albert",["AlbertModel",bt]],["distilbert",["DistilBertModel",Xe]],["roberta",["RobertaModel",Jt]],["xlm",["XLMModel",ss]],["xlm-roberta",["XLMRobertaModel",ls]],["clap",["ClapModel",Ci]],["clip",["CLIPModel",Ns]],["clipseg",["CLIPSegModel",Ks]],["chinese_clip",["ChineseCLIPModel",Us]],["siglip",["SiglipModel",Rs]],["jina_clip",["JinaCLIPModel",Xs]],["mobilebert",["MobileBertModel",nt]],["squeezebert",["SqueezeBertModel",gt]],["wav2vec2",["Wav2Vec2Model",Ea]],["wav2vec2-bert",["Wav2Vec2BertModel",Ja]],["unispeech",["UniSpeechModel",Ga]],["unispeech-sat",["UniSpeechSatModel",$a]],["hubert",["HubertModel",ei]],["wavlm",["WavLMModel",oi]],["audio-spectrogram-transformer",["ASTModel",_s]],["vits",["VitsModel",Li]],["pyannote",["PyAnnoteModel",Na]],["wespeaker-resnet",["WeSpeakerResNetModel",Oa]],["detr",["DetrModel",dn]],["rt_detr",["RTDetrModel",gn]],["table-transformer",["TableTransformerModel",Tn]],["vit",["ViTModel",yo]],["ijepa",["IJepaModel",Co]],["pvt",["PvtModel",Io]],["vit_msn",["ViTMSNModel",Vo]],["vit_mae",["ViTMAEModel",No]],["groupvit",["GroupViTModel",Go]],["fastvit",["FastViTModel",qo]],["mobilevit",["MobileViTModel",Xo]],["mobilevitv2",["MobileViTV2Model",Yo]],["owlvit",["OwlViTModel",en]],["owlv2",["Owlv2Model",rn]],["beit",["BeitModel",an]],["deit",["DeiTModel",kn]],["hiera",["HieraModel",vn]],["convnext",["ConvNextModel",oa]],["convnextv2",["ConvNextV2Model",ia]],["dinov2",["Dinov2Model",da]],["dinov2_with_registers",["Dinov2WithRegistersModel",pa]],["resnet",["ResNetModel",An]],["swin",["SwinModel",In]],["swin2sr",["Swin2SRModel",Nn]],["donut-swin",["DonutSwinModel",sa]],["yolos",["YolosModel",Ma]],["dpt",["DPTModel",On]],["glpn",["GLPNModel",Zn]],["hifigan",["SpeechT5HifiGan",hi]],["efficientnet",["EfficientNetModel",Gi]],["decision_transformer",["DecisionTransformerModel",al]],["patchtst",["PatchTSTForPrediction",pl]],["patchtsmixer",["PatchTSMixerForPrediction",gl]],["mobilenet_v1",["MobileNetV1Model",Xi]],["mobilenet_v2",["MobileNetV2Model",Yi]],["mobilenet_v3",["MobileNetV3Model",el]],["mobilenet_v4",["MobileNetV4Model",rl]],["maskformer",["MaskFormerModel",Jn]],["mgp-str",["MgpstrForSceneTextRecognition",ul]],["style_text_to_speech_2",["StyleTextToSpeech2Model",di]]]),Tl=new Map([["t5",["T5Model",Ft]],["longt5",["LongT5Model",St]],["mt5",["MT5Model",Lt]],["bart",["BartModel",jt]],["mbart",["MBartModel",Ot]],["marian",["MarianModel",ya]],["whisper",["WhisperModel",fs]],["m2m_100",["M2M100Model",Ca]],["blenderbot",["BlenderbotModel",Wt]],["blenderbot-small",["BlenderbotSmallModel",Qt]]]),bl=new Map([["bloom",["BloomModel",go]],["jais",["JAISModel",or]],["gpt2",["GPT2Model",tr]],["gptj",["GPTJModel",pr]],["gpt_bigcode",["GPTBigCodeModel",gr]],["gpt_neo",["GPTNeoModel",ir]],["gpt_neox",["GPTNeoXModel",dr]],["codegen",["CodeGenModel",wr]],["llama",["LlamaModel",Pr]],["exaone",["ExaoneModel",Er]],["olmo",["OlmoModel",Br]],["olmo2",["Olmo2Model",Dr]],["mobilellm",["MobileLLMModel",zr]],["granite",["GraniteModel",qr]],["cohere",["CohereModel",Ur]],["gemma",["GemmaModel",Hr]],["gemma2",["Gemma2Model",Kr]],["helium",["HeliumModel",yr]],["glm",["GlmModel",Cr]],["openelm",["OpenELMModel",to]],["qwen2",["Qwen2Model",oo]],["phi",["PhiModel",co]],["phi3",["Phi3Model",po]],["mpt",["MptModel",wo]],["opt",["OPTModel",Po]],["mistral",["MistralModel",wi]],["starcoder2",["Starcoder2Model",Pi]],["falcon",["FalconModel",yi]],["stablelm",["StableLmModel",Vi]]]),Pl=new Map([["speecht5",["SpeechT5ForSpeechToText",pi]],["whisper",["WhisperForConditionalGeneration",Ms]],["moonshine",["MoonshineForConditionalGeneration",bs]]]),xl=new Map([["speecht5",["SpeechT5ForTextToSpeech",_i]]]),kl=new Map([["vits",["VitsModel",Li]],["musicgen",["MusicgenForConditionalGeneration",Ui]]]),yl=new Map([["bert",["BertForSequenceClassification",te]],["modernbert",["ModernBertForSequenceClassification",ie]],["roformer",["RoFormerForSequenceClassification",_e]],["electra",["ElectraForSequenceClassification",Fe]],["esm",["EsmForSequenceClassification",st]],["convbert",["ConvBertForSequenceClassification",Te]],["camembert",["CamembertForSequenceClassification",Le]],["deberta",["DebertaForSequenceClassification",Ve]],["deberta-v2",["DebertaV2ForSequenceClassification",We]],["mpnet",["MPNetForSequenceClassification",mt]],["albert",["AlbertForSequenceClassification",Pt]],["distilbert",["DistilBertForSequenceClassification",He]],["roberta",["RobertaForSequenceClassification",Kt]],["xlm",["XLMForSequenceClassification",os]],["xlm-roberta",["XLMRobertaForSequenceClassification",ds]],["bart",["BartForSequenceClassification",Bt]],["mbart",["MBartForSequenceClassification",Gt]],["mobilebert",["MobileBertForSequenceClassification",it]],["squeezebert",["SqueezeBertForSequenceClassification",Mt]]]),Fl=new Map([["bert",["BertForTokenClassification",se]],["modernbert",["ModernBertForTokenClassification",le]],["roformer",["RoFormerForTokenClassification",he]],["electra",["ElectraForTokenClassification",ve]],["esm",["EsmForTokenClassification",rt]],["convbert",["ConvBertForTokenClassification",be]],["camembert",["CamembertForTokenClassification",Ie]],["deberta",["DebertaForTokenClassification",Oe]],["deberta-v2",["DebertaV2ForTokenClassification",$e]],["mpnet",["MPNetForTokenClassification",pt]],["distilbert",["DistilBertForTokenClassification",Je]],["roberta",["RobertaForTokenClassification",Zt]],["xlm",["XLMForTokenClassification",ns]],["xlm-roberta",["XLMRobertaForTokenClassification",us]]]),vl=new Map([["t5",["T5ForConditionalGeneration",vt]],["longt5",["LongT5ForConditionalGeneration",At]],["mt5",["MT5ForConditionalGeneration",It]],["bart",["BartForConditionalGeneration",Nt]],["mbart",["MBartForConditionalGeneration",Dt]],["marian",["MarianMTModel",Fa]],["m2m_100",["M2M100ForConditionalGeneration",Sa]],["blenderbot",["BlenderbotForConditionalGeneration",$t]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Xt]]]),Cl=new Map([["bloom",["BloomForCausalLM",fo]],["gpt2",["GPT2LMHeadModel",sr]],["jais",["JAISLMHeadModel",nr]],["gptj",["GPTJForCausalLM",_r]],["gpt_bigcode",["GPTBigCodeForCausalLM",fr]],["gpt_neo",["GPTNeoForCausalLM",lr]],["gpt_neox",["GPTNeoXForCausalLM",ur]],["codegen",["CodeGenForCausalLM",Tr]],["llama",["LlamaForCausalLM",xr]],["exaone",["ExaoneForCausalLM",Lr]],["olmo",["OlmoForCausalLM",Vr]],["olmo2",["Olmo2ForCausalLM",Gr]],["mobilellm",["MobileLLMForCausalLM",jr]],["granite",["GraniteForCausalLM",Wr]],["cohere",["CohereForCausalLM",Qr]],["gemma",["GemmaForCausalLM",Jr]],["gemma2",["Gemma2ForCausalLM",Zr]],["helium",["HeliumForCausalLM",Fr]],["glm",["GlmForCausalLM",Sr]],["openelm",["OpenELMForCausalLM",so]],["qwen2",["Qwen2ForCausalLM",no]],["phi",["PhiForCausalLM",uo]],["phi3",["Phi3ForCausalLM",_o]],["mpt",["MptForCausalLM",To]],["opt",["OPTForCausalLM",xo]],["mbart",["MBartForCausalLM",Rt]],["mistral",["MistralForCausalLM",Ti]],["starcoder2",["Starcoder2ForCausalLM",xi]],["falcon",["FalconForCausalLM",Fi]],["trocr",["TrOCRForCausalLM",fi]],["stablelm",["StableLmForCausalLM",Oi]],["phi3_v",["Phi3VForCausalLM",zs]]]),Sl=new Map([["multi_modality",["MultiModalityCausalLM",ll]]]),Al=new Map([["bert",["BertForMaskedLM",ee]],["modernbert",["ModernBertForMaskedLM",ae]],["roformer",["RoFormerForMaskedLM",pe]],["electra",["ElectraForMaskedLM",ye]],["esm",["EsmForMaskedLM",tt]],["convbert",["ConvBertForMaskedLM",we]],["camembert",["CamembertForMaskedLM",Ee]],["deberta",["DebertaForMaskedLM",Be]],["deberta-v2",["DebertaV2ForMaskedLM",qe]],["mpnet",["MPNetForMaskedLM",ut]],["albert",["AlbertForMaskedLM",kt]],["distilbert",["DistilBertForMaskedLM",Ke]],["roberta",["RobertaForMaskedLM",Yt]],["xlm",["XLMWithLMHeadModel",rs]],["xlm-roberta",["XLMRobertaForMaskedLM",cs]],["mobilebert",["MobileBertForMaskedLM",at]],["squeezebert",["SqueezeBertForMaskedLM",ft]]]),El=new Map([["bert",["BertForQuestionAnswering",re]],["roformer",["RoFormerForQuestionAnswering",ge]],["electra",["ElectraForQuestionAnswering",Ce]],["convbert",["ConvBertForQuestionAnswering",Pe]],["camembert",["CamembertForQuestionAnswering",ze]],["deberta",["DebertaForQuestionAnswering",De]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ue]],["mpnet",["MPNetForQuestionAnswering",_t]],["albert",["AlbertForQuestionAnswering",xt]],["distilbert",["DistilBertForQuestionAnswering",Ye]],["roberta",["RobertaForQuestionAnswering",es]],["xlm",["XLMForQuestionAnswering",as]],["xlm-roberta",["XLMRobertaForQuestionAnswering",ms]],["mobilebert",["MobileBertForQuestionAnswering",lt]],["squeezebert",["SqueezeBertForQuestionAnswering",wt]]]),Ll=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ps]],["idefics3",["Idefics3ForConditionalGeneration",Ls]]]),Il=new Map([["llava",["LlavaForConditionalGeneration",ks]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",ys]],["moondream1",["Moondream1ForConditionalGeneration",Fs]],["florence2",["Florence2ForConditionalGeneration",Cs]],["qwen2-vl",["Qwen2VLForConditionalGeneration",io]],["idefics3",["Idefics3ForConditionalGeneration",Ls]],["paligemma",["PaliGemmaForConditionalGeneration",As]]]),zl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ps]]]),jl=new Map([["vit",["ViTForImageClassification",Fo]],["ijepa",["IJepaForImageClassification",So]],["pvt",["PvtForImageClassification",zo]],["vit_msn",["ViTMSNForImageClassification",Oo]],["fastvit",["FastViTForImageClassification",Wo]],["mobilevit",["MobileViTForImageClassification",Ho]],["mobilevitv2",["MobileViTV2ForImageClassification",Ko]],["beit",["BeitForImageClassification",ln]],["deit",["DeiTForImageClassification",yn]],["hiera",["HieraForImageClassification",Cn]],["convnext",["ConvNextForImageClassification",na]],["convnextv2",["ConvNextV2ForImageClassification",la]],["dinov2",["Dinov2ForImageClassification",ua]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",_a]],["resnet",["ResNetForImageClassification",En]],["swin",["SwinForImageClassification",zn]],["segformer",["SegformerForImageClassification",ji]],["efficientnet",["EfficientNetForImageClassification",Ri]],["mobilenet_v1",["MobileNetV1ForImageClassification",Hi]],["mobilenet_v2",["MobileNetV2ForImageClassification",Ki]],["mobilenet_v3",["MobileNetV3ForImageClassification",tl]],["mobilenet_v4",["MobileNetV4ForImageClassification",ol]]]),Nl=new Map([["detr",["DetrForObjectDetection",un]],["rt_detr",["RTDetrForObjectDetection",fn]],["table-transformer",["TableTransformerForObjectDetection",bn]],["yolos",["YolosForObjectDetection",wa]]]),Bl=new Map([["owlvit",["OwlViTForObjectDetection",tn]],["owlv2",["Owlv2ForObjectDetection",on]],["grounding-dino",["GroundingDinoForObjectDetection",ga]]]),Vl=new Map([["detr",["DetrForSegmentation",mn]],["clipseg",["CLIPSegForImageSegmentation",Zs]]]),Ol=new Map([["segformer",["SegformerForSemanticSegmentation",Ni]],["sapiens",["SapiensForSemanticSegmentation",Wn]]]),Dl=new Map([["detr",["DetrForSegmentation",mn]],["maskformer",["MaskFormerForInstanceSegmentation",Yn]]]),Gl=new Map([["sam",["SamModel",Pa]]]),Rl=new Map([["wav2vec2",["Wav2Vec2ForCTC",La]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Ya]],["unispeech",["UniSpeechForCTC",Ra]],["unispeech-sat",["UniSpeechSatForCTC",Ua]],["wavlm",["WavLMForCTC",ni]],["hubert",["HubertForCTC",ti]]]),ql=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Ia]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Ka]],["unispeech",["UniSpeechForSequenceClassification",qa]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Qa]],["wavlm",["WavLMForSequenceClassification",ai]],["hubert",["HubertForSequenceClassification",si]],["audio-spectrogram-transformer",["ASTForAudioClassification",hs]]]),Wl=new Map([["wavlm",["WavLMForXVector",ii]]]),$l=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Xa]],["wavlm",["WavLMForAudioFrameClassification",li]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",za]],["pyannote",["PyAnnoteForAudioFrameClassification",Ba]]]),Ul=new Map([["vitmatte",["VitMatteForImageMatting",Uo]]]),Ql=new Map([["patchtst",["PatchTSTForPrediction",_l]],["patchtsmixer",["PatchTSMixerForPrediction",fl]]]),Xl=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Bn]]]),Hl=new Map([["dpt",["DPTForDepthEstimation",Dn]],["depth_anything",["DepthAnythingForDepthEstimation",Rn]],["glpn",["GLPNForDepthEstimation",ea]],["sapiens",["SapiensForDepthEstimation",$n]],["depth_pro",["DepthProForDepthEstimation",Xn]]]),Jl=new Map([["sapiens",["SapiensForNormalEstimation",Un]]]),Yl=new Map([["vitpose",["VitPoseForPoseEstimation",Eo]]]),Kl=new Map([["clip",["CLIPVisionModelWithProjection",Ds]],["siglip",["SiglipVisionModel",Ws]],["jina_clip",["JinaCLIPVisionModel",Js]]]),Zl=[[wl,T],[Tl,b],[bl,k],[yl,T],[Fl,T],[vl,P],[Pl,P],[Cl,k],[Sl,C],[Al,T],[El,T],[Ll,x],[Il,F],[jl,T],[Vl,T],[Dl,T],[Ol,T],[Ul,T],[Ql,T],[Xl,T],[Hl,T],[Jl,T],[Yl,T],[Nl,T],[Bl,T],[Gl,y],[Rl,T],[ql,T],[xl,P],[kl,T],[Wl,T],[$l,T],[Kl,T]];for(const[e,t]of Zl)for(const[s,r]of e.values())A.set(s,t),L.set(r,s),E.set(s,r);const ec=[["MusicgenForConditionalGeneration",Ui,v],["Phi3VForCausalLM",zs,S],["CLIPTextModelWithProjection",Vs,T],["SiglipTextModel",qs,T],["JinaCLIPTextModel",Hs,T],["ClapTextModelWithProjection",Si,T],["ClapAudioModelWithProjection",Ai,T]];for(const[e,t,s]of ec)A.set(e,s),L.set(t,e),E.set(e,t);class tc extends Ml{static MODEL_CLASS_MAPPINGS=Zl.map((e=>e[0]));static BASE_IF_FAIL=!0}class sc extends Ml{static MODEL_CLASS_MAPPINGS=[yl]}class rc extends Ml{static MODEL_CLASS_MAPPINGS=[Fl]}class oc extends Ml{static MODEL_CLASS_MAPPINGS=[vl]}class nc extends Ml{static MODEL_CLASS_MAPPINGS=[Pl]}class ac extends Ml{static MODEL_CLASS_MAPPINGS=[xl]}class ic extends Ml{static MODEL_CLASS_MAPPINGS=[kl]}class lc extends Ml{static MODEL_CLASS_MAPPINGS=[Cl]}class cc extends Ml{static MODEL_CLASS_MAPPINGS=[Al]}class dc extends Ml{static MODEL_CLASS_MAPPINGS=[El]}class uc extends Ml{static MODEL_CLASS_MAPPINGS=[Ll]}class mc extends Ml{static MODEL_CLASS_MAPPINGS=[jl]}class pc extends Ml{static MODEL_CLASS_MAPPINGS=[Vl]}class _c extends Ml{static MODEL_CLASS_MAPPINGS=[Ol]}class hc extends Ml{static MODEL_CLASS_MAPPINGS=[Dl]}class gc extends Ml{static MODEL_CLASS_MAPPINGS=[Nl]}class fc extends Ml{static MODEL_CLASS_MAPPINGS=[Bl]}class Mc extends Ml{static MODEL_CLASS_MAPPINGS=[Gl]}class wc extends Ml{static MODEL_CLASS_MAPPINGS=[Rl]}class Tc extends Ml{static MODEL_CLASS_MAPPINGS=[ql]}class bc extends Ml{static MODEL_CLASS_MAPPINGS=[Wl]}class Pc extends Ml{static MODEL_CLASS_MAPPINGS=[$l]}class xc extends Ml{static MODEL_CLASS_MAPPINGS=[zl]}class kc extends Ml{static MODEL_CLASS_MAPPINGS=[Ul]}class yc extends Ml{static MODEL_CLASS_MAPPINGS=[Xl]}class Fc extends Ml{static MODEL_CLASS_MAPPINGS=[Hl]}class vc extends Ml{static MODEL_CLASS_MAPPINGS=[Jl]}class Cc extends Ml{static MODEL_CLASS_MAPPINGS=[Yl]}class Sc extends Ml{static MODEL_CLASS_MAPPINGS=[Kl]}class Ac extends J{constructor({logits:e,past_key_values:t,encoder_outputs:s,decoder_attentions:r=null,cross_attentions:o=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=s,this.decoder_attentions=r,this.cross_attentions=o}}class Ec extends J{constructor({logits:e,...t}){super(),this.logits=e;const s=Object.values(t);s.length>0&&(this.attentions=s)}}class Lc extends J{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class Ic extends J{constructor({logits:e}){super(),this.logits=e}}class zc extends J{constructor({logits:e}){super(),this.logits=e}}class jc extends J{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class Nc extends J{constructor({logits:e}){super(),this.logits=e}}class Bc extends J{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class Vc extends J{constructor({alphas:e}){super(),this.alphas=e}}class Oc extends J{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,t,s)=>{s.r(t),s.d(t,{ASTFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,s=t.data;for(let t=0;t<s.length;++t)s[t]=(s[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoFeatureExtractor:()=>a});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=(s("./src/base/feature_extraction_utils.js"),s("./src/models/feature_extractors.js"));class a{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),a=s.feature_extractor_type,i=n[a];if(!i)throw new Error(`Unknown feature_extractor_type: '${a}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new i(s)}}},"./src/models/auto/image_processing_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoImageProcessor:()=>i});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=s("./src/base/image_processors_utils.js"),a=s("./src/models/image_processors.js");class i{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),i=s.image_processor_type??s.feature_extractor_type;let l=a[i];return l||(void 0!==i&&console.warn(`Image processor type '${i}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),l=n.ImageProcessor),new l(s)}}},"./src/models/auto/processing_auto.js":(e,t,s)=>{s.r(t),s.d(t,{AutoProcessor:()=>c});var r=s("./src/utils/constants.js"),o=s("./src/utils/hub.js"),n=s("./src/base/processing_utils.js"),a=s("./src/models/processors.js"),i=s("./src/models/image_processors.js"),l=s("./src/models/feature_extractors.js");class c{static async from_pretrained(e,t={}){const s=await(0,o.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:c,feature_extractor_type:d,processor_class:u}=s;if(u&&a[u])return a[u].from_pretrained(e,t);if(!c&&!d)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const m={};if(c){const e=i[c];if(!e)throw new Error(`Unknown image_processor_type: '${c}'.`);m.image_processor=new e(s)}if(d){const e=i[d];if(e)m.image_processor=new e(s);else{const e=l[d];if(!e)throw new Error(`Unknown feature_extractor_type: '${d}'.`);m.feature_extractor=new e(s)}}return new n.Processor({},m)}}},"./src/models/beit/image_processing_beit.js":(e,t,s)=>{s.r(t),s.d(t,{BeitFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,t,s)=>{s.r(t),s.d(t,{BitImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,t,s)=>{s.r(t),s.d(t,{ChineseCLIPFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,t,s)=>{s.r(t),s.d(t,{ClapFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,s,r){let o,n=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==s)throw new Error(`Truncation strategy "${s}" not implemented`);{n=!0;const s=Math.floor(Math.random()*(a+1));e=e.subarray(s,s+t),o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let s=new Float64Array(t);if(s.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)s.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)s.set(e,t);e=s}if("fusion"===s)throw new Error(`Truncation strategy "${s}" not implemented`);o=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return o.unsqueeze_(0)}async _extract_fbank_features(e,t,s=null){return(0,o.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,t,s)=>{s.r(t),s.d(t,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/convnext/image_processing_convnext.js":(e,t,s)=>{s.r(t),s.d(t,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const s=Math.floor(t/this.crop_pct),[r,o]=this.get_resize_output_image_size(e,{shortest_edge:s});e=await e.resize(r,o,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class n extends o{}},"./src/models/deit/image_processing_deit.js":(e,t,s)=>{s.r(t),s.d(t,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/detr/image_processing_detr.js":(e,t,s)=>{s.r(t),s.d(t,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e){const t=await super._call(e),s=[t.pixel_values.dims[0],64,64],r=(0,o.full)(s,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class a extends n{}},"./src/models/donut/image_processing_donut.js":(e,t,s)=>{s.r(t),s.d(t,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(e,t,s,r={}){const[o,n,a]=t;let i=this.image_mean;Array.isArray(this.image_mean)||(i=new Array(a).fill(i));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(i));const c=i.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,s,{center:!0,constant_values:c,...r})}}class n extends o{}},"./src/models/dpt/image_processing_dpt.js":(e,t,s)=>{s.r(t),s.d(t,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,t,s)=>{s.r(t),s.d(t,{EfficientNetImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}},"./src/models/feature_extractors.js":(e,t,s)=>{s.r(t),s.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,ImageFeatureExtractor:()=>m.ImageProcessor,MoonshineFeatureExtractor:()=>n.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>a.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>i.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>l.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>c.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor});var r=s("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),o=s("./src/models/clap/feature_extraction_clap.js"),n=s("./src/models/moonshine/feature_extraction_moonshine.js"),a=s("./src/models/pyannote/feature_extraction_pyannote.js"),i=s("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),l=s("./src/models/speecht5/feature_extraction_speecht5.js"),c=s("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),d=s("./src/models/wespeaker/feature_extraction_wespeaker.js"),u=s("./src/models/whisper/feature_extraction_whisper.js"),m=s("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,t,s)=>{s.r(t),s.d(t,{Florence2Processor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;constructor(e,t){super(e,t);const{tasks_answer_post_processing_type:s,task_prompts_without_inputs:r,task_prompts_with_input:o}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(r??{})),this.task_prompts_with_input=new Map(Object.entries(o??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const s of e)if(this.task_prompts_without_inputs.has(s))t.push(this.task_prompts_without_inputs.get(s));else{for(const[e,r]of this.task_prompts_with_input)if(s.includes(e)){t.push(r.replaceAll("{input}",s).replaceAll(e,""));break}t.length!==e.length&&t.push(s)}return t}post_process_generation(e,t,s){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let o;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":o=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const n="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[n]),i=[],l=[];for(const[e,t,...r]of a)i.push(t?t.trim():i.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*s[t%2])));o={labels:i,[n]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:o}}async _call(e,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,s),...t?this.tokenizer(t,s):{}}}}},"./src/models/glpn/image_processing_glpn.js":(e,t,s)=>{s.r(t),s.d(t,{GLPNFeatureExtractor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,t,s)=>{s.r(t),s.d(t,{GroundingDinoImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e){const t=await super._call(e),s=t.pixel_values.dims,r=(0,o.ones)([s[0],s[2],s[3]]);return{...t,pixel_mask:r}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,t,s)=>{s.r(t),s.d(t,{GroundingDinoProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/base/image_processors_utils.js");function i(e,t){const s=e.dims.at(-1)-1,r=e.tolist();r.fill(!1,0,1),r.fill(!1,s);const o=t.tolist();return r.map(((e,t)=>e?t:null)).filter((e=>null!==e)).map((e=>o[e]))}class l extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;async _call(e,t,s={}){const r=e?await this.image_processor(e,s):{};return{...t?this.tokenizer(t,s):{},...r}}post_process_grounded_object_detection(e,t,{box_threshold:s=.25,text_threshold:r=.25,target_sizes:o=null}={}){const{logits:n,pred_boxes:l}=e,c=n.dims[0];if(null!==o&&o.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const d=n.dims.at(1),u=n.sigmoid(),m=u.max(-1).tolist(),p=l.tolist().map((e=>e.map((e=>(0,a.center_to_corners_format)(e))))),_=[];for(let e=0;e<c;++e){const n=null!==o?o[e]:null;null!==n&&(p[e]=p[e].map((e=>e.map(((e,t)=>e*n[(t+1)%2])))));const a=m[e],l=[],c=[],h=[];for(let o=0;o<d;++o){const n=a[o];if(n<=s)continue;const d=p[e][o],m=u[e][o];l.push(n),h.push(d);const _=i(m.gt(r),t[e]);c.push(_)}_.push({scores:l,boxes:h,labels:this.batch_decode(c)})}return _}}},"./src/models/idefics3/image_processing_idefics3.js":(e,t,s)=>{s.r(t),s.d(t,{Idefics3ImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[s,r]=e.dims.slice(-2);const o=r/s;return r>=s?(r=Math.ceil(r/t)*t,s=Math.floor(r/o),s=Math.ceil(s/t)*t):(s=Math.ceil(s/t)*t,r=Math.floor(s*o),r=Math.ceil(r/t)*t),{height:s,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:s=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let n=[],a=[],i=[];const l=[],c=[];for(const e of r){let s=await Promise.all(e.map((e=>this.preprocess(e))));l.push(...s.map((e=>e.original_size))),c.push(...s.map((e=>e.reshaped_input_size))),s.forEach((e=>e.pixel_values.unsqueeze_(0)));const{longest_edge:r}=this.max_image_size;let d;if(t??this.do_image_splitting){let e=new Array(s.length),t=new Array(s.length);d=await Promise.all(s.map((async(s,n)=>{const a=this.get_resize_for_vision_encoder(s.pixel_values,r),i=await(0,o.interpolate_4d)(s.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:c,num_splits_w:d}=await this.split_image(i,this.max_image_size);return e[n]=c,t[n]=d,(0,o.cat)(l,0)}))),a.push(e),i.push(t)}else{const e=[r,r];d=await Promise.all(s.map((t=>(0,o.interpolate_4d)(t.pixel_values,{size:e})))),a.push(new Array(s.length).fill(0)),i.push(new Array(s.length).fill(0))}n.push((0,o.cat)(d,0))}const d=n.length,[u,m,p,_]=n[0].dims;let h,g;if(1===d)h=n[0].unsqueeze_(0),g=(0,o.full)([d,u,p,_],!0);else{const e=Math.max(...n.map((e=>e.dims.at(0))));g=(0,o.full)([d,e,p,_],!0);const t=g.data,s=e*p*_;for(let r=0;r<d;++r){const a=n[r].dims[0];if(a<e){n[r]=(0,o.cat)([n[r],(0,o.full)([e-a,m,p,_],0)],0);const i=r*s+a*p*_,l=(r+1)*s;t.fill(!1,i,l)}}h=(0,o.stack)(n,0)}return{pixel_values:h,pixel_attention_mask:g,original_sizes:l,reshaped_input_sizes:c,...s?{rows:a,cols:i}:{}}}async split_image(e,{longest_edge:t}){const s=t,r=t,n=[],[a,i]=e.dims.slice(-2);let l=0,c=0;if(a>s||i>r){l=Math.ceil(a/s),c=Math.ceil(i/r);const t=Math.ceil(a/l),d=Math.ceil(i/c);for(let s=0;s<l;++s)for(let r=0;r<c;++r){let u,m,p,_;s===l-1?(m=a-t,_=a):(m=s*t,_=(s+1)*t),r===c-1?(u=i-d,p=i):(u=r*d,p=(r+1)*d);const h=[m,u],g=[_,p],f=await(0,o.slice)(e,h,g,[2,3]);n.push(f)}const u=s,m=r;a===u&&i===m||(e=await(0,o.interpolate_4d)(e,{size:[u,m]}))}return n.push(e),{frames:n,num_splits_h:l,num_splits_w:c}}}},"./src/models/idefics3/processing_idefics3.js":(e,t,s)=>{s.r(t),s.d(t,{Idefics3Processor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=(s("./src/utils/image.js"),s("./src/utils/core.js"));function i(e,t,s,r,o,n){return 0===e&&0===t?function(e,t,s,r){return`${t}${r}`+s.repeat(e)+`${t}`}(s,r,o,n):function(e,t,s,r,o,n){let a="";for(let n=0;n<t;++n){for(let t=0;t<s;++t)a+=r+`<row_${n+1}_col_${t+1}>`+o.repeat(e);a+="\n"}return a+=`\n${r}${n}`+o.repeat(e)+`${r}`,a}(s,e,t,r,o,n)}class l extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,s={}){let r;s.return_row_col_info??=!0,t&&(r=await this.image_processor(t,s)),Array.isArray(e)||(e=[e]);const o=r.rows??[new Array(e.length).fill(0)],n=r.cols??[new Array(e.length).fill(0)],l=this.config.image_seq_len,c=[],d=[];for(let t=0;t<e.length;++t){const s=e[t],r=o[t],u=n[t];c.push((0,a.count)(s,this.image_token));const m=r.map(((e,t)=>i(e,u[t],l,this.fake_image_token,this.image_token,this.global_img_token))),p=s.split(this.image_token);if(0===p.length)throw new Error("The image token should be present in the text.");let _=p[0];for(let e=0;e<m.length;++e)_+=m[e]+p[e+1];d.push(_)}return{...this.tokenizer(d),...r}}}},"./src/models/image_processors.js":(e,t,s)=>{s.r(t),s.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>o.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>i.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>i.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>d.DonutFeatureExtractor,DonutImageProcessor:()=>d.DonutImageProcessor,EfficientNetImageProcessor:()=>m.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>p.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>h.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>M.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>w.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>T.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>T.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>b.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>b.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>P.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>P.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>k.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>k.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>y.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>y.MobileViTImageProcessor,NougatImageProcessor:()=>F.NougatImageProcessor,OwlViTFeatureExtractor:()=>C.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>C.OwlViTImageProcessor,Owlv2ImageProcessor:()=>v.Owlv2ImageProcessor,Phi3VImageProcessor:()=>S.Phi3VImageProcessor,PvtImageProcessor:()=>A.PvtImageProcessor,Qwen2VLImageProcessor:()=>E.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>L.RTDetrImageProcessor,SamImageProcessor:()=>I.SamImageProcessor,SegformerFeatureExtractor:()=>z.SegformerFeatureExtractor,SegformerImageProcessor:()=>z.SegformerImageProcessor,SiglipImageProcessor:()=>j.SiglipImageProcessor,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>B.ViTFeatureExtractor,ViTImageProcessor:()=>B.ViTImageProcessor,VitMatteImageProcessor:()=>V.VitMatteImageProcessor,VitPoseImageProcessor:()=>O.VitPoseImageProcessor,YolosFeatureExtractor:()=>D.YolosFeatureExtractor,YolosImageProcessor:()=>D.YolosImageProcessor});var r=s("./src/models/beit/image_processing_beit.js"),o=s("./src/models/bit/image_processing_bit.js"),n=s("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=s("./src/models/clip/image_processing_clip.js"),i=s("./src/models/convnext/image_processing_convnext.js"),l=s("./src/models/deit/image_processing_deit.js"),c=s("./src/models/detr/image_processing_detr.js"),d=s("./src/models/donut/image_processing_donut.js"),u=s("./src/models/dpt/image_processing_dpt.js"),m=s("./src/models/efficientnet/image_processing_efficientnet.js"),p=s("./src/models/glpn/image_processing_glpn.js"),_=s("./src/models/grounding_dino/image_processing_grounding_dino.js"),h=s("./src/models/idefics3/image_processing_idefics3.js"),g=s("./src/models/janus/image_processing_janus.js"),f=s("./src/models/jina_clip/image_processing_jina_clip.js"),M=s("./src/models/llava_onevision/image_processing_llava_onevision.js"),w=s("./src/models/mask2former/image_processing_mask2former.js"),T=s("./src/models/maskformer/image_processing_maskformer.js"),b=s("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),P=s("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=s("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),k=s("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),y=s("./src/models/mobilevit/image_processing_mobilevit.js"),F=s("./src/models/nougat/image_processing_nougat.js"),v=s("./src/models/owlv2/image_processing_owlv2.js"),C=s("./src/models/owlvit/image_processing_owlvit.js"),S=s("./src/models/phi3_v/image_processing_phi3_v.js"),A=s("./src/models/pvt/image_processing_pvt.js"),E=s("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),L=s("./src/models/rt_detr/image_processing_rt_detr.js"),I=s("./src/models/sam/image_processing_sam.js"),z=s("./src/models/segformer/image_processing_segformer.js"),j=s("./src/models/siglip/image_processing_siglip.js"),N=s("./src/models/swin2sr/image_processing_swin2sr.js"),B=s("./src/models/vit/image_processing_vit.js"),V=s("./src/models/vitmatte/image_processing_vitmatte.js"),O=s("./src/models/vitpose/image_processing_vitpose.js"),D=s("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,t,s)=>{s.r(t),s.d(t,{VLMImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map((e=>e*this.rescale_factor))}pad_image(e,t,s,r){return super.pad_image(e,t,s,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":(e,t,s)=>{s.r(t),s.d(t,{VLChatProcessor:()=>c});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/utils/core.js"),i=s("./src/utils/tensor.js"),l=s("./src/utils/image.js");class c extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;static uses_processor_config=!0;constructor(e,t){super(e,t),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:s="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter((e=>e.images)).flatMap((e=>e.images)).map((e=>l.RawImage.read(e))));const r=this.tokenizer,o=e=>r.encode(e,{add_special_tokens:!1}),n=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:s}).split(this.image_tag),c=n.length-1;if(t.length!==c)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${c})`);const[d,u,m]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let p=o(n[0]),_=new Array(p.length).fill(!1);for(let e=1;e<n.length;++e){const t=new Array(this.num_image_tokens).fill(d),s=o(n[e]);p=(0,a.mergeArrays)(p,[u],t,[m],s);const r=new Array(this.num_image_tokens).fill(!0);_=(0,a.mergeArrays)(_,[!1],r,[!1],new Array(s.length).fill(!1))}const h=[1,p.length],g={input_ids:new i.Tensor("int64",p,h),attention_mask:new i.Tensor("int64",new Array(p.length).fill(1),h),images_seq_mask:new i.Tensor("bool",_,h),images_emb_mask:new i.Tensor("bool",new Array(c*this.num_image_tokens).fill(!0),[1,c,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{...g,...e}}return g}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,t,s)=>{s.r(t),s.d(t,{JinaCLIPImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:s,interpolation:r,size:o,...n}=e;super({...n,size:"squash"===t?{width:o,height:o}:"shortest"===t?{shortest_edge:o}:{longest_edge:o},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:o,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,t,s)=>{s.r(t),s.d(t,{JinaCLIPProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;async _call(e=null,t=null,s={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,s):{},...t?await this.image_processor(t,s):{}}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,t,s)=>{s.r(t),s.d(t,{LlavaOnevisionImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,t,s)=>{s.r(t),s.d(t,{Mask2FormerImageProcessor:()=>o});var r=s("./src/models/maskformer/image_processing_maskformer.js");class o extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,t,s)=>{s.r(t),s.d(t,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class n extends o{}},"./src/models/mgp_str/processing_mgp_str.js":(e,t,s)=>{s.r(t),s.d(t,{MgpstrProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js"),a=s("./src/utils/maths.js");const i={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!i.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[s,r]=i[t],o=this[s].bind(this),[n,l]=e.dims,c=[],d=[],u=e.tolist();for(let e=0;e<n;++e){const t=u[e],s=[],o=[];for(let e=1;e<l;++e){const[n,i]=(0,a.max)((0,a.softmax)(t[e]));if(o.push(n),i==r)break;s.push(i)}const n=o.length>0?o.reduce(((e,t)=>e*t),1):0;d.push(s),c.push(n)}return[o(d),c]}char_decode(e){return this.char_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}batch_decode([e,t,s]){const[r,o]=this._decode_helper(e,"char"),[n,i]=this._decode_helper(t,"bpe"),[l,c]=this._decode_helper(s,"wp"),d=[],u=[];for(let e=0;e<r.length;++e){const[t,s]=(0,a.max)([o[e],i[e],c[e]]);d.push([r[e],n[e],l[e]][s]),u.push(t)}return{generated_text:d,scores:u,char_preds:r,bpe_preds:n,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),s=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:s,wp_tokenizer:r},t}async _call(e,t=null){const s=await this.image_processor(e);return t&&(s.labels=this.tokenizer(t).input_ids),s}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,t,s)=>{s.r(t),s.d(t,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,t,s)=>{s.r(t),s.d(t,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,t,s)=>{s.r(t),s.d(t,{MoonshineFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js");class n extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new o.Tensor("float32",e,t)}}}},"./src/models/moonshine/processing_moonshine.js":(e,t,s)=>{s.r(t),s.d(t,{MoonshineProcessor:()=>a});var r=s("./src/models/auto/feature_extraction_auto.js"),o=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/nougat/image_processing_nougat.js":(e,t,s)=>{s.r(t),s.d(t,{NougatImageProcessor:()=>o});var r=s("./src/models/donut/image_processing_donut.js");class o extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,t,s)=>{s.r(t),s.d(t,{Owlv2ImageProcessor:()=>o});var r=s("./src/models/owlvit/image_processing_owlvit.js");class o extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,t,s)=>{s.r(t),s.d(t,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class n extends o{}},"./src/models/owlvit/processing_owlvit.js":(e,t,s)=>{s.r(t),s.d(t,{OwlViTProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,t,s)=>{s.r(t),s.d(t,{PaliGemmaProcessor:()=>i});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");const a="<image>";class i extends r.Processor{static tokenizer_class=n.AutoTokenizer;static image_processor_class=o.AutoImageProcessor;static uses_processor_config=!1;async _call(e,t=null,s={}){t||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const r=this.tokenizer.bos_token,o=this.image_processor.config.image_seq_length;let n;t.some((e=>e.includes(a)))?n=t.map((e=>{const t=e.replaceAll(a,a.repeat(o)),s=t.lastIndexOf(a),n=-1===s?0:s+7;return t.slice(0,n)+r+t.slice(n)+"\n"})):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),n=t.map((t=>function(e,t,s,r,o){return`${r.repeat(s*o)}${t}${e}\n`}(t,r,o,a,e.length))));const i=this.tokenizer(n,s);return{...await this.image_processor(e,s),...i}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,t,s)=>{s.r(t),s.d(t,{Phi3VImageProcessor:()=>d});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");const n=336,a=[2,3],{ceil:i,floor:l,sqrt:c}=Math;class d extends r.ImageProcessor{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:s}=this.config;return l((l(t/n)*l(e/n)+1)*s+1+(l(t/n)+1)*c(s))}get_resize_output_image_size(e,t){const s=this._num_crops,[r,o]=e.size;let n=r/o,a=1;for(;a*Math.ceil(a/n)<=s;)a+=1;a-=1;const i=Math.floor(336*a);return[i,Math.floor(i/n)]}pad_image(e,t,s,r={}){const[o,a]=t,l=n*i(o/n),c=n*i(a/n),d=[1,1,1].map(((e,t)=>(e-this.image_mean[t])/this.image_std[t]));return super.pad_image(e,t,{width:c,height:l},{center:!0,constant_values:d,...r})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??=this.config.num_crops,t<4||c(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const s=e.length,r=await Promise.all(e.map((e=>this.preprocess(e)))),d=r.map((e=>e.original_size)),u=r.map((e=>e.reshaped_input_size)),m=[];for(const{pixel_values:e}of r){e.unsqueeze_(0);const[s,r]=e.dims.slice(-2),i=await(0,o.interpolate_4d)(e,{size:[n,n],mode:"bicubic"});if(t>0){const d=[],u=c(t),p=l(r/u),_=l(s/u);for(let t=0;t<u;++t)for(let n=0;n<u;++n){let i,l,c,m;t===u-1?(l=s-_,m=s):(l=t*_,m=(t+1)*_),n===u-1?(i=r-p,c=r):(i=n*p,c=(n+1)*p);const h=[l,i],g=[m,c],f=await(0,o.slice)(e,h,g,a);d.push(f)}const h=await(0,o.interpolate_4d)((0,o.cat)(d,0),{size:[n,n],mode:"bicubic"});m.push((0,o.cat)([i,h],0))}else m.push(i)}const p=(0,o.stack)(m,0),_=u.map((e=>e.map((e=>n*i(e/n)))));return{pixel_values:p,original_sizes:d,reshaped_input_sizes:u,image_sizes:new o.Tensor("int64",_.flat(),[s,2]),num_img_tokens:_.map((([e,t])=>this.calc_num_image_tokens_from_image_size(t,e)))}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,t,s)=>{s.r(t),s.d(t,{Phi3VProcessor:()=>l});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");const a="<|image|>",i=/<\|image_\d+\|>/g;class l extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(e,t=null,{padding:s=!0,truncation:r=!0,num_crops:o=null}={}){let n,l;if(Array.isArray(e)||(e=[e]),t){l=await this.image_processor(t,{num_crops:o});const{num_img_tokens:c}=l,d=e.map(((e,t)=>e.split(i).join(a.repeat(c[t]))));n=this.tokenizer(d,{padding:s,truncation:r});const u=this.tokenizer.model.convert_tokens_to_ids([a])[0];n.input_ids.map_((e=>e==u?-e:e))}else n=this.tokenizer(e);return{...n,...l}}}},"./src/models/processors.js":(e,t,s)=>{s.r(t),s.d(t,{Florence2Processor:()=>r.Florence2Processor,GroundingDinoProcessor:()=>o.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>i.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>d.OwlViTProcessor,PaliGemmaProcessor:()=>m.PaliGemmaProcessor,Phi3VProcessor:()=>u.Phi3VProcessor,PyAnnoteProcessor:()=>p.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>h.SamProcessor,SpeechT5Processor:()=>g.SpeechT5Processor,VLChatProcessor:()=>a.VLChatProcessor,Wav2Vec2Processor:()=>f.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>w.WhisperProcessor});var r=s("./src/models/florence2/processing_florence2.js"),o=s("./src/models/grounding_dino/processing_grounding_dino.js"),n=s("./src/models/idefics3/processing_idefics3.js"),a=s("./src/models/janus/processing_janus.js"),i=s("./src/models/jina_clip/processing_jina_clip.js"),l=s("./src/models/mgp_str/processing_mgp_str.js"),c=s("./src/models/moonshine/processing_moonshine.js"),d=s("./src/models/owlvit/processing_owlvit.js"),u=s("./src/models/phi3_v/processing_phi3_v.js"),m=s("./src/models/paligemma/processing_paligemma.js"),p=s("./src/models/pyannote/processing_pyannote.js"),_=s("./src/models/qwen2_vl/processing_qwen2_vl.js"),h=s("./src/models/sam/processing_sam.js"),g=s("./src/models/speecht5/processing_speecht5.js"),f=s("./src/models/wav2vec2/processing_wav2vec2.js"),M=s("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),w=s("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,t,s)=>{s.r(t),s.d(t,{PvtImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,t,s)=>{s.r(t),s.d(t,{PyAnnoteFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new o.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const s=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let o=-1;for(let s=0;s<t.length;++s){const r=(0,n.softmax)(t[s]),[a,i]=(0,n.max)(r),[l,c]=[s,s+1];i!==o?(o=i,e.push({id:i,start:l,end:c,score:a})):(e.at(-1).end=c,e.at(-1).score+=a)}r.push(e.map((({id:e,start:t,end:r,score:o})=>({id:e,start:t*s,end:r*s,confidence:o/(r-t)}))))}return r}}},"./src/models/pyannote/processing_pyannote.js":(e,t,s)=>{s.r(t),s.d(t,{PyAnnoteProcessor:()=>n});var r=s("./src/base/processing_utils.js"),o=s("./src/models/pyannote/feature_extraction_pyannote.js");class n extends r.Processor{static feature_extractor_class=o.PyAnnoteFeatureExtractor;async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,t,s)=>{s.r(t),s.d(t,{Qwen2VLImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e,...t){const{pixel_values:s,original_sizes:r,reshaped_input_sizes:n}=await super._call(e,...t);let a=s;const{temporal_patch_size:i,merge_size:l,patch_size:c}=this.config;1===a.dims[0]&&(a=(0,o.cat)(Array.from({length:i},(()=>a)),0));const d=a.dims[0]/i,u=a.dims[1],m=Math.floor(a.dims[2]/c),p=Math.floor(a.dims[3]/c);return{pixel_values:a.view(d,i,u,Math.floor(m/l),l,c,Math.floor(p/l),l,c).permute(0,3,6,4,7,2,1,5,8).view(d*m*p,u*i*c*c),image_grid_thw:new o.Tensor("int64",[d,m,p],[1,3]),original_sizes:r,reshaped_input_sizes:n}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,t,s)=>{s.r(t),s.d(t,{Qwen2VLProcessor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js"),n=s("./src/tokenizers.js");s("./src/utils/image.js");class a extends r.Processor{static image_processor_class=o.AutoImageProcessor;static tokenizer_class=n.AutoTokenizer;async _call(e,t=null,...s){let r,o;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),o=r.image_grid_thw),o){let t=this.image_processor.config.merge_size**2,s=0;const r=o.tolist();e=e.map((e=>{for(;e.includes("<|image_pad|>");){const o=Number(r[s++].reduce(((e,t)=>e*t),1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(o/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")}))}return{...this.tokenizer(e),...r}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,t,s)=>{s.r(t),s.d(t,{RTDetrImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":(e,t,s)=>{s.r(t),s.d(t,{SamImageProcessor:()=>a});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/core.js"),n=s("./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(e,t,s,r=!1){e=structuredClone(e);let a=(0,o.calculateDimensions)(e);if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let o=t[r],n=s[r],a=[n[0]/o[0],n[1]/o[1]];for(let t=0;t<e[r].length;++t)for(let s=0;s<e[r][t].length;++s)for(let o=0;o<e[r][t][s].length;++o)e[r][t][s][o]*=a[o%2]}return new n.Tensor("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let s=(0,o.calculateDimensions)(e);if(2===s.length)s=[1,...s],e=[e];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some(((e,s)=>e!==t.dims[s])))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",e.flat(1/0).map(BigInt),s)}async _call(e,{input_points:t=null,input_labels:s=null,input_boxes:r=null}={}){const o=await super._call(e);if(t&&(o.input_points=this.reshape_input_points(t,o.original_sizes,o.reshaped_input_sizes)),s){if(!o.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");o.input_labels=this.add_input_labels(s,o.input_points)}return r&&(o.input_boxes=this.reshape_input_points(r,o.original_sizes,o.reshaped_input_sizes,!0)),o}async post_process_masks(e,t,s,{mask_threshold:r=0,binarize:o=!0,pad_size:a=null}={}){const i=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){const c=t[a],d=s[a];let u=await(0,n.interpolate_4d)(e[a],{mode:"bilinear",size:l});if(u=u.slice(null,null,[0,d[0]],[0,d[1]]),u=await(0,n.interpolate_4d)(u,{mode:"bilinear",size:c}),o){const e=u.data,t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)e[s]>r&&(t[s]=1);u=new n.Tensor("bool",t,u.dims)}i.push(u)}return i}generate_crop_boxes(e,t,{crop_n_layers:s=0,overlap_ratio:r=512/1500,points_per_crop:o=32,crop_n_points_downscale_factor:n=1}={}){}}},"./src/models/sam/processing_sam.js":(e,t,s)=>{s.r(t),s.d(t,{SamProcessor:()=>n});var r=s("./src/base/processing_utils.js"),o=s("./src/models/auto/image_processing_auto.js");class n extends r.Processor{static image_processor_class=o.AutoImageProcessor;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,t,s)=>{s.r(t),s.d(t,{SeamlessM4TFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js"),n=s("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,n.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:n=!0,return_attention_mask:a=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let i,l=await this._extract_fbank_features(e,this.config.max_length);if(n){const[e,t]=l.dims,s=l.data;for(let r=0;r<t;++r){let o=0;for(let n=0;n<e;++n)o+=s[n*t+r];const n=o/e;let a=0;for(let o=0;o<e;++o)a+=(s[o*t+r]-n)**2;a/=e-1;const i=Math.sqrt(a+1e-7);for(let o=0;o<e;++o){const e=o*t+r;s[e]=(s[e]-n)/i}}}if(t){const[e,t]=l.dims,r=l.data,n=e%s;if(n>0){const s=new Float32Array(t*(e+n));s.set(r),s.fill(this.config.padding_value,r.length);const c=e+n;l=new o.Tensor(l.type,s,[c,t]),a&&(i=new o.Tensor("int64",new BigInt64Array(c),[1,c]),i.data.fill(1n,0,e))}}const[c,d]=l.dims,u=this.config.stride;if(0!==c%u)throw new Error(`The number of frames (${c}) must be a multiple of the stride (${u}).`);const m=l.view(1,Math.floor(c/u),d*u),p={input_features:m};if(a){const e=m.dims[1],t=new BigInt64Array(e);if(i){const e=i.data;for(let s=1,r=0;s<c;s+=u,++r)t[r]=e[s]}else t.fill(1n);p.attention_mask=new o.Tensor("int64",t,[1,e])}return p}}},"./src/models/segformer/image_processing_segformer.js":(e,t,s)=>{s.r(t),s.d(t,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class n extends o{}},"./src/models/siglip/image_processing_siglip.js":(e,t,s)=>{s.r(t),s.d(t,{SiglipImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,t,s)=>{s.r(t),s.d(t,{SpeechT5FeatureExtractor:()=>o});var r=s("./src/base/feature_extraction_utils.js");class o extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,t,s)=>{s.r(t),s.d(t,{SpeechT5Processor:()=>a});var r=s("./src/base/processing_utils.js"),o=s("./src/tokenizers.js"),n=s("./src/models/auto/feature_extraction_auto.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,t,s)=>{s.r(t),s.d(t,{Swin2SRImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{pad_image(e,t,s,r={}){const[o,n,a]=t;return super.pad_image(e,t,{width:n+(s-n%s)%s,height:o+(s-o%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/vit/image_processing_vit.js":(e,t,s)=>{s.r(t),s.d(t,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{}class n extends o{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,t,s)=>{s.r(t),s.d(t,{VitMatteImageProcessor:()=>n});var r=s("./src/base/image_processors_utils.js"),o=s("./src/utils/tensor.js");class n extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const s=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,o.stack)(s.map(((e,t)=>(0,o.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:s.map((e=>e.original_size)),reshaped_input_sizes:s.map((e=>e.reshaped_input_size))}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,t,s)=>{s.r(t),s.d(t,{VitPoseImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:s=null}={}){const r=e.tolist(),[o,n,a,i]=e.dims,l=[];for(let e=0;e<o;++e){const o=r[e],n=t[e],c=[];for(let e=0;e<n.length;++e){const t=n[e],r=[],l=[],d=[],u=t.at(-2)/i,m=t.at(-1)/a;for(let e=0;e<o.length;++e){let[t,n]=[0,0],a=0,i=-1/0;const c=o[e];for(let e=0;e<c.length;++e){const s=c[e];for(let r=0;r<s.length;++r){const o=s[r];a+=o,i=Math.max(i,o),t+=(r+.5)*o,n+=e*o}}if(null!=s&&i<s)continue;const p=[u*t/a,m*n/a];r.push(p),d.push(e),l.push(i)}c.push({bbox:t,scores:l,labels:d,keypoints:r})}l.push(c)}return l}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2FeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=s("./src/utils/tensor.js");class n extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,s=e.reduce(((e,s)=>e+(s-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(s+1e-7)))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const s=[1,t.length];return{input_values:new o.Tensor("float32",t,s),attention_mask:new o.Tensor("int64",new BigInt64Array(t.length).fill(1n),s)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2Processor:()=>a});var r=s("./src/tokenizers.js"),o=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,t,s)=>{s.r(t),s.d(t,{Wav2Vec2ProcessorWithLM:()=>a});var r=s("./src/tokenizers.js"),o=s("./src/models/auto/feature_extraction_auto.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,t,s)=>{s.r(t),s.d(t,{WeSpeakerFeatureExtractor:()=>n});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js"));class n extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,s=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<s.length;++e)s[e].push(0);this.mel_filters=s,this.window=(0,o.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map((e=>32768*e)),(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,s=t.data,[r,o,n]=t.dims;for(let t=0;t<r;++t){const r=t*o*n,a=t*n;for(let t=0;t<o;++t){const o=r+t*n;for(let t=0;t<n;++t)s[o+t]-=e[a+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(r),n=new Map([...r.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=n.get(e);if(void 0===t){if(!o.has(e)){const t=2===e.length?o.keys():o.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperFeatureExtractor:()=>a});var r=s("./src/base/feature_extraction_utils.js"),o=(s("./src/utils/tensor.js"),s("./src/utils/audio.js")),n=s("./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,o.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),s=t.data,r=(0,n.max)(s)[0];for(let e=0;e<s.length;++e)s[e]=(Math.max(s[e],r-8)+4)/4;return t}async _call(e){let t;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e));return{input_features:(await this._extract_fbank_features(t)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperGenerationConfig:()=>o});var r=s("./src/generation/configuration_utils.js");class o extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,t,s)=>{s.r(t),s.d(t,{WhisperProcessor:()=>a});var r=s("./src/models/auto/feature_extraction_auto.js"),o=s("./src/tokenizers.js"),n=s("./src/base/processing_utils.js");class a extends n.Processor{static tokenizer_class=o.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/yolos/image_processing_yolos.js":(e,t,s)=>{s.r(t),s.d(t,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>o});var r=s("./src/base/image_processors_utils.js");class o extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class n extends o{}},"./src/ops/registry.js":(e,t,s)=>{s.r(t),s.d(t,{TensorOpRegistry:()=>l});var r=s("./src/backends/onnx.js"),o=s("./src/utils/tensor.js"),n=s("./src/env.js");const a=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,i=async(e,t,s)=>{const n=await(0,r.createInferenceSession)(new Uint8Array(e),t);let i=Promise.resolve();return async e=>{const t=(0,r.isONNXProxy)(),l=Object.fromEntries(Object.entries(e).map((([e,s])=>[e,(t?s.clone():s).ort_tensor]))),c=await(i=a?i.then((()=>n.run(l))):n.run(l));return Array.isArray(s)?s.map((e=>new o.Tensor(c[e]))):new o.Tensor(c[s])}};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=i([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=i([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=i([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=i([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=i([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=i([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=i([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=i([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,t,s)=>{s.r(t),s.d(t,{AudioClassificationPipeline:()=>C,AutomaticSpeechRecognitionPipeline:()=>A,DepthEstimationPipeline:()=>D,DocumentQuestionAnsweringPipeline:()=>B,FeatureExtractionPipeline:()=>F,FillMaskPipeline:()=>w,ImageClassificationPipeline:()=>L,ImageFeatureExtractionPipeline:()=>v,ImageSegmentationPipeline:()=>I,ImageToImagePipeline:()=>O,ImageToTextPipeline:()=>E,ObjectDetectionPipeline:()=>j,Pipeline:()=>h,QuestionAnsweringPipeline:()=>M,SummarizationPipeline:()=>b,Text2TextGenerationPipeline:()=>T,TextClassificationPipeline:()=>g,TextGenerationPipeline:()=>k,TextToAudioPipeline:()=>V,TokenClassificationPipeline:()=>f,TranslationPipeline:()=>P,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>y,ZeroShotImageClassificationPipeline:()=>z,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>q});var r=s("./src/tokenizers.js"),o=s("./src/models.js"),n=s("./src/models/auto/processing_auto.js"),a=(s("./src/base/processing_utils.js"),s("./src/utils/generic.js")),i=s("./src/utils/core.js"),l=s("./src/utils/maths.js"),c=s("./src/utils/audio.js"),d=s("./src/utils/tensor.js"),u=s("./src/utils/image.js");async function m(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>u.RawImage.read(e))))}async function p(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,c.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function _(e,t){t&&(e=e.map((e=>0|e)));const[s,r,o,n]=e;return{xmin:s,ymin:r,xmax:o,ymax:n}}class h extends a.Callable{constructor({task:e,model:t,tokenizer:s=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=s,this.processor=r}async dispose(){await this.model.dispose()}}class g extends h{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(s),o="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),n=this.model.config.id2label,a=[];for(const e of r.logits){const s=o(e),r=await(0,d.topk)(s,t),i=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:n?n[e]:`LABEL_${e}`,score:i[t]})));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class f extends h{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const s=Array.isArray(e),r=this.tokenizer(s?e:[e],{padding:!0,truncation:!0}),o=(await this.model(r)).logits,n=this.model.config.id2label,a=[];for(let e=0;e<o.dims[0];++e){const s=r.input_ids[e],i=o[e],c=[];for(let e=0;e<i.dims[0];++e){const r=i[e],o=(0,l.max)(r.data)[1],a=n?n[o]:`LABEL_${o}`;if(t.includes(a))continue;const d=this.tokenizer.decode([s[e].item()],{skip_special_tokens:!0});if(""===d)continue;const u=(0,l.softmax)(r.data);c.push({entity:a,score:u[o],index:e,word:d})}a.push(c)}return s?a:a[0]}}class M extends h{constructor(e){super(e)}async _call(e,t,{top_k:s=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:o,end_logits:n}=await this.model(r),a=r.input_ids.tolist(),c=r.attention_mask.tolist(),d=this.tokenizer.all_special_ids,u=[];for(let e=0;e<o.dims[0];++e){const t=a[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),m=(c[e].map(((e,s)=>1==e&&(0===s||s>r&&-1===d.findIndex((e=>e==t[s]))))),o[e].tolist()),p=n[e].tolist();for(let s=1;s<m.length;++s)(0==c[e]||s<=r||-1!==d.findIndex((e=>e==t[s])))&&(m[s]=-1/0,p[s]=-1/0);const _=(0,l.softmax)(m).map(((e,t)=>[e,t])),h=(0,l.softmax)(p).map(((e,t)=>[e,t]));_[0][0]=0,h[0][0]=0;const g=(0,i.product)(_,h).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(g.length,s);++e){const[s,r,o]=g[e],n=t.slice(s,r+1),a=this.tokenizer.decode(n,{skip_special_tokens:!0});u.push({answer:a,score:o})}}return 1===s?u[0]:u}}class w extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(s),o=[],n=s.input_ids.tolist();for(let e=0;e<n.length;++e){const s=n[e],a=s.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===a)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const i=r[e][a],c=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(i.data),i.dims),t),u=c[0].tolist(),m=c[1].tolist();o.push(m.map(((e,t)=>{const r=s.slice();return r[a]=e,{score:u[t],token:Number(e),token_str:this.tokenizer.decode([e]),sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?o:o[0]}}class T extends h{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const s=this.model.config.task_specific_params;s&&s[this.task]&&s[this.task].prefix&&(e=e.map((e=>s[this.task].prefix+e)));const r=this.tokenizer,o={padding:!0,truncation:!0};let n;n=this instanceof P&&"_build_translation_inputs"in r?r._build_translation_inputs(e,o,t):r(e,o);const a=await this.model.generate({...n,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class b extends T{_key="summary_text";constructor(e){super(e)}}class P extends T{_key="translation_text";constructor(e){super(e)}}function x(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class k extends h{constructor(e){super(e)}async _call(e,t={}){let s,r=!1,o=!1;if("string"==typeof e)s=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,s=e;else{if(x(e))e=[e];else{if(!Array.isArray(e)||!e.every(x))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}o=!0,s=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const n=t.add_special_tokens??!1,a=!o&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const i=this.tokenizer(s,{add_special_tokens:n,padding:!0,truncation:!0}),l=await this.model.generate({...i,...t}),c=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!a&&i.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(i.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const u=Array.from({length:e.length},(e=>[]));for(let t=0;t<c.length;++t){const s=Math.floor(t/l.dims[0]*e.length);d&&(c[t]=c[t].slice(d[s])),u[s].push({generated_text:o?[...e[s],{role:"assistant",content:c[t]}]:c[t]})}return r||1!==u.length?u:u[0]}}class y extends h{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:s="This example is {}.",multi_label:r=!1}={}){const o=Array.isArray(e);o||(e=[e]),Array.isArray(t)||(t=[t]);const n=t.map((e=>s.replace("{}",e))),a=r||1===t.length,i=[];for(const s of e){const e=[];for(const t of n){const r=this.tokenizer(s,{text_pair:t,padding:!0,truncation:!0}),o=await this.model(r);a?e.push([o.logits.data[this.contradiction_id],o.logits.data[this.entailment_id]]):e.push(o.logits.data[this.entailment_id])}const r=(a?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));i.push({sequence:s,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return o?i:i[0]}}class F extends h{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:s=!1,quantize:r=!1,precision:o="binary"}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(n);let i=a.last_hidden_state??a.logits??a.token_embeddings;if("none"===t);else if("mean"===t)i=(0,d.mean_pooling)(i,n.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);i=i.slice(null,0)}return s&&(i=i.normalize(2,-1)),r&&(i=(0,d.quantize_embeddings)(i,o)),i}}class v extends h{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const s=await m(e),{pixel_values:r}=await this.processor(s),o=await this.model({pixel_values:r});let n;if(t){if(!("pooler_output"in o))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");n=o.pooler_output}else n=o.last_hidden_state??o.logits??o.image_embeds;return n}}class C extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=this.processor.feature_extractor.config.sampling_rate,r=await p(e,s),o=this.model.config.id2label,n=[];for(const e of r){const s=await this.processor(e),r=(await this.model(s)).logits[0],a=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),i=a[0].tolist(),c=a[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:i[t]})));n.push(c)}return Array.isArray(e)?n:n[0]}}class S extends h{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const o=t.map((e=>s.replace("{}",e))),n=this.tokenizer(o,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,i=await p(e,a),c=[];for(const e of i){const s=await this.processor(e),r=await this.model({...n,...s}),o=(0,l.softmax)(r.logits_per_audio.data);c.push([...o].map(((e,s)=>({score:e,label:t[s]}))))}return r?c[0]:c}}class A extends h{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const s=!Array.isArray(e);s&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,o=await p(e,r),n=[];for(const e of o){const t=await this.processor(e),s=(await this.model(t)).logits[0],r=[];for(const e of s)r.push((0,l.max)(e.data)[1]);const o=this.tokenizer.decode(r);n.push({text:o})}return s?n[0]:n}async _call_whisper(e,t){const s=t.return_timestamps??!1,r=t.chunk_length_s??0,o=t.force_full_sequences??!1;let n=t.stride_length_s??null;const a={...t};"word"===s&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const i=!Array.isArray(e);i&&(e=[e]);const c=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,u=this.processor.feature_extractor.config.sampling_rate,m=await p(e,u),_=[];for(const e of m){let t=[];if(r>0){if(null===n)n=r/6;else if(r<=n)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const s=u*r,o=u*n,a=s-2*o;let i=0;for(;;){const r=i+s,n=e.subarray(i,r),l=await this.processor(n),c=0===i,d=r>=e.length;if(t.push({stride:[n.length,c?0:o,d?0:o],input_features:l.input_features,is_last:d}),d)break;i+=a}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){a.num_frames=Math.floor(e.stride[0]/d);const t=await this.model.generate({inputs:e.input_features,...a});"word"===s?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/u))}const[i,m]=this.tokenizer._decode_asr(t,{time_precision:c,return_timestamps:s,force_full_sequences:o});_.push({text:i,...m})}return i?_[0]:_}async _call_moonshine(e,t){const s=!Array.isArray(e);s&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,o=await p(e,r),n=[];for(const e of o){const s=await this.processor(e),o=6*Math.floor(e.length/r),a=await this.model.generate({max_new_tokens:o,...t,...s}),i=this.processor.batch_decode(a,{skip_special_tokens:!0})[0];n.push({text:i})}return s?n[0]:n}}class E extends h{constructor(e){super(e)}async _call(e,t={}){const s=Array.isArray(e),r=await m(e),{pixel_values:o}=await this.processor(r),n=[];for(const e of o){e.dims=[1,...e.dims];const s=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));n.push(r)}return s?n:n[0]}}class L extends h{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const s=await m(e),{pixel_values:r}=await this.processor(s),o=await this.model({pixel_values:r}),n=this.model.config.id2label,a=[];for(const e of o.logits){const s=await(0,d.topk)(new d.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=s[0].tolist(),o=s[1].tolist().map(((e,t)=>({label:n?n[e]:`LABEL_${e}`,score:r[t]})));a.push(o)}return Array.isArray(e)?a:a[0]}}class I extends h{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:s=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:o=null,target_sizes:n=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const i=await m(e),l=i.map((e=>[e.height,e.width])),{pixel_values:c,pixel_mask:d}=await this.processor(i),p=await this.model({pixel_values:c,pixel_mask:d});let _=null;if(null!==a)_=this.subtasks_mapping[a];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){_=this.processor.image_processor[t].bind(this.processor.image_processor),a=e;break}const h=this.model.config.id2label,g=[];if("panoptic"===a||"instance"===a){const e=_(p,t,s,r,o,n??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let s=0;s<a.data.length;++s)a.data[s]===t.id&&(e[s]=255);const s=new u.RawImage(e,a.dims[1],a.dims[0],1);g.push({score:t.score,label:h[t.label_id],mask:s})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=_(p,n??l)[0];for(const s of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===s&&(t[r]=255);const r=new u.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:h[s],mask:r})}}}return g}}class z extends h{constructor(e){super(e)}async _call(e,t,{hypothesis_template:s="This is a photo of {}"}={}){const r=Array.isArray(e),o=await m(e),n=t.map((e=>s.replace("{}",e))),a=this.tokenizer(n,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:i}=await this.processor(o),c=await this.model({...a,pixel_values:i}),d="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),u=[];for(const e of c.logits_per_image){const s=[...d(e)].map(((e,s)=>({score:e,label:t[s]})));s.sort(((e,t)=>t.score-e.score)),u.push(s)}return r?u:u[0]}}class j extends h{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:s=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const o=await m(e),n=s?null:o.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:i}=await this.processor(o),l=await this.model({pixel_values:a,pixel_mask:i}),c=this.processor.image_processor.post_process_object_detection(l,t,n),d=this.model.config.id2label,u=c.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:_(t,!s)})))));return r?u:u[0]}}class N extends h{constructor(e){super(e)}async _call(e,t,{threshold:s=.1,top_k:r=null,percentage:o=!1}={}){const n=Array.isArray(e),a=await m(e),i=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),c=[];for(let e=0;e<a.length;++e){const n=a[e],d=o?null:[[n.height,n.width]],u=l.pixel_values[e].unsqueeze_(0),m=await this.model({...i,pixel_values:u});let p;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(m,i.input_ids,{box_threshold:s,text_threshold:s,target_sizes:d})[0];p=e.boxes.map(((t,s)=>({score:e.scores[s],label:e.labels[s],box:_(t,!o)})))}else{const e=this.processor.image_processor.post_process_object_detection(m,s,d,!0)[0];p=e.boxes.map(((s,r)=>({score:e.scores[r],label:t[e.classes[r]],box:_(s,!o)})))}p.sort(((e,t)=>t.score-e.score)),null!==r&&(p=p.slice(0,r)),c.push(p)}return n?c:c[0]}}class B extends h{constructor(e){super(e)}async _call(e,t,s={}){const r=(await m(e))[0],{pixel_values:o}=await this.processor(r),n=`<s_docvqa><s_question>${t}</s_question><s_answer>`,a=this.tokenizer(n,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,i=await this.model.generate({inputs:o,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:a,...s}),l=this.tokenizer.batch_decode(i)[0].match(/<s_answer>(.*?)<\/s_answer>/);let c=null;return l&&l.length>=2&&(c=l[1].trim()),[{answer:c}]}}class V extends h{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:s}=await this.model(t),r=this.model.config.sampling_rate;return new c.RawAudio(s.data,r)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new d.Tensor("float32",t,[1,t.length]);else if(!(t instanceof d.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:s}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(s,t,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(r.data,n)}}class O extends h{constructor(e){super(e)}async _call(e){const t=await m(e),s=await this.processor(t),r=await this.model(s),o=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");o.push(u.RawImage.fromTensor(t))}return o.length>1?o:o[0]}}class D extends h{constructor(e){super(e)}async _call(e){const t=await m(e),s=await this.processor(t),{predicted_depth:r}=await this.model(s),o=[];for(let e=0;e<t.length;++e){const s=r[e],[n,a]=s.dims.slice(-2),[i,l]=t[e].size,c=(await(0,d.interpolate_4d)(s.view(1,1,n,a),{size:[l,i],mode:"bilinear"})).view(l,i),m=c.min().item(),p=c.max().item(),_=c.sub(m).div_(p-m).mul_(255).to("uint8").unsqueeze(0),h=u.RawImage.fromTensor(_);o.push({predicted_depth:c,depth:h})}return o.length>1?o:o[0]}}const G=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:f,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:M,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:w,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:b,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:P,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:T,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:k,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:y,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:C,model:o.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:A,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:V,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:E,model:o.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:L,model:o.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:I,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:z,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:j,model:o.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:N,model:o.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:B,model:o.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:O,model:o.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:D,model:o.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:F,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:v,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),R=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function q(e,t=null,{progress_callback:s=null,config:r=null,cache_dir:o=null,local_files_only:n=!1,revision:a="main",device:l=null,dtype:c=null,model_file_name:d=null,session_options:u={}}={}){e=R[e]??e;const m=G[e.split("_",1)[0]];if(!m)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(G)}]`);t||(t=m.default.model,console.log(`No model specified. Using default model: "${t}".`));const p={progress_callback:s,config:r,cache_dir:o,local_files_only:n,revision:a,device:l,dtype:c,model_file_name:d,session_options:u},_=new Map([["tokenizer",m.tokenizer],["model",m.model],["processor",m.processor]]),h=await async function(e,t,s){const r=Object.create(null),o=[];for(const[n,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new Promise((async(e,r)=>{let o;for(const n of a){if(null===n)return void e(null);try{return void e(await n.from_pretrained(t,s))}catch(e){if(e.message?.includes("Unsupported model type"))o=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);o=e}}}r(o)})):a.from_pretrained(t,s),r[n]=e,o.push(e)}await Promise.all(o);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(_,t,p);h.task=e,(0,i.dispatchCallback)(s,{status:"ready",task:e,model:t});return new(0,m.pipeline)(h)}},"./src/tokenizers.js":(e,t,s)=>{s.r(t),s.d(t,{AlbertTokenizer:()=>Pe,AutoTokenizer:()=>_t,BartTokenizer:()=>Ne,BertTokenizer:()=>be,BlenderbotSmallTokenizer:()=>lt,BlenderbotTokenizer:()=>it,BloomTokenizer:()=>De,CLIPTokenizer:()=>rt,CamembertTokenizer:()=>Ee,CodeGenTokenizer:()=>st,CodeLlamaTokenizer:()=>qe,CohereTokenizer:()=>mt,ConvBertTokenizer:()=>Ce,DebertaTokenizer:()=>ye,DebertaV2Tokenizer:()=>Fe,DistilBertTokenizer:()=>Ae,ElectraTokenizer:()=>Ie,EsmTokenizer:()=>Xe,FalconTokenizer:()=>Ue,GPT2Tokenizer:()=>je,GPTNeoXTokenizer:()=>Qe,GemmaTokenizer:()=>Je,Grok1Tokenizer:()=>Ye,HerbertTokenizer:()=>ve,LlamaTokenizer:()=>Re,M2M100Tokenizer:()=>et,MBart50Tokenizer:()=>Ve,MBartTokenizer:()=>Be,MPNetTokenizer:()=>$e,MarianTokenizer:()=>nt,MgpstrTokenizer:()=>pt,MobileBertTokenizer:()=>xe,NllbTokenizer:()=>Ze,NougatTokenizer:()=>dt,PreTrainedTokenizer:()=>Te,Qwen2Tokenizer:()=>He,RoFormerTokenizer:()=>Se,RobertaTokenizer:()=>Oe,SiglipTokenizer:()=>ot,SpeechT5Tokenizer:()=>ct,SqueezeBertTokenizer:()=>ke,T5Tokenizer:()=>ze,TokenizerModel:()=>x,VitsTokenizer:()=>ut,Wav2Vec2CTCTokenizer:()=>at,WhisperTokenizer:()=>tt,XLMRobertaTokenizer:()=>We,XLMTokenizer:()=>Le,is_chinese_char:()=>f});var r=s("./src/utils/generic.js"),o=s("./src/utils/core.js"),n=s("./src/utils/hub.js"),a=s("./src/utils/maths.js"),i=s("./src/utils/tensor.js"),l=s("./src/utils/data-structures.js"),c=s("./node_modules/@huggingface/jinja/dist/index.js"),d=s("./src/models/whisper/common_whisper.js");async function u(e,t){const s=await Promise.all([(0,n.getModelJSON)(e,"tokenizer.json",!0,t),(0,n.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(s[1].legacy=t.legacy),s}function m(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,s]of b)t=t.replaceAll(e,s);return new RegExp(t,"gu")}if(void 0!==e.String){const s=(0,o.escapeRegExp)(e.String);return new RegExp(t?s:`(${s})`,"gu")}return console.warn("Unknown pattern type:",e),null}function p(e){return new Map(Object.entries(e))}function _(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function h(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(e){return e.replace(/\p{M}/gu,"")}function f(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const M="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",w=new RegExp(`^[${M}]+$`,"gu"),T=".,!?…。，、।۔،",b=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${T}])]+`,` ?[^\\s${T}]+`]]);class P{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class x extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new k(e);case"Unigram":return new y(e,...t);case"BPE":return new C(e);default:if(e.vocab)return Array.isArray(e.vocab)?new y(e,...t):"object"==typeof e.vocab&&e.continuing_subword_prefix&&e.unk_token?new k(e):new S(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,s){const r=[];let o=0;for(;o<e.length;)if(r.push(e[o]),(t.get(e[o])??s)===s)for(;++o<e.length&&(t.get(e[o])??s)===s;)t.get(r.at(-1))!==s&&(r[r.length-1]+=e[o]);else++o;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class k extends x{constructor(e){super(e),this.tokens_to_ids=p(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const s of e){const e=[...s];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,o=0;const n=[];for(;o<e.length;){let t=e.length,s=null;for(;o<t;){let r=e.slice(o,t).join("");if(o>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){s=r;break}--t}if(null===s){r=!0;break}n.push(s),o=t}r?t.push(this.unk_token):t.push(...n)}return t}}class y extends x{constructor(e,t){super(e);const s=e.vocab.length;this.vocab=new Array(s),this.scores=new Array(s);for(let t=0;t<s;++t)[this.vocab[t],this.scores[t]]=e.vocab[t];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let s=0;for(;s<t.length;){let r=!1;const n=[],a=t.slice(s).join(""),i=this.trie.commonPrefixSearch(a);for(const t of i){n.push(t);const a=this.tokens_to_ids.get(t),i=this.scores[a],l=(0,o.len)(t);e.insert(s,l,i,a),r||1!==l||(r=!0)}r||e.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(e){const t=new l.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const s of e){const e=this.tokenize(s);t.push(...e)}return t}}const F=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let s=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+s),s+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),v=(0,o.reverseDictionary)(F);class C extends x{constructor(e){super(e),this.tokens_to_ids=p(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const s=Array.from(e);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let r=[];if(s.length>1){const e=new l.PriorityQueue(((e,t)=>e.score<t.score));let t={token:s[0],bias:0,prev:null,next:null},o=t;for(let t=1;t<s.length;++t){const r={bias:t/s.length,token:s[t],prev:o,next:null};o.next=r,this._add_node(e,o),o=r}for(;!e.isEmpty();){const s=e.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){const e={...s.prev};s.prev.deleted=!0,s.prev=e,e.prev?e.prev.next=e:t=e}const r={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=s;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const s=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==s&&(t.score=s+t.bias,e.push(t))}encode(e){const t=[];for(const s of e){if(this.ignore_merges&&this.tokens_to_ids.has(s)){t.push(s);continue}const e=this.bpe(s);for(const s of e)if(this.tokens_to_ids.has(s))t.push(s);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(s)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class S extends x{constructor(e,t){super(e),this.tokens_to_ids=p(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class A extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new D(e);case"Precompiled":return new me(e);case"Sequence":return new O(e);case"Replace":return new E(e);case"NFC":return new L(e);case"NFKC":return new I(e);case"NFKD":return new z(e);case"Strip":return new j(e);case"StripAccents":return new N(e);case"Lowercase":return new B(e);case"Prepend":return new V(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class E extends A{normalize(e){const t=m(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class L extends A{normalize(e){return e=e.normalize("NFC")}}class I extends A{normalize(e){return e=e.normalize("NFKC")}}class z extends A{normalize(e){return e=e.normalize("NFKD")}}class j extends A{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class N extends A{normalize(e){return e=g(e)}}class B extends A{normalize(e){return e=e.toLowerCase()}}class V extends A{normalize(e){return e=this.config.prepend+e}}class O extends A{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>A.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class D extends A{_tokenize_chinese_chars(e){const t=[];for(let s=0;s<e.length;++s){const r=e[s];f(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const s of e){const e=s.charCodeAt(0);0===e||65533===e||this._is_control(s)||(/^\s$/.test(s)?t.push(" "):t.push(s))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class G extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new R(e);case"Sequence":return new pe(e);case"Whitespace":return new _e(e);case"WhitespaceSplit":return new he(e);case"Metaspace":return new de(e);case"ByteLevel":return new q(e);case"Split":return new W(e);case"Punctuation":return new $(e);case"Digits":return new U(e);case"Replace":return new ge(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class R extends G{constructor(e){super(),this.pattern=new RegExp(`[^\\s${M}]+|[${M}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class q extends G{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=F,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class W extends G{constructor(e){super(),this.config=e,this.pattern=m(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter((e=>e)):function(e,t){const s=[];let r=0;for(const o of e.matchAll(t)){const t=o[0];r<o.index&&s.push(e.slice(r,o.index)),t.length>0&&s.push(t),r=o.index+t.length}return r<e.length&&s.push(e.slice(r)),s}(e,this.pattern)}}class $ extends G{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${M}]+|[${M}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class U extends G{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class Q extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new J(e);case"ByteLevel":return new Y(e);case"RobertaProcessing":return new H(e);case"BertProcessing":return new X(e);case"Sequence":return new K(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class X extends Q{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:s=!0}={}){s&&(e=(0,o.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const n=s&&this instanceof H?[this.sep]:[],a=s?[this.sep]:[];e=(0,o.mergeArrays)(e,n,t,a),r=(0,o.mergeArrays)(r,new Array(t.length+n.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class H extends X{}class J extends Q{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:s=!0}={}){const r=null===t?this.single:this.pair;let n=[],a=[];for(const i of r)"SpecialToken"in i?s&&(n.push(i.SpecialToken.id),a.push(i.SpecialToken.type_id)):"Sequence"in i&&("A"===i.Sequence.id?(n=(0,o.mergeArrays)(n,e),a=(0,o.mergeArrays)(a,new Array(e.length).fill(i.Sequence.type_id))):"B"===i.Sequence.id&&(n=(0,o.mergeArrays)(n,t),a=(0,o.mergeArrays)(a,new Array(t.length).fill(i.Sequence.type_id))));return{tokens:n,token_type_ids:a}}}class Y extends Q{post_process(e,t=null){return t&&(e=(0,o.mergeArrays)(e,t)),{tokens:e}}}class K extends Q{constructor(e){super(e),this.processors=e.processors.map((e=>Q.fromConfig(e)))}post_process(e,t=null,s={}){let r;for(const o of this.processors)if(o instanceof Y){if(e=o.post_process(e).tokens,t){t=o.post_process(t).tokens}}else{const n=o.post_process(e,t,s);e=n.tokens,r=n.token_type_ids}return{tokens:e,token_type_ids:r}}}class Z extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new oe(e);case"Metaspace":return new ue(e);case"ByteLevel":return new ne(e);case"Replace":return new ee(e);case"ByteFallback":return new te(e);case"Fuse":return new se(e);case"Strip":return new re(e);case"Sequence":return new ie(e);case"CTC":return new ae(e);case"BPEDecoder":return new le(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ee extends Z{decode_chain(e){const t=m(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class te extends Z{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let s=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)s.push(e);else{if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}t.push(r)}}if(s.length>0){const e=this.text_decoder.decode(Uint8Array.from(s));t.push(e),s=[]}return t}}class se extends Z{decode_chain(e){return[e.join("")]}}class re extends Z{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let s=0;s<this.start&&e[s]===this.content;++s)t=s+1;let s=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;s=r}return e.slice(t,s)}))}}class oe extends Z{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=h(e)),e)))}}class ne extends Z{constructor(e){super(e),this.byte_decoder=v,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),s=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(s)}decode_chain(e){const t=[];let s=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(s.length>0&&(t.push(this.convert_tokens_to_string(s)),s=[]),t.push(r)):s.push(r);return s.length>0&&t.push(this.convert_tokens_to_string(s)),t}}class ae extends Z{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let s=1;s<e.length;++s)e[s]!==t.at(-1)&&t.push(e[s]);let s=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(s=h(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class ie extends Z{constructor(e){super(e),this.decoders=e.decoders.map((e=>Z.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class le extends Z{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,s)=>t.replaceAll(this.suffix,s===e.length-1?"":" ")))}}class ce extends Z{decode_chain(e){let t="";for(let s=1;s<e.length;s+=2)t+=e[s];return[t]}}class de extends G{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let s=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(s=this.strRep+s),[s]}}class ue extends Z{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let s=0;s<e.length;++s){let r=e[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class me extends A{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class pe extends G{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>G.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,s)=>s.pre_tokenize(e,t)),[e])}}class _e extends G{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class he extends G{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class ge extends G{constructor(e){super(),this.config=e,this.pattern=m(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const fe=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Me(e,t,s,r){for(const n of Object.keys(e)){const a=t-e[n].length,i=s(n),l=new Array(a).fill(i);e[n]="right"===r?(0,o.mergeArrays)(e[n],l):(0,o.mergeArrays)(l,e[n])}}function we(e,t){for(const s of Object.keys(e))e[s].length=t}class Te extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=A.fromConfig(e.normalizer),this.pre_tokenizer=G.fromConfig(e.pre_tokenizer),this.model=x.fromConfig(e.model,t),this.post_processor=Q.fromConfig(e.post_processor),this.decoder=Z.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new P(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${(0,o.escapeRegExp)(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:s}of this.chat_template){if("string"!=typeof t||"string"!=typeof s)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=s}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:o=!1,revision:n="main",legacy:a=null}={}){return new this(...await u(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:o,revision:n,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:s=!0,padding:r=!1,truncation:o=null,max_length:n=null,return_tensor:l=!0,return_token_type_ids:c=null}={}){const d=Array.isArray(e);let u;if(d){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");u=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:s,return_token_type_ids:c})))}else u=e.map((e=>this._encode_plus(e,{add_special_tokens:s,return_token_type_ids:c})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:c})]}if(null===n?n="max_length"===r?this.model_max_length:(0,a.max)(u.map((e=>e.input_ids.length)))[0]:o||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),n=Math.min(n,this.model_max_length??1/0),r||o)for(let e=0;e<u.length;++e)u[e].input_ids.length!==n&&(u[e].input_ids.length>n?o&&we(u[e],n):r&&Me(u[e],n,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const m={};if(l){if((!r||!o)&&u.some((e=>{for(const t of Object.keys(e))if(e[t].length!==u[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[u.length,u[0].input_ids.length];for(const t of Object.keys(u[0]))m[t]=new i.Tensor("int64",BigInt64Array.from(u.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(u[0]))m[e]=u.map((t=>t[e]));if(!d)for(const e of Object.keys(m))m[e]=m[e][0]}return m}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return g(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const s=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(s)}})).flat();return t}_encode_plus(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:r=null}={}){const{tokens:o,token_type_ids:n}=this._tokenize_helper(e,{pair:t,add_special_tokens:s}),a=this.model.convert_tokens_to_ids(o),i={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&n&&(i.token_type_ids=n),i}_tokenize_helper(e,{pair:t=null,add_special_tokens:s=!1}={}){const r=this._encode_text(e),n=this._encode_text(t);return this.post_processor?this.post_processor(r,n,{add_special_tokens:s}):{tokens:(0,o.mergeArrays)(r??[],n??[])}}tokenize(e,{pair:t=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:s}).tokens}encode(e,{text_pair:t=null,add_special_tokens:s=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:s,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof i.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof i.Tensor&&(e=_(e)),!Array.isArray(e)||0===e.length||!(0,o.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:s=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let o=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(o=o.replaceAll(this.decoder.end_of_word_suffix," "),t&&(o=o.trim())),(s??this.clean_up_tokenization_spaces)&&(o=h(o)),o}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const s=this.chat_template;if(null!==e&&Object.hasOwn(s,e))e=s[e];else if(null===e)if(null!==t&&"tool_use"in s)e=s.tool_use;else{if(!("default"in s))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`);e=s.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:s=null,chat_template:r=null,add_generation_prompt:o=!1,tokenize:n=!0,padding:a=!1,truncation:i=!1,max_length:l=null,return_tensor:d=!0,return_dict:u=!1,tokenizer_kwargs:m={},...p}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let _=this._compiled_template_cache.get(r);void 0===_&&(_=new c.Template(r),this._compiled_template_cache.set(r,_));const h=Object.create(null);for(const e of fe){const t=this.getToken(e);t&&(h[e]=t)}const g=_.render({messages:e,add_generation_prompt:o,tools:t,documents:s,...h,...p});if(n){const e=this._call(g,{add_special_tokens:!1,padding:a,truncation:i,max_length:l,return_tensor:d,...m});return u?e:e.input_ids}return g}}class be extends Te{return_token_type_ids=!0}class Pe extends Te{return_token_type_ids=!0}class xe extends Te{return_token_type_ids=!0}class ke extends Te{return_token_type_ids=!0}class ye extends Te{return_token_type_ids=!0}class Fe extends Te{return_token_type_ids=!0}class ve extends Te{return_token_type_ids=!0}class Ce extends Te{return_token_type_ids=!0}class Se extends Te{return_token_type_ids=!0}class Ae extends Te{}class Ee extends Te{}class Le extends Te{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ie extends Te{return_token_type_ids=!0}class ze extends Te{}class je extends Te{}class Ne extends Te{}class Be extends Te{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return Ke(this,e,t,s)}}class Ve extends Be{}class Oe extends Te{}class De extends Te{}const Ge="▁";class Re extends Te{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new de({replacement:Ge,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Ge+e.replaceAll(Ge," "));return t.length>1&&t[0]===Ge&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class qe extends Te{}class We extends Te{}class $e extends Te{}class Ue extends Te{}class Qe extends Te{}class Xe extends Te{}class He extends Te{}class Je extends Te{}class Ye extends Te{}function Ke(e,t,s,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const o=r.src_lang,n=r.tgt_lang;if(!e.language_codes.includes(n))throw new Error(`Target language code "${n}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==o){if(!e.language_codes.includes(o))throw new Error(`Source language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(o);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(n)])[0],e._call(t,s)}class Ze extends Te{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,s){return Ke(this,e,t,s)}}class et extends Te{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,s){return Ke(this,e,t,s)}}class tt extends Te{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:s=!1,time_precision:r=null,force_full_sequences:o=!0}={}){if(null===r)throw Error("Must specify time_precision");let n=null;const i="word"===t;function l(){return{language:n,timestamp:[null,null],text:""}}const c=[];let u=l(),m=0;const p=this.timestamp_begin,_=p+1500;let h=[],g=[],f=!1,M=null;const T=new Set(this.all_special_ids);for(const s of e){const e=s.tokens,o=i?s.token_timestamps:null;let b=null,P=p;if("stride"in s){const[t,o,n]=s.stride;if(m-=o,M=t-n,o&&(P=o/r+p),n)for(let t=e.length-1;t>=0;--t){const s=Number(e[t]);if(s>=p){if(null!==b&&(s-p)*r<M)break;b=s}}}let x=[],k=[];for(let s=0;s<e.length;++s){const M=Number(e[s]);if(T.has(M)){const e=this.decode([M]),s=d.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==s){if(null!==n&&s!==n&&!t){h.push(x);const e=this.findLongestCommonSequence(h)[0],t=this.decode(e);u.text=t,c.push(u),h=[],x=[],u=l()}n=u.language=s}}else if(M>=p&&M<=_){const e=(M-p)*r+m,t=(0,a.round)(e,2);if(null!==b&&M>=b)f=!0;else if(f||h.length>0&&M<P)f=!1;else if(null===u.timestamp[0])u.timestamp[0]=t;else if(t===u.timestamp[0]);else{u.timestamp[1]=t,h.push(x),i&&g.push(k);const[e,s]=this.findLongestCommonSequence(h,g),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,s,n)),c.push(u),h=[],x=[],g=[],k=[],u=l()}}else if(x.push(M),i){let e,t=(0,a.round)(o[s]+m,2);if(s+1<o.length){e=(0,a.round)(o[s+1]+m,2);const n=this.decode([M]);w.test(n)&&(e=(0,a.round)(Math.min(t+r,e),2))}else e=null;k.push([t,e])}}if("stride"in s){const[e,t,r]=s.stride;m+=e-r}x.length>0?(h.push(x),i&&g.push(k)):h.every((e=>0===e.length))&&(u=l(),h=[],x=[],g=[],k=[])}if(h.length>0){if(o&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,s]=this.findLongestCommonSequence(h,g),r=this.decode(e);u.text=r,i&&(u.words=this.collateWordTimestamps(e,s,n)),c.push(u)}let b=Object.create(null);const P=c.map((e=>e.text)).join("");if(t||s){for(let e=0;e<c.length;++e){const r=c[e];t||delete r.timestamp,s||delete r.language}if(i){const e=[];for(const t of c)for(const s of t.words)e.push(s);b={chunks:e}}else b={chunks:c}}return[P,b]}findLongestCommonSequence(e,t=null){let s=e[0],r=s.length,o=[];const n=Array.isArray(t)&&t.length>0;let a=n?[]:null,i=n?t[0]:null;for(let l=1;l<e.length;++l){const c=e[l];let d=0,u=[r,r,0,0];const m=c.length;for(let e=1;e<r+m;++e){const o=Math.max(0,r-e),a=Math.min(r,r+m-e),p=s.slice(o,a),_=Math.max(0,e-r),h=Math.min(m,e),g=c.slice(_,h);if(p.length!==g.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let f;f=n?p.filter(((e,s)=>e===g[s]&&i[o+s]<=t[l][_+s])).length:p.filter(((e,t)=>e===g[t])).length;const M=f/e+e/1e4;f>1&&M>d&&(d=M,u=[o,a,_,h])}const[p,_,h,g]=u,f=Math.floor((_+p)/2),M=Math.floor((g+h)/2);o.push(...s.slice(0,f)),s=c.slice(M),r=s.length,n&&(a.push(...i.slice(0,f)),i=t[l].slice(M))}return o.push(...s),n?(a.push(...i),[o,a]):[o,[]]}collateWordTimestamps(e,t,s){const[r,o,n]=this.combineTokensIntoWords(e,s),a=[];for(let e=0;e<r.length;++e){const s=n[e];a.push({text:r[e],timestamp:[t[s.at(0)][0],t[s.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,s="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let o,n,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[o,n,a]=this.splitTokensOnUnicode(e):[o,n,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(o,n,a,s,r)}decode(e,t){let s;return t?.decode_with_timestamps?(e instanceof i.Tensor&&(e=_(e)),s=this.decodeWithTimestamps(e,t)):s=super.decode(e,t),s}decodeWithTimestamps(e,t){const s=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let o=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*s).toFixed(2);o.push(`<|${e}|>`),o.push([])}else o[o.length-1].push(t);return o=o.map((e=>"string"==typeof e?e:super.decode(e,t))),o.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),s=[],r=[],o=[];let n=[],a=[],i=0;for(let l=0;l<e.length;++l){const c=e[l];n.push(c),a.push(l);const d=this.decode(n,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[i+d.indexOf("�")]||(s.push(d),r.push(n),o.push(a),n=[],a=[],i+=d.length)}return[s,r,o]}splitTokensOnSpaces(e){const[t,s,r]=this.splitTokensOnUnicode(e),o=[],n=[],a=[],i=new RegExp(`^[${M}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],c=s[e],d=r[e],u=c[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),m=l.startsWith(" "),p=l.trim(),_=i.test(p);if(u||m||_||0===o.length)o.push(l),n.push(c),a.push(d);else{const e=o.length-1;o[e]+=l,n[e].push(...c),a[e].push(...d)}}return[o,n,a]}mergePunctuations(e,t,s,r,n){const a=structuredClone(e),i=structuredClone(t),l=structuredClone(s);let c=a.length-2,d=a.length-1;for(;c>=0;)a[c].startsWith(" ")&&r.includes(a[c].trim())?(a[d]=a[c]+a[d],i[d]=(0,o.mergeArrays)(i[c],i[d]),l[d]=(0,o.mergeArrays)(l[c],l[d]),a[c]="",i[c]=[],l[c]=[]):d=c,--c;for(c=0,d=1;d<a.length;)!a[c].endsWith(" ")&&n.includes(a[d])?(a[c]+=a[d],i[c]=(0,o.mergeArrays)(i[c],i[d]),l[c]=(0,o.mergeArrays)(l[c],l[d]),a[d]="",i[d]=[],l[d]=[]):c=d,++d;return[a.filter((e=>e)),i.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}}class st extends Te{}class rt extends Te{}class ot extends Te{}class nt extends Te{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...s]=e.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(t);if(2===s.length){const[e,t]=s;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([e],super._encode_text(t))}}}class at extends Te{}class it extends Te{}class lt extends Te{}class ct extends Te{}class dt extends Te{}class ut extends Te{constructor(e,t){super(e,t),this.decoder=new ce({})}}class mt extends Te{}class pt extends Te{}class _t{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ze,DistilBertTokenizer:Ae,CamembertTokenizer:Ee,DebertaTokenizer:ye,DebertaV2Tokenizer:Fe,BertTokenizer:be,HerbertTokenizer:ve,ConvBertTokenizer:Ce,RoFormerTokenizer:Se,XLMTokenizer:Le,ElectraTokenizer:Ie,MobileBertTokenizer:xe,SqueezeBertTokenizer:ke,AlbertTokenizer:Pe,GPT2Tokenizer:je,BartTokenizer:Ne,MBartTokenizer:Be,MBart50Tokenizer:Ve,RobertaTokenizer:Oe,WhisperTokenizer:tt,CodeGenTokenizer:st,CLIPTokenizer:rt,SiglipTokenizer:ot,MarianTokenizer:nt,BloomTokenizer:De,NllbTokenizer:Ze,M2M100Tokenizer:et,LlamaTokenizer:Re,CodeLlamaTokenizer:qe,XLMRobertaTokenizer:We,MPNetTokenizer:$e,FalconTokenizer:Ue,GPTNeoXTokenizer:Qe,EsmTokenizer:Xe,Wav2Vec2CTCTokenizer:at,BlenderbotTokenizer:it,BlenderbotSmallTokenizer:lt,SpeechT5Tokenizer:ct,NougatTokenizer:dt,VitsTokenizer:ut,Qwen2Tokenizer:He,GemmaTokenizer:Je,Grok1Tokenizer:Ye,CohereTokenizer:mt,MgpstrTokenizer:pt,PreTrainedTokenizer:Te};static async from_pretrained(e,{progress_callback:t=null,config:s=null,cache_dir:r=null,local_files_only:o=!1,revision:n="main",legacy:a=null}={}){const[i,l]=await u(e,{progress_callback:t,config:s,cache_dir:r,local_files_only:o,revision:n,legacy:a}),c=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[c];return d||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),d=Te),new d(i,l)}}},"./src/utils/audio.js":(e,t,s)=>{s.r(t),s.d(t,{RawAudio:()=>P,hamming:()=>m,hanning:()=>u,mel_filter_bank:()=>f,read_audio:()=>c,spectrogram:()=>w,window_function:()=>T});var r=s("./src/utils/hub.js"),o=s("./src/utils/maths.js"),n=s("./src/utils/core.js"),a=s("./src/env.js"),i=s("fs"),l=s("./src/utils/tensor.js");async function c(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const s=await(await(0,r.getFile)(e)).arrayBuffer(),o=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${o.sampleRate}Hz.`);const n=await o.decodeAudioData(s);let a;if(2===n.numberOfChannels){const e=Math.sqrt(2),t=n.getChannelData(0),s=n.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<n.length;++r)a[r]=e*(t[r]+s[r])/2}else a=n.getChannelData(0);return a}function d(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const s=1-t,r=2*Math.PI/(e-1),o=new Float64Array(e);for(let n=0;n<e;++n)o[n]=t-s*Math.cos(n*r);return o}function u(e){return d(e,.5)}function m(e){return d(e,.54)}const p={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,s=15,r=27/Math.log(6.4))=>e>=t?s+Math.log(e/t)*r:3*e/200};function _(e,t="htk"){const s=p[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}const h={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,s=15,r=Math.log(6.4)/27)=>e>=s?t*Math.exp(r*(e-s)):200*e/3};function g(e,t,s){const r=(t-e)/(s-1);return Float64Array.from({length:s},((t,s)=>e+r*s))}function f(e,t,s,r,o,n=null,a="htk",i=!1){if(null!==n&&"slaney"!==n)throw new Error('norm must be one of null or "slaney"');const l=g(_(s,a),_(r,a),t+2);let c,d=function(e,t="htk"){const s=h[t];if(!s)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?s(e):e.map((e=>s(e)))}(l,a);if(i){const t=o/(2*e);c=_(Float64Array.from({length:e},((e,s)=>s*t)),a),d=l}else c=g(0,Math.floor(o/2),e);const u=function(e,t){const s=Float64Array.from({length:t.length-1},((e,s)=>t[s+1]-t[s])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let s=0;s<e.length;++s){const o=r[s];for(let r=0;r<t.length;++r)o[r]=t[r]-e[s]}const o=t.length-2,n=Array.from({length:o},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<o;++r){const o=-e[r]/s[r],a=e[r+2]/s[r+1];n[r][t]=Math.max(0,Math.min(o,a))}}return n}(c,d);if(null!==n&&"slaney"===n)for(let s=0;s<t;++s){const t=u[s],r=2/(d[s+2]-d[s]);for(let s=0;s<e;++s)t[s]*=r}return u}function M(e,t,s,r,n){if(s<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");s=Math.max(r,s);const a=Math.log10(s);for(let s=0;s<e.length;++s)e[s]=t*Math.log10(Math.max(r,e[s])-a);if(null!==n){if(n<=0)throw new Error("db_range must be greater than zero");const t=(0,o.max)(e)[0]-n;for(let s=0;s<e.length;++s)e[s]=Math.max(e[s],t)}return e}async function w(e,t,s,r,{fft_length:a=null,power:i=1,center:c=!0,pad_mode:d="reflect",onesided:u=!0,preemphasis:m=null,mel_filters:p=null,mel_floor:_=1e-10,log_mel:h=null,reference:g=1,min_value:f=1e-10,db_range:w=null,remove_dc_offset:T=null,min_num_frames:b=null,max_num_frames:P=null,do_pad:x=!0,transpose:k=!1}={}){const y=t.length;if(null===a&&(a=s),s>a)throw Error(`frame_length (${s}) may not be larger than fft_length (${a})`);if(y!==s)throw new Error(`Length of the window (${y}) must equal frame_length (${s})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===i&&null!==p)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(c){if("reflect"!==d)throw new Error(`pad_mode="${d}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,s){const r=new e.constructor(e.length+t+s),o=e.length-1;for(let s=0;s<e.length;++s)r[t+s]=e[s];for(let s=1;s<=t;++s)r[t-s]=e[(0,n.calculateReflectOffset)(s,o)];for(let a=1;a<=s;++a)r[o+t+a]=e[(0,n.calculateReflectOffset)(o-a,o)];return r}(e,t,t)}let F=Math.floor(1+Math.floor((e.length-s)/r));null!==b&&F<b&&(F=b);const v=u?Math.floor(a/2)+1:a;let C=F,S=F;null!==P&&(P>F?x&&(S=P):S=C=P);const A=new o.FFT(a),E=new Float64Array(a),L=new Float64Array(A.outputBufferSize),I=new Float32Array(v*S);for(let o=0;o<C;++o){const n=o*r,a=Math.min(e.length-n,s);a!==s&&E.fill(0,0,s);for(let t=0;t<a;++t)E[t]=e[n+t];if(T){let e=0;for(let t=0;t<a;++t)e+=E[t];const t=e/a;for(let e=0;e<a;++e)E[e]-=t}if(null!==m){for(let e=a-1;e>=1;--e)E[e]-=m*E[e-1];E[0]*=1-m}for(let e=0;e<t.length;++e)E[e]*=t[e];A.realTransform(L,E);for(let e=0;e<v;++e){const t=e<<1;I[e*S+o]=L[t]**2+L[t+1]**2}}if(null!==i&&2!==i){const e=2/i;for(let t=0;t<I.length;++t)I[t]**=e}const z=p.length;let j=await(0,l.matmul)(new l.Tensor("float32",p.flat(),[z,v]),new l.Tensor("float32",I,[v,S]));k&&(j=j.transpose(1,0));const N=j.data;for(let e=0;e<N.length;++e)N[e]=Math.max(_,N[e]);if(null!==i&&null!==h){const e=Math.min(N.length,C*z);switch(h){case"log":for(let t=0;t<e;++t)N[t]=Math.log(N[t]);break;case"log10":for(let t=0;t<e;++t)N[t]=Math.log10(N[t]);break;case"dB":if(1===i)!function(e,t=1,s=1e-5,r=null){M(e,20,t,s,r)}(N,g,f,w);else{if(2!==i)throw new Error(`Cannot use log_mel option '${h}' with power ${i}`);!function(e,t=1,s=1e-10,r=null){M(e,10,t,s,r)}(N,g,f,w)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${h}'`)}}return j}function T(e,t,{periodic:s=!0,frame_length:r=null,center:o=!0}={}){const n=s?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(n).fill(1);break;case"hann":case"hann_window":a=u(n);break;case"hamming":a=m(n);break;case"povey":a=u(n).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(s&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function b(e,t,s){for(let r=0;r<s.length;++r)e.setUint8(t+r,s.charCodeAt(r))}class P{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let s=44;const r=new ArrayBuffer(s+4*e.length),o=new DataView(r);b(o,0,"RIFF"),o.setUint32(4,36+4*e.length,!0),b(o,8,"WAVE"),b(o,12,"fmt "),o.setUint32(16,16,!0),o.setUint16(20,3,!0),o.setUint16(22,1,!0),o.setUint32(24,t,!0),o.setUint32(28,4*t,!0),o.setUint16(32,4,!0),o.setUint16(34,32,!0),b(o,36,"data"),o.setUint32(40,4*e.length,!0);for(let t=0;t<e.length;++t,s+=4)o.setFloat32(s,e[t],!0);return r}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=n.saveBlob}else{if(!a.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let s=await t.arrayBuffer();i.default.writeFileSync(e,Buffer.from(s))}}await t(e,this.toBlob())}}},"./src/utils/constants.js":(e,t,s)=>{s.r(t),s.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>o,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>i});const r="https://github.com/huggingface/transformers.js/issues/new/choose",o="config.json",n="preprocessor_config.json",a=n,i="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,t,s)=>{function r(e,t){e&&e(t)}function o(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function n(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function i(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function c(e){const t=[];let s=e;for(;Array.isArray(s);)t.push(s.length),s=s[0];return t}function d(e,t,s=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===s)throw Error(`Key ${t} does not exist in object.`);return s}function u(...e){return Array.prototype.concat.apply([],e)}function m(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function p(e,t){return Math.abs((e+t)%(2*t)-t)}function _(e,t){const s=URL.createObjectURL(t),r=document.createElement("a");r.href=s,r.download=e,r.click(),r.remove(),URL.revokeObjectURL(s)}function h(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function g(e){let t=0;for(const s of e)++t;return t}function f(e,t){let s=0;for(const r of e)r===t&&++s;return s}s.r(t),s.d(t,{calculateDimensions:()=>c,calculateReflectOffset:()=>p,count:()=>f,dispatchCallback:()=>r,escapeRegExp:()=>n,isIntegralNumber:()=>i,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>g,mergeArrays:()=>u,pick:()=>h,pop:()=>d,product:()=>m,reverseDictionary:()=>o,saveBlob:()=>_})},"./src/utils/data-structures.js":(e,t,s)=>{s.r(t),s.d(t,{CharTrie:()=>o,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const s=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=n.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const s of e){let e=t.children.get(s);void 0===e&&(e=n.default(),t.children.set(s,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let s="";for(const r of e){if(s+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield s)}}}class n{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new n(!1,new Map)}}class a{constructor(e,t,s){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new i(this.bosTokenId,0,0,0,0),o=new i(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(o.clone()),this.beginNodes[this.len].push(o),this.endNodes[0].push(r)}insert(e,t,s,r){const o=this.nodes.length,n=new i(r,o,e,t,s);this.beginNodes[e].push(n),this.endNodes[e+t].push(n),this.nodes.push(n)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let s=0,r=null;for(let o of this.endNodes[t]){const t=o.backtraceScore+e.score;(null===r||t>s)&&(r=o.clone(),s=t)}if(null===r)return[];e.prev=r,e.backtraceScore=s}++t}const s=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let o=r.clone();for(;null!==o.prev;){s.push(o.clone());const e=o.clone();o=e.prev.clone()}return s.reverse(),s}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class i{constructor(e,t,s,r,o){this.tokenId=e,this.nodeId=t,this.pos=s,this.length=r,this.score=o,this.prev=null,this.backtraceScore=0}clone(){const e=new i(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}},"./src/utils/devices.js":(e,t,s)=>{s.r(t),s.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,t,s)=>{s.r(t),s.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>i,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var r=s("./src/env.js"),o=s("./src/utils/devices.js");const n=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),i=Object.freeze({[o.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,t,s)=>{s.r(t),s.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,t,s)=>{s.r(t),s.d(t,{getFile:()=>d,getModelFile:()=>p,getModelJSON:()=>_});var r=s("fs"),o=s("path"),n=s("./src/env.js"),a=s("./src/utils/core.js");const i={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class l{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.default.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.default.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let s=this;this.body=new ReadableStream({start(e){s.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",i[e]??"application/octet-stream")}clone(){let e=new l(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.default.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.default.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.default.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function c(e,t=null,s=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol))&&!(s&&!s.includes(r.hostname))}async function d(e){if(n.env.useFS&&!c(e,["http:","https:","blob:"]))return new l(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,s=n.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${s}; is_ci/${t};`);if(c(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const u={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class m{constructor(e){this.path=e}async match(e){let t=o.default.join(this.path,e),s=new l(t);return s.exists?s:void 0}async put(e,t){const s=Buffer.from(await t.arrayBuffer());let n=o.default.join(this.path,e);try{await r.default.promises.mkdir(o.default.dirname(n),{recursive:!0}),await r.default.promises.writeFile(n,s)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function p(e,t,s=!0,r={}){if(!n.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let o;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!o&&n.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{o=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!o&&n.env.useFSCache&&(o=new m(r.cache_dir??n.env.cacheDir)),!o&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");o=n.env.customCache}const i=r.revision??"main";let l,p,_=h(e,t),g=h(n.env.localModelPath,_),f=h(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(i)),t),M="main"===i?_:h(e,i,t),w=o instanceof m?M:f,T=!1;o&&(p=await async function(e,...t){for(let s of t)try{let t=await e.match(s);if(t)return t}catch(e){continue}}(o,g,w));const b=void 0!==p;if(void 0===p){if(n.env.allowLocalModels){if(c(_,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${_}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${_}.`)}else try{p=await d(g),l=g}catch(e){console.warn(`Unable to load from local path "${g}": "${e}"`)}}if(void 0===p||404===p.status){if(r.local_files_only||!n.env.allowRemoteModels){if(s)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${g}".`);return null}if(p=await d(f),200!==p.status)return function(e,t,s){if(!s)return null;const r=u[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(p.status,f,s);l=w}T=o&&"undefined"!=typeof Response&&p instanceof Response&&200===p.status}let P;return(0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t}),r.progress_callback?b&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(P=new Uint8Array(await p.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:P.length,total:P.length})):P=await async function(e,t){const s=e.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(s??"0"),o=new Uint8Array(r),n=0;const a=e.body.getReader();async function i(){const{done:e,value:s}=await a.read();if(e)return;let l=n+s.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(o),o=e}o.set(s,n),n=l;return t({progress:n/r*100,loaded:n,total:r}),i()}return await i(),o}(p,(s=>{(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...s})})):P=new Uint8Array(await p.arrayBuffer()),T&&l&&void 0===await o.match(l)&&await o.put(l,new Response(P,{headers:p.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),(0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),P}async function _(e,t,s=!0,r={}){let o=await p(e,t,s,r);if(null===o)return{};let n=new TextDecoder("utf-8").decode(o);return JSON.parse(n)}function h(...e){return(e=e.map(((t,s)=>(s&&(t=t.replace(new RegExp("^/"),"")),s!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":(e,t,s)=>{s.r(t),s.d(t,{RawImage:()=>_,load_image:()=>h});var r=s("./src/utils/core.js"),o=s("./src/utils/hub.js"),n=s("./src/env.js"),a=s("./src/utils/tensor.js"),i=s("sharp");let l,c,d;const u=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(u)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},d=self.createImageBitmap,c=self.ImageData;else{if(!i.default)throw new Error("Unable to load image processing library.");d=async e=>{const t=(await e.metadata()).channels,{data:s,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),o=new _(new Uint8ClampedArray(s),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&o.convert(t),o}}const m={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},p=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class _{constructor(e,t,s,r){this.data=e,this.width=t,this.height=s,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof _)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new _(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,o.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const s=await t.blob();return this.fromBlob(s)}static async fromBlob(e){if(u){const t=await d(e),s=l(t.width,t.height).getContext("2d");return s.drawImage(t,0,0),new this(s.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=(0,i.default)(await e.arrayBuffer());return await d(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new _(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,s=0;t<this.data.length;t+=this.channels){const r=this.data[t],o=this.data[t+1],n=this.data[t+2];e[s++]=Math.round(.2989*r+.587*o+.114*n)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t];break;case 4:for(let t=0,s=0;t<this.data.length;t+=4)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,s=0;t<this.data.length;++t)e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=this.data[t],e[s++]=255;break;case 3:for(let t=0,s=0;t<this.data.length;t+=3)e[s++]=this.data[t],e[s++]=this.data[t+1],e[s++]=this.data[t+2],e[s++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,s=e.data,r=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*r);for(let o=0,n=0,a=0;o<r;++o)e[a++]=t[n++],e[a++]=t[n++],e[a++]=t[n++],e[a++]=s[o];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<r;++e)t[4*e+3]=s[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:s=2}={}){if(this.width===e&&this.height===t)return this;let o=m[s]??s;const n=(0,r.isNullishDimension)(e),a=(0,r.isNullishDimension)(t);if(n&&a)return this;if(n?e=t/this.height*this.width:a&&(t=e/this.width*this.height),u){const s=this.channels,r=this.toCanvas(),o=l(e,t).getContext("2d");o.drawImage(r,0,0,e,t);return new _(o.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();switch(o){case"box":case"hamming":"box"!==o&&"hamming"!==o||(console.warn(`Resampling method ${o} is not yet supported. Using bilinear instead.`),o="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([e/this.width,0,0,t/this.height],{interpolator:o});break;case"lanczos":s=s.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${o} is not supported.`)}return await d(s)}}async pad([e,t,s,r]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.max(s,0),r=Math.max(r,0),0===e&&0===t&&0===s&&0===r)return this;if(u){const o=this.channels,n=this.toCanvas(),a=this.width+e+t,i=this.height+s+r,c=l(a,i).getContext("2d");c.drawImage(n,0,0,this.width,this.height,e,s,this.width,this.height);return new _(c.getImageData(0,0,a,i).data,a,i,4).convert(o)}{const o=this.toSharp().extend({left:e,right:t,top:s,bottom:r});return await d(o)}}async crop([e,t,s,r]){if(e=Math.max(e,0),t=Math.max(t,0),s=Math.min(s,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&s===this.width-1&&r===this.height-1)return this;const o=s-e+1,n=r-t+1;if(u){const s=this.channels,r=this.toCanvas(),a=l(o,n).getContext("2d");a.drawImage(r,e,t,o,n,0,0,o,n);return new _(a.getImageData(0,0,o,n).data,o,n,4).convert(s)}{const s=this.toSharp().extract({left:e,top:t,width:o,height:n});return await d(s)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const s=(this.width-e)/2,r=(this.height-t)/2;if(u){const o=this.channels,n=this.toCanvas(),a=l(e,t).getContext("2d");let i=0,c=0,d=0,u=0;s>=0?i=s:d=-s,r>=0?c=r:u=-r,a.drawImage(n,i,c,e,t,d,u,e,t);return new _(a.getImageData(0,0,e,t).data,e,t,4).convert(o)}{let o=this.toSharp();if(s>=0&&r>=0)o=o.extract({left:Math.floor(s),top:Math.floor(r),width:e,height:t});else if(s<=0&&r<=0){const n=Math.floor(-r),a=Math.floor(-s);o=o.extend({top:n,left:a,right:e-this.width-a,bottom:t-this.height-n})}else{let n=[0,0],a=0;r<0?(n[0]=Math.floor(-r),n[1]=t-this.height-n[0]):a=Math.floor(r);let i=[0,0],l=0;s<0?(i[0]=Math.floor(-s),i[1]=e-this.width-i[0]):l=Math.floor(s),o=o.extend({top:n[0],bottom:n[1],left:i[0],right:i[1]}).extract({left:l,top:a,width:e,height:t})}return await d(o)}}async toBlob(e="image/png",t=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");const s=this.toCanvas();return await s.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),s=new c(e.data,e.width,e.height);return t.getContext("2d").putImageData(s,0,0),t}split(){const{data:e,width:t,height:s,channels:r}=this,o=e.constructor,n=e.length/r,a=Array.from({length:r},(()=>new o(n)));for(let t=0;t<n;++t){const s=r*t;for(let o=0;o<r;++o)a[o][t]=e[s+o]}return a.map((e=>new _(e,t,s,1)))}_update(e,t,s,r=null){return this.data=e,this.width=t,this.height=s,null!==r&&(this.channels=r),this}clone(){return new _(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!u){if(n.apis.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),s=p.get(t)??"image/png",o=await this.toBlob(s);(0,r.saveBlob)(e,o)}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return(0,i.default)(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const h=_.read.bind(_)},"./src/utils/maths.js":(e,t,s)=>{function r(e,[t,s,r],[o,n],a="bilinear",i=!1){const l=n/r,c=o/s,d=new e.constructor(o*n*t),u=s*r,m=o*n;for(let a=0;a<o;++a)for(let o=0;o<n;++o){const i=a*n+o,p=(o+.5)/l-.5,_=(a+.5)/c-.5;let h=Math.floor(p),g=Math.floor(_);const f=Math.min(h+1,r-1),M=Math.min(g+1,s-1);h=Math.max(h,0),g=Math.max(g,0);const w=p-h,T=_-g,b=(1-w)*(1-T),P=w*(1-T),x=(1-w)*T,k=w*T,y=g*r,F=M*r,v=y+h,C=y+f,S=F+h,A=F+f;for(let s=0;s<t;++s){const t=s*u;d[s*m+i]=b*e[t+v]+P*e[t+C]+x*e[t+S]+k*e[t+A]}}return d}function o(e,t,s){const r=new Array(s.length),o=new Array(s.length);for(let e=s.length-1,n=1;e>=0;--e)o[e]=n,r[e]=t[s[e]],n*=r[e];const n=s.map(((e,t)=>o[s.indexOf(t)])),a=new e.constructor(e.length);for(let s=0;s<e.length;++s){let r=0;for(let e=t.length-1,o=s;e>=0;--e)r+=o%t[e]*n[e],o=Math.floor(o/t[e]);a[r]=e[s]}return[a,r]}function n(e){const t=u(e)[0],s=e.map((e=>Math.exp(e-t))),r=s.reduce(((e,t)=>e+t),0);return s.map((e=>e/r))}function a(e){const t=u(e)[0];let s=0;for(let r=0;r<e.length;++r)s+=Math.exp(e[r]-t);const r=Math.log(s);return e.map((e=>e-t-r))}function i(e,t){let s=0;for(let r=0;r<e.length;++r)s+=e[r]*t[r];return s}function l(e,t){return i(e,t)/(c(e)*c(t))}function c(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],s=r);return[t,s]}function u(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],s=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],s=r);return[t,s]}function m(e){return e>0&&!(e&e-1)}s.r(t),s.d(t,{FFT:()=>h,bankers_round:()=>M,cos_sim:()=>l,dot:()=>i,dynamic_time_warping:()=>w,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>c,max:()=>u,medianFilter:()=>g,min:()=>d,permute_data:()=>o,round:()=>f,softmax:()=>n});class p{constructor(e){if(this.size=0|e,this.size<=1||!m(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const s=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const s=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)s[t>>>1]=e[t];return s}toComplexArray(e,t){const s=t||this.createComplexArray();for(let t=0;t<s.length;t+=2)s[t]=e[t>>>1],s[t+1]=0;return s}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,s){const r=this._csize;let o,n,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,n=0;o<r;o+=i,++n){const s=l[n];this._singleTransform2(t,e,o,s,a)}else for(o=0,n=0;o<r;o+=i,++n){const r=l[n];this._singleTransform4(t,e,o,r,a,s)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>2;for(o=0;o<r;o+=i){const r=o+t-1;for(let n=o,i=0;n<r;n+=2,i+=a){const r=n,o=r+t,a=o+t,l=a+t,d=e[r],u=e[r+1],m=e[o],p=e[o+1],_=e[a],h=e[a+1],g=e[l],f=e[l+1],M=c[i],w=s*c[i+1],T=m*M-p*w,b=m*w+p*M,P=c[2*i],x=s*c[2*i+1],k=_*P-h*x,y=_*x+h*P,F=c[3*i],v=s*c[3*i+1],C=g*F-f*v,S=g*v+f*F,A=d+k,E=u+y,L=d-k,I=u-y,z=T+C,j=b+S,N=s*(T-C),B=s*(b-S);e[r]=A+z,e[r+1]=E+j,e[o]=L+B,e[o+1]=I-N,e[a]=A-z,e[a+1]=E-j,e[l]=L-B,e[l+1]=I+N}}}}_singleTransform2(e,t,s,r,o){const n=e[r],a=e[r+1],i=e[r+o],l=e[r+o+1];t[s]=n+i,t[s+1]=a+l,t[s+2]=n-i,t[s+3]=a-l}_singleTransform4(e,t,s,r,o,n){const a=2*o,i=3*o,l=e[r],c=e[r+1],d=e[r+o],u=e[r+o+1],m=e[r+a],p=e[r+a+1],_=e[r+i],h=e[r+i+1],g=l+m,f=c+p,M=l-m,w=c-p,T=d+_,b=u+h,P=n*(d-_),x=n*(u-h);t[s]=g+T,t[s+1]=f+b,t[s+2]=M+x,t[s+3]=w-P,t[s+4]=g-T,t[s+5]=f-b,t[s+6]=M-x,t[s+7]=w+P}_realTransform4(e,t,s){const r=this._csize;let o,n,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(o=0,n=0;o<r;o+=i,++n){const s=l[n];this._singleRealTransform2(t,e,o,s>>>1,a>>>1)}else for(o=0,n=0;o<r;o+=i,++n){const r=l[n];this._singleRealTransform4(t,e,o,r>>>1,a>>>1,s)}const c=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>1,n=t>>>1,l=n>>>1;for(o=0;o<r;o+=i)for(let r=0,i=0;r<=l;r+=2,i+=a){const a=o+r,d=a+n,u=d+n,m=u+n,p=e[a],_=e[a+1],h=e[d],g=e[d+1],f=e[u],M=e[u+1],w=e[m],T=e[m+1],b=p,P=_,x=c[i],k=s*c[i+1],y=h*x-g*k,F=h*k+g*x,v=c[2*i],C=s*c[2*i+1],S=f*v-M*C,A=f*C+M*v,E=c[3*i],L=s*c[3*i+1],I=w*E-T*L,z=w*L+T*E,j=b+S,N=P+A,B=b-S,V=P-A,O=y+I,D=F+z,G=s*(y-I),R=s*(F-z);if(e[a]=j+O,e[a+1]=N+D,e[d]=B+R,e[d+1]=V-G,0===r){e[u]=j-O,e[u+1]=N-D;continue}if(r===l)continue;const q=o+n-r,W=o+t-r;e[q]=B-s*R,e[q+1]=-V-s*G,e[W]=j-s*O,e[W+1]=s*D-N}}const d=r>>>1;for(let t=2;t<d;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,s,r,o){const n=e[r],a=e[r+o];t[s]=n+a,t[s+1]=0,t[s+2]=n-a,t[s+3]=0}_singleRealTransform4(e,t,s,r,o,n){const a=2*o,i=3*o,l=e[r],c=e[r+o],d=e[r+a],u=e[r+i],m=l+d,p=l-d,_=c+u,h=n*(c-u);t[s]=m+_,t[s+1]=0,t[s+2]=p,t[s+3]=-h,t[s+4]=m-_,t[s+5]=0,t[s+6]=p,t[s+7]=h}}class _{constructor(e){const t=2*(e-1),s=2*(2*e-1),r=2**Math.ceil(Math.log2(s));this.bufferSize=r,this._a=t;const o=new Float64Array(s),n=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,i=Math.cos(a),l=Math.sin(a);for(let t=0;t<s>>1;++t){const s=(t+1-e)**2/2,r=Math.sqrt(i**2+l**2)**s,a=s*Math.atan2(l,i),c=2*t;o[c]=r*Math.cos(a),o[c+1]=r*Math.sin(a),n[c]=o[c],n[c+1]=-o[c+1]}this._slicedChirpBuffer=o.subarray(t,s),this._f=new p(r>>1),this._f.transform(this._chirpBuffer,n)}_transform(e,t,s){const r=this._buffer1,o=this._buffer2,n=this._outBuffer1,a=this._outBuffer2,i=this._chirpBuffer,l=this._slicedChirpBuffer,c=this._a;if(s)for(let e=0;e<l.length;e+=2){const s=e+1,o=t[e>>1];r[e]=o*l[e],r[s]=o*l[s]}else for(let e=0;e<l.length;e+=2){const s=e+1;r[e]=t[e]*l[e]-t[s]*l[s],r[s]=t[e]*l[s]+t[s]*l[e]}this._f.transform(n,r);for(let e=0;e<i.length;e+=2){const t=e+1;o[e]=n[e]*i[e]-n[t]*i[t],o[t]=n[e]*i[t]+n[t]*i[e]}this._f.inverseTransform(a,o);for(let t=0;t<a.length;t+=2){const s=a[t+c],r=a[t+c+1],o=l[t],n=l[t+1];e[t]=s*o-r*n,e[t+1]=s*n+r*o}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class h{constructor(e){this.fft_length=e,this.isPowerOfTwo=m(e),this.isPowerOfTwo?(this.fft=new p(e),this.outputBufferSize=2*e):(this.fft=new _(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function g(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const s=new e.constructor(e.length),r=new e.constructor(t),o=Math.floor(t/2);for(let t=0;t<e.length;++t){let n=0;for(let s=-o;s<=o;++s){let o=t+s;o<0?o=Math.abs(o):o>=e.length&&(o=2*(e.length-1)-o),r[n++]=e[o]}r.sort(),s[t]=r[o]}return s}function f(e,t){const s=Math.pow(10,t);return Math.round(e*s)/s}function M(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function w(e){const t=e.length,s=e[0].length,r=[t+1,s+1],o=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));o[0][0]=0;const n=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let s=1;s<r[0];++s){const r=o[s-1][t-1],a=o[s-1][t],i=o[s][t-1];let l,c;r<a&&r<i?(l=r,c=0):a<r&&a<i?(l=a,c=1):(l=i,c=2),o[s][t]=e[s-1][t-1]+l,n[s][t]=c}for(let e=0;e<r[1];++e)n[0][e]=2;for(let e=0;e<r[0];++e)n[e][0]=1;let a=t,i=s,l=[],c=[];for(;a>0||i>0;)switch(l.push(a-1),c.push(i-1),n[a][i]){case 0:--a,--i;break;case 1:--a;break;case 2:--i;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${i}]. Please file a bug report.`)}return l.reverse(),c.reverse(),[l,c]}},"./src/utils/tensor.js":(e,t,s)=>{s.r(t),s.d(t,{Tensor:()=>i,cat:()=>b,full:()=>v,full_like:()=>C,interpolate:()=>c,interpolate_4d:()=>d,layer_norm:()=>f,matmul:()=>u,mean:()=>y,mean_pooling:()=>g,ones:()=>S,ones_like:()=>A,permute:()=>l,quantize_embeddings:()=>z,rand:()=>I,rfft:()=>m,slice:()=>h,stack:()=>P,std_mean:()=>k,topk:()=>p,zeros:()=>E,zeros_like:()=>L});var r=s("./src/utils/maths.js"),o=s("./src/backends/onnx.js"),n=s("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class i{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,o.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new o.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let s=Number(t);if(Number.isInteger(s))return e._getitem(s)}return e[t]},set:(e,t,s)=>e[t]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const s=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,s,t)}else yield*this.data}_getitem(e){const[t,...s]=this.dims;if(e=T(e,t),s.length>0){const t=s.reduce(((e,t)=>e*t));return this._subarray(e,t,s)}return new i(this.type,[this.data[e]],s)}indexOf(e){const t=this.data;for(let s=0;s<t.length;++s)if(t[s]==e)return s;return-1}_subarray(e,t,s){const r=e*t,o=(e+1)*t,n="subarray"in this.data?this.data.subarray(r,o):this.data.slice(r,o);return new i(this.type,n,s)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const s=e.length,r=t.reduce(((e,t)=>e*t));if(s!==r)throw Error(`cannot reshape array of size ${s} into shape (${t})`);let o=e;for(let e=t.length-1;e>=0;e--)o=o.reduce(((s,r)=>{let o=s[s.length-1];return o.length<t[e]?o.push(r):s.push([r]),s}),[[]]);return o[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]=e(t[s],s,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let s=0;s<t.length;++s)t[s]-=e;return this}clone(){return new i(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],s=[];for(let r=0;r<this.dims.length;++r){let o=e[r];if(null==o)s.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof o)o=T(o,this.dims[r],r),s.push([o,o+1]);else{if(!Array.isArray(o)||2!==o.length)throw new Error(`Invalid slice: ${o}`);{let[e,n]=o;if(e=null===e?0:T(e,this.dims[r],r,!1),n=null===n?this.dims[r]:T(n,this.dims[r],r,!1),e>n)throw new Error(`Invalid slice: ${o}`);const a=[Math.max(e,0),Math.min(n,this.dims[r])];s.push(a),t.push(a[1]-a[0])}}}const r=s.map((([e,t])=>t-e)),o=r.reduce(((e,t)=>e*t)),n=this.data,a=new n.constructor(o),l=this.stride();for(let e=0;e<o;++e){let t=0;for(let o=r.length-1,n=e;o>=0;--o){const e=r[o];t+=(n%e+s[o][0])*l[o],n=Math.floor(n/e)}a[e]=n[t]}return new i(this.type,a,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,s=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data,o=(t,s)=>t+s**e;if(null===t){const t=r.reduce(o,0)**(1/e);return new i(this.type,[t],[])}const[n,a,l]=x(o,this,t,s);if(1!==e)for(let t=0;t<a.length;++t)a[t]=a[t]**(1/e);return new i(n,a,l)}normalize_(e=2,t=1){t=T(t,this.dims.length);const s=this.norm(e,t,!0),r=this.data,o=s.data;for(let e=0;e<r.length;++e){let s=0;for(let r=this.dims.length-1,o=e,n=1;r>=0;--r){const e=this.dims[r];if(r!==t){s+=o%e*n,n*=this.dims[r]}o=Math.floor(o/e)}r[e]/=o[s]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let s=e.length-1,r=1;s>=0;--s)t[s]=r,r*=e[s];return t}(this.dims)}squeeze(e=null){return new i(this.type,this.data,M(this.dims,e))}squeeze_(e=null){return this.dims=M(this.dims,e),this}unsqueeze(e=null){return new i(this.type,this.data,w(this.dims,e))}unsqueeze_(e=null){return this.dims=w(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let s=this.dims.slice(0,e),r=this.dims.slice(e,t+1),o=this.dims.slice(t+1);return this.dims=[...s,r.reduce(((e,t)=>e*t),1),...o],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let s=0;s<e.length;++s)if(-1===e[s]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=s}const s=this.data;if(-1!==t){const r=e.reduce(((e,s,r)=>r!==t?e*s:e),1);e[t]=s.length/r}return new i(this.type,s,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let r=0;r<s.length;++r)t[r]=s[r]>e?1:0;return new i("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),s=this.data;for(let r=0;r<s.length;++r)t[r]=s[r]<e?1:0;return new i("bool",t,this.dims)}clamp_(e,t){const s=this.data;for(let r=0;r<s.length;++r)s[r]=Math.min(Math.max(s[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return y(this,e,t)}min(e=null,t=!1){if(null===e){const e=(0,r.min)(this.data)[0];return new i(this.type,[e],[])}const[s,o,n]=x(((e,t)=>Math.min(e,t)),this,e,t,1/0);return new i(s,o,n)}max(e=null,t=!1){if(null===e){const e=(0,r.max)(this.data)[0];return new i(this.type,[e],[])}const[s,o,n]=x(((e,t)=>Math.max(e,t)),this,e,t,-1/0);return new i(s,o,n)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=(0,r.min)(this.data)[1];return new i("int64",[BigInt(s)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const s=(0,r.max)(this.data)[1];return new i("int64",[BigInt(s)],[])}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const s=["int64","uint64"].includes(this.type),r=["int64","uint64"].includes(e);return s&&!r?t=Number:!s&&r&&(t=BigInt),new i(e,a[e].from(this.data,t),this.dims)}}function l(e,t){const[s,o]=(0,r.permute_data)(e.data,e.dims,t);return new i(e.type,s,o)}function c(e,[t,s],o="bilinear",n=!1){const a=e.dims.at(-3)??1,l=e.dims.at(-2),c=e.dims.at(-1);let d=(0,r.interpolate_data)(e.data,[a,l,c],[t,s],o,n);return new i(e.type,d,[a,t,s])}async function d(e,{size:t=null,mode:s="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,o;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("nearest"===s)o=await n.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===s)o=await n.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==s)throw new Error(`Unsupported mode: ${s}`);o=await n.TensorOpRegistry.bicubic_interpolate_4d}const a=new i("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await o({x:e,s:a})}async function u(e,t){const s=await n.TensorOpRegistry.matmul;return await s({a:e,b:t})}async function m(e,t){const s=await n.TensorOpRegistry.rfft;return await s({x:e,a:t})}async function p(e,t){const s=await n.TensorOpRegistry.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await s({x:e,k:new i("int64",[BigInt(t)],[1])})}const _=e=>new i("int64",e,[e.length]);async function h(e,t,s,r,o){const a=await n.TensorOpRegistry.slice;return await a({x:e,s:_(t),e:_(s),a:_(r),t:_(o??new Array(r.length).fill(1))})}function g(e,t){const s=e.data,r=t.data,o=[e.dims[0],e.dims[2]],n=new s.constructor(o[0]*o[1]),[a,l,c]=e.dims;let d=0;for(let e=0;e<a;++e){const t=e*c*l;for(let o=0;o<c;++o){let a=0,i=0;const u=e*l,m=t+o;for(let e=0;e<l;++e){const t=Number(r[u+e]);i+=t,a+=s[m+e*c]*t}const p=a/i;n[d++]=p}}return new i(e.type,n,o)}function f(e,t,{eps:s=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,o]=e.dims;if(1!==t.length&&t[0]!==o)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[n,a]=k(e,1,0,!0),l=n.data,c=a.data,d=e.data,u=new d.constructor(d.length);for(let e=0;e<r;++e){const t=e*o;for(let r=0;r<o;++r){const o=t+r;u[o]=(d[o]-c[e])/(l[e]+s)}}return new i(e.type,u,e.dims)}function M(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,s)=>1!==e||!t.includes(s)))),e}function w(e,t){return t=T(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function T(e,t,s=null,r=!0){if(r&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===s?"":" "+s} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function b(e,t=0){t=T(t,e[0].dims.length);const s=e[0].dims.slice();s[t]=e.reduce(((e,s)=>e+s.dims[t]),0);const r=s.reduce(((e,t)=>e*t),1),o=new e[0].data.constructor(r),n=e[0].type;if(0===t){let t=0;for(const s of e){const e=s.data;o.set(e,t),t+=e.length}}else{let r=0;for(let n=0;n<e.length;++n){const{data:a,dims:i}=e[n];for(let e=0;e<a.length;++e){let n=0;for(let o=i.length-1,a=e,l=1;o>=0;--o){const e=i[o];let c=a%e;o===t&&(c+=r),n+=c*l,l*=s[o],a=Math.floor(a/e)}o[n]=a[e]}r+=i[t]}}return new i(n,o,s)}function P(e,t=0){return b(e.map((e=>e.unsqueeze(t))),t)}function x(e,t,s=null,r=!1,o=null){const n=t.data,a=t.dims;s=T(s,a.length);const i=a.slice();i[s]=1;const l=new n.constructor(n.length/a[s]);null!==o&&l.fill(o);for(let t=0;t<n.length;++t){let r=0;for(let e=a.length-1,o=t,n=1;e>=0;--e){const t=a[e];if(e!==s){r+=o%t*n,n*=i[e]}o=Math.floor(o/t)}l[r]=e(l[r],n[t],t,r)}return r||i.splice(s,1),[t.type,l,i]}function k(e,t=null,s=1,r=!1){const o=e.data,n=e.dims;if(null===t){const t=o.reduce(((e,t)=>e+t),0)/o.length,r=Math.sqrt(o.reduce(((e,s)=>e+(s-t)**2),0)/(o.length-s)),n=new i(e.type,[t],[]);return[new i(e.type,[r],[]),n]}const a=y(e,t=T(t,n.length),r),l=a.data,[c,d,u]=x(((e,t,s,r)=>e+(t-l[r])**2),e,t,r);for(let e=0;e<d.length;++e)d[e]=Math.sqrt(d[e]/(n[t]-s));return[new i(c,d,u),a]}function y(e,t=null,s=!1){const r=e.dims,o=e.data;if(null===t){const t=o.reduce(((e,t)=>e+t),0);return new i(e.type,[t/o.length],[])}t=T(t,r.length);const[n,a,l]=x(((e,t)=>e+t),e,t,s);if(1!==r[t])for(let e=0;e<a.length;++e)a[e]/=r[t];return new i(n,a,l)}function F(e,t,s,r){const o=e.reduce(((e,t)=>e*t),1);return new i(s,new r(o).fill(t),e)}function v(e,t){let s,r;if("number"==typeof t)s="float32",r=Float32Array;else if("bigint"==typeof t)s="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);s="bool",r=Uint8Array}return F(e,t,s,r)}function C(e,t){return v(e.dims,t)}function S(e){return F(e,1n,"int64",BigInt64Array)}function A(e){return S(e.dims)}function E(e){return F(e,0n,"int64",BigInt64Array)}function L(e){return E(e.dims)}function I(e){const t=e.reduce(((e,t)=>e*t),1);return new i("float32",Float32Array.from({length:t},(()=>Math.random())),e)}function z(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const s="binary"===t,r=s?"int8":"uint8",o=s?Int8Array:Uint8Array,n=e.data,a=new o(n.length/8);for(let e=0;e<n.length;++e){const t=n[e]>0?1:0,r=Math.floor(e/8),o=e%8;a[r]|=t<<7-o,s&&0===o&&(a[r]-=128)}return new i(r,a,[e.dims[0],e.dims[1]/8])}}},l={};function c(e){var t=l[e];if(void 0!==t)return t.exports;var s=l[e]={exports:{}};return i[e](s,s.exports,c),s.exports}a=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,c.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var s=Object.create(null);c.r(s);var r={};n=n||[null,a({}),a([]),a(a)];for(var o=2&t&&e;"object"==typeof o&&!~n.indexOf(o);o=a(o))Object.getOwnPropertyNames(o).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,c.d(s,r),s},c.d=(e,t)=>{for(var s in t)c.o(t,s)&&!c.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var d={};(()=>{c.r(d),c.d(d,{ASTFeatureExtractor:()=>m.ASTFeatureExtractor,ASTForAudioClassification:()=>s.ASTForAudioClassification,ASTModel:()=>s.ASTModel,ASTPreTrainedModel:()=>s.ASTPreTrainedModel,AlbertForMaskedLM:()=>s.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>s.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>s.AlbertForSequenceClassification,AlbertModel:()=>s.AlbertModel,AlbertPreTrainedModel:()=>s.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>o.AutoConfig,AutoFeatureExtractor:()=>p.AutoFeatureExtractor,AutoImageProcessor:()=>g.AutoImageProcessor,AutoModel:()=>s.AutoModel,AutoModelForAudioClassification:()=>s.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>s.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>s.AutoModelForCTC,AutoModelForCausalLM:()=>s.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>s.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>s.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>s.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>s.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>s.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>s.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>s.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>s.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>s.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>s.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>s.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>s.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>s.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>s.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>s.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>s.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>s.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>s.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>s.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>s.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>s.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>s.AutoModelForVision2Seq,AutoModelForXVector:()=>s.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>s.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>w.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>s.BartForConditionalGeneration,BartForSequenceClassification:()=>s.BartForSequenceClassification,BartModel:()=>s.BartModel,BartPretrainedModel:()=>s.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>s.BaseModelOutput,BaseStreamer:()=>T.BaseStreamer,BeitFeatureExtractor:()=>h.BeitFeatureExtractor,BeitForImageClassification:()=>s.BeitForImageClassification,BeitModel:()=>s.BeitModel,BeitPreTrainedModel:()=>s.BeitPreTrainedModel,BertForMaskedLM:()=>s.BertForMaskedLM,BertForQuestionAnswering:()=>s.BertForQuestionAnswering,BertForSequenceClassification:()=>s.BertForSequenceClassification,BertForTokenClassification:()=>s.BertForTokenClassification,BertModel:()=>s.BertModel,BertPreTrainedModel:()=>s.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>h.BitImageProcessor,BlenderbotForConditionalGeneration:()=>s.BlenderbotForConditionalGeneration,BlenderbotModel:()=>s.BlenderbotModel,BlenderbotPreTrainedModel:()=>s.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>s.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>s.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>s.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>s.BloomForCausalLM,BloomModel:()=>s.BloomModel,BloomPreTrainedModel:()=>s.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>h.CLIPFeatureExtractor,CLIPImageProcessor:()=>h.CLIPImageProcessor,CLIPModel:()=>s.CLIPModel,CLIPPreTrainedModel:()=>s.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>s.CLIPSegForImageSegmentation,CLIPSegModel:()=>s.CLIPSegModel,CLIPSegPreTrainedModel:()=>s.CLIPSegPreTrainedModel,CLIPTextModel:()=>s.CLIPTextModel,CLIPTextModelWithProjection:()=>s.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>s.CLIPVisionModel,CLIPVisionModelWithProjection:()=>s.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>s.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>s.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>s.CamembertForSequenceClassification,CamembertForTokenClassification:()=>s.CamembertForTokenClassification,CamembertModel:()=>s.CamembertModel,CamembertPreTrainedModel:()=>s.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>s.CausalLMOutput,CausalLMOutputWithPast:()=>s.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>h.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>s.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>s.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>s.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>m.ClapFeatureExtractor,ClapModel:()=>s.ClapModel,ClapPreTrainedModel:()=>s.ClapPreTrainedModel,ClapTextModelWithProjection:()=>s.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>P.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>s.CodeGenForCausalLM,CodeGenModel:()=>s.CodeGenModel,CodeGenPreTrainedModel:()=>s.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>s.CohereForCausalLM,CohereModel:()=>s.CohereModel,CoherePreTrainedModel:()=>s.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>s.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>s.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>s.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>s.ConvBertForTokenClassification,ConvBertModel:()=>s.ConvBertModel,ConvBertPreTrainedModel:()=>s.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>h.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>s.ConvNextForImageClassification,ConvNextImageProcessor:()=>h.ConvNextImageProcessor,ConvNextModel:()=>s.ConvNextModel,ConvNextPreTrainedModel:()=>s.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>s.ConvNextV2ForImageClassification,ConvNextV2Model:()=>s.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>s.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>h.DPTFeatureExtractor,DPTForDepthEstimation:()=>s.DPTForDepthEstimation,DPTImageProcessor:()=>h.DPTImageProcessor,DPTModel:()=>s.DPTModel,DPTPreTrainedModel:()=>s.DPTPreTrainedModel,DebertaForMaskedLM:()=>s.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>s.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>s.DebertaForSequenceClassification,DebertaForTokenClassification:()=>s.DebertaForTokenClassification,DebertaModel:()=>s.DebertaModel,DebertaPreTrainedModel:()=>s.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>s.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>s.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>s.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>s.DebertaV2ForTokenClassification,DebertaV2Model:()=>s.DebertaV2Model,DebertaV2PreTrainedModel:()=>s.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>s.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>s.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>h.DeiTFeatureExtractor,DeiTForImageClassification:()=>s.DeiTForImageClassification,DeiTImageProcessor:()=>h.DeiTImageProcessor,DeiTModel:()=>s.DeiTModel,DeiTPreTrainedModel:()=>s.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>s.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>s.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DepthProForDepthEstimation:()=>s.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>s.DepthProPreTrainedModel,DetrFeatureExtractor:()=>h.DetrFeatureExtractor,DetrForObjectDetection:()=>s.DetrForObjectDetection,DetrForSegmentation:()=>s.DetrForSegmentation,DetrImageProcessor:()=>h.DetrImageProcessor,DetrModel:()=>s.DetrModel,DetrObjectDetectionOutput:()=>s.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>s.DetrPreTrainedModel,DetrSegmentationOutput:()=>s.DetrSegmentationOutput,Dinov2ForImageClassification:()=>s.Dinov2ForImageClassification,Dinov2Model:()=>s.Dinov2Model,Dinov2PreTrainedModel:()=>s.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>s.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>s.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>s.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>s.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>s.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>s.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>s.DistilBertForTokenClassification,DistilBertModel:()=>s.DistilBertModel,DistilBertPreTrainedModel:()=>s.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>h.DonutFeatureExtractor,DonutImageProcessor:()=>h.DonutImageProcessor,DonutSwinModel:()=>s.DonutSwinModel,DonutSwinPreTrainedModel:()=>s.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>s.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,EfficientNetModel:()=>s.EfficientNetModel,EfficientNetPreTrainedModel:()=>s.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>s.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>s.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>s.ElectraForSequenceClassification,ElectraForTokenClassification:()=>s.ElectraForTokenClassification,ElectraModel:()=>s.ElectraModel,ElectraPreTrainedModel:()=>s.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EosTokenCriteria:()=>b.EosTokenCriteria,EsmForMaskedLM:()=>s.EsmForMaskedLM,EsmForSequenceClassification:()=>s.EsmForSequenceClassification,EsmForTokenClassification:()=>s.EsmForTokenClassification,EsmModel:()=>s.EsmModel,EsmPreTrainedModel:()=>s.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>s.ExaoneForCausalLM,ExaoneModel:()=>s.ExaoneModel,ExaonePreTrainedModel:()=>s.ExaonePreTrainedModel,FFT:()=>l.FFT,FalconForCausalLM:()=>s.FalconForCausalLM,FalconModel:()=>s.FalconModel,FalconPreTrainedModel:()=>s.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>s.FastViTForImageClassification,FastViTModel:()=>s.FastViTModel,FastViTPreTrainedModel:()=>s.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>u.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>s.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>s.Florence2PreTrainedModel,Florence2Processor:()=>M.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>P.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>P.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>h.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>s.GLPNForDepthEstimation,GLPNModel:()=>s.GLPNModel,GLPNPreTrainedModel:()=>s.GLPNPreTrainedModel,GPT2LMHeadModel:()=>s.GPT2LMHeadModel,GPT2Model:()=>s.GPT2Model,GPT2PreTrainedModel:()=>s.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>s.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>s.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>s.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>s.GPTJForCausalLM,GPTJModel:()=>s.GPTJModel,GPTJPreTrainedModel:()=>s.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>s.GPTNeoForCausalLM,GPTNeoModel:()=>s.GPTNeoModel,GPTNeoPreTrainedModel:()=>s.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>s.GPTNeoXForCausalLM,GPTNeoXModel:()=>s.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>s.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>s.Gemma2ForCausalLM,Gemma2Model:()=>s.Gemma2Model,Gemma2PreTrainedModel:()=>s.Gemma2PreTrainedModel,GemmaForCausalLM:()=>s.GemmaForCausalLM,GemmaModel:()=>s.GemmaModel,GemmaPreTrainedModel:()=>s.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>s.GlmForCausalLM,GlmModel:()=>s.GlmModel,GlmPreTrainedModel:()=>s.GlmPreTrainedModel,GraniteForCausalLM:()=>s.GraniteForCausalLM,GraniteModel:()=>s.GraniteModel,GranitePreTrainedModel:()=>s.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>s.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>h.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>s.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>M.GroundingDinoProcessor,GroupViTModel:()=>s.GroupViTModel,GroupViTPreTrainedModel:()=>s.GroupViTPreTrainedModel,HeliumForCausalLM:()=>s.HeliumForCausalLM,HeliumModel:()=>s.HeliumModel,HeliumPreTrainedModel:()=>s.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>s.HieraForImageClassification,HieraModel:()=>s.HieraModel,HieraPreTrainedModel:()=>s.HieraPreTrainedModel,HubertForCTC:()=>s.HubertForCTC,HubertForSequenceClassification:()=>s.HubertForSequenceClassification,HubertModel:()=>s.HubertModel,HubertPreTrainedModel:()=>s.HubertPreTrainedModel,IJepaForImageClassification:()=>s.IJepaForImageClassification,IJepaModel:()=>s.IJepaModel,IJepaPreTrainedModel:()=>s.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>s.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>h.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>s.Idefics3PreTrainedModel,Idefics3Processor:()=>M.Idefics3Processor,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>m.ImageFeatureExtractor,ImageMattingOutput:()=>s.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>b.InterruptableStoppingCriteria,JAISLMHeadModel:()=>s.JAISLMHeadModel,JAISModel:()=>s.JAISModel,JAISPreTrainedModel:()=>s.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>h.JinaCLIPImageProcessor,JinaCLIPModel:()=>s.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>s.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>M.JinaCLIPProcessor,JinaCLIPTextModel:()=>s.JinaCLIPTextModel,JinaCLIPVisionModel:()=>s.JinaCLIPVisionModel,LlamaForCausalLM:()=>s.LlamaForCausalLM,LlamaModel:()=>s.LlamaModel,LlamaPreTrainedModel:()=>s.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>s.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>s.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>h.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>s.LlavaPreTrainedModel,LogitsProcessor:()=>P.LogitsProcessor,LogitsProcessorList:()=>P.LogitsProcessorList,LogitsWarper:()=>P.LogitsWarper,LongT5ForConditionalGeneration:()=>s.LongT5ForConditionalGeneration,LongT5Model:()=>s.LongT5Model,LongT5PreTrainedModel:()=>s.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>s.M2M100ForConditionalGeneration,M2M100Model:()=>s.M2M100Model,M2M100PreTrainedModel:()=>s.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>s.MBartForCausalLM,MBartForConditionalGeneration:()=>s.MBartForConditionalGeneration,MBartForSequenceClassification:()=>s.MBartForSequenceClassification,MBartModel:()=>s.MBartModel,MBartPreTrainedModel:()=>s.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>s.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>s.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>s.MPNetForSequenceClassification,MPNetForTokenClassification:()=>s.MPNetForTokenClassification,MPNetModel:()=>s.MPNetModel,MPNetPreTrainedModel:()=>s.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>s.MT5ForConditionalGeneration,MT5Model:()=>s.MT5Model,MT5PreTrainedModel:()=>s.MT5PreTrainedModel,MarianMTModel:()=>s.MarianMTModel,MarianModel:()=>s.MarianModel,MarianPreTrainedModel:()=>s.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>h.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>h.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>s.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>h.MaskFormerImageProcessor,MaskFormerModel:()=>s.MaskFormerModel,MaskFormerPreTrainedModel:()=>s.MaskFormerPreTrainedModel,MaskedLMOutput:()=>s.MaskedLMOutput,MaxLengthCriteria:()=>b.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>s.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>s.MgpstrModelOutput,MgpstrPreTrainedModel:()=>s.MgpstrPreTrainedModel,MgpstrProcessor:()=>M.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MinLengthLogitsProcessor:()=>P.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>P.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>s.MistralForCausalLM,MistralModel:()=>s.MistralModel,MistralPreTrainedModel:()=>s.MistralPreTrainedModel,MobileBertForMaskedLM:()=>s.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>s.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>s.MobileBertForSequenceClassification,MobileBertModel:()=>s.MobileBertModel,MobileBertPreTrainedModel:()=>s.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>s.MobileLLMForCausalLM,MobileLLMModel:()=>s.MobileLLMModel,MobileLLMPreTrainedModel:()=>s.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>h.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>s.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>h.MobileNetV1ImageProcessor,MobileNetV1Model:()=>s.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>s.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>h.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>s.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>h.MobileNetV2ImageProcessor,MobileNetV2Model:()=>s.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>s.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>h.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>s.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>h.MobileNetV3ImageProcessor,MobileNetV3Model:()=>s.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>s.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>h.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>s.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>h.MobileNetV4ImageProcessor,MobileNetV4Model:()=>s.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>s.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>h.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>s.MobileViTForImageClassification,MobileViTImageProcessor:()=>h.MobileViTImageProcessor,MobileViTModel:()=>s.MobileViTModel,MobileViTPreTrainedModel:()=>s.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>s.MobileViTV2ForImageClassification,MobileViTV2Model:()=>s.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>s.MobileViTV2PreTrainedModel,ModelOutput:()=>s.ModelOutput,ModernBertForMaskedLM:()=>s.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>s.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>s.ModernBertForTokenClassification,ModernBertModel:()=>s.ModernBertModel,ModernBertPreTrainedModel:()=>s.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>s.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>m.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>s.MoonshineForConditionalGeneration,MoonshineModel:()=>s.MoonshineModel,MoonshinePreTrainedModel:()=>s.MoonshinePreTrainedModel,MoonshineProcessor:()=>M.MoonshineProcessor,MptForCausalLM:()=>s.MptForCausalLM,MptModel:()=>s.MptModel,MptPreTrainedModel:()=>s.MptPreTrainedModel,MultiModalityCausalLM:()=>s.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>s.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>s.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>s.MusicgenForConditionalGeneration,MusicgenModel:()=>s.MusicgenModel,MusicgenPreTrainedModel:()=>s.MusicgenPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>P.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>P.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>s.NomicBertModel,NomicBertPreTrainedModel:()=>s.NomicBertPreTrainedModel,NougatImageProcessor:()=>h.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>s.OPTForCausalLM,OPTModel:()=>s.OPTModel,OPTPreTrainedModel:()=>s.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>s.Olmo2ForCausalLM,Olmo2Model:()=>s.Olmo2Model,Olmo2PreTrainedModel:()=>s.Olmo2PreTrainedModel,OlmoForCausalLM:()=>s.OlmoForCausalLM,OlmoModel:()=>s.OlmoModel,OlmoPreTrainedModel:()=>s.OlmoPreTrainedModel,OpenELMForCausalLM:()=>s.OpenELMForCausalLM,OpenELMModel:()=>s.OpenELMModel,OpenELMPreTrainedModel:()=>s.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>h.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>s.OwlViTForObjectDetection,OwlViTImageProcessor:()=>h.OwlViTImageProcessor,OwlViTModel:()=>s.OwlViTModel,OwlViTPreTrainedModel:()=>s.OwlViTPreTrainedModel,OwlViTProcessor:()=>M.OwlViTProcessor,Owlv2ForObjectDetection:()=>s.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>h.Owlv2ImageProcessor,Owlv2Model:()=>s.Owlv2Model,Owlv2PreTrainedModel:()=>s.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>s.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>s.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>M.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>s.PatchTSMixerForPrediction,PatchTSMixerModel:()=>s.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>s.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>s.PatchTSTForPrediction,PatchTSTModel:()=>s.PatchTSTModel,PatchTSTPreTrainedModel:()=>s.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>s.Phi3ForCausalLM,Phi3Model:()=>s.Phi3Model,Phi3PreTrainedModel:()=>s.Phi3PreTrainedModel,Phi3VForCausalLM:()=>s.Phi3VForCausalLM,Phi3VImageProcessor:()=>h.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>s.Phi3VPreTrainedModel,Phi3VProcessor:()=>M.Phi3VProcessor,PhiForCausalLM:()=>s.PhiForCausalLM,PhiModel:()=>s.PhiModel,PhiPreTrainedModel:()=>s.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>s.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>o.PretrainedConfig,PretrainedMixin:()=>s.PretrainedMixin,Processor:()=>f.Processor,PvtForImageClassification:()=>s.PvtForImageClassification,PvtImageProcessor:()=>h.PvtImageProcessor,PvtModel:()=>s.PvtModel,PvtPreTrainedModel:()=>s.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>m.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>s.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>s.PyAnnoteModel,PyAnnotePreTrainedModel:()=>s.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>M.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>s.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>s.Qwen2ForCausalLM,Qwen2Model:()=>s.Qwen2Model,Qwen2PreTrainedModel:()=>s.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>s.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>h.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>s.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>M.Qwen2VLProcessor,RTDetrForObjectDetection:()=>s.RTDetrForObjectDetection,RTDetrImageProcessor:()=>h.RTDetrImageProcessor,RTDetrModel:()=>s.RTDetrModel,RTDetrObjectDetectionOutput:()=>s.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>s.RTDetrPreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>a.RawImage,RepetitionPenaltyLogitsProcessor:()=>P.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>s.ResNetForImageClassification,ResNetModel:()=>s.ResNetModel,ResNetPreTrainedModel:()=>s.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>s.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>s.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>s.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>s.RoFormerForTokenClassification,RoFormerModel:()=>s.RoFormerModel,RoFormerPreTrainedModel:()=>s.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>s.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>s.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>s.RobertaForSequenceClassification,RobertaForTokenClassification:()=>s.RobertaForTokenClassification,RobertaModel:()=>s.RobertaModel,RobertaPreTrainedModel:()=>s.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>h.SamImageProcessor,SamImageSegmentationOutput:()=>s.SamImageSegmentationOutput,SamModel:()=>s.SamModel,SamPreTrainedModel:()=>s.SamPreTrainedModel,SamProcessor:()=>M.SamProcessor,SapiensForDepthEstimation:()=>s.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>s.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>s.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>s.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>m.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>h.SegformerFeatureExtractor,SegformerForImageClassification:()=>s.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>s.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>h.SegformerImageProcessor,SegformerModel:()=>s.SegformerModel,SegformerPreTrainedModel:()=>s.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>s.Seq2SeqLMOutput,SequenceClassifierOutput:()=>s.SequenceClassifierOutput,SiglipImageProcessor:()=>h.SiglipImageProcessor,SiglipModel:()=>s.SiglipModel,SiglipPreTrainedModel:()=>s.SiglipPreTrainedModel,SiglipTextModel:()=>s.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>s.SiglipVisionModel,SpeechT5FeatureExtractor:()=>m.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>s.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>s.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>s.SpeechT5HifiGan,SpeechT5Model:()=>s.SpeechT5Model,SpeechT5PreTrainedModel:()=>s.SpeechT5PreTrainedModel,SpeechT5Processor:()=>M.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>s.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>s.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>s.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>s.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>s.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>s.StableLmForCausalLM,StableLmModel:()=>s.StableLmModel,StableLmPreTrainedModel:()=>s.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>s.Starcoder2ForCausalLM,Starcoder2Model:()=>s.Starcoder2Model,Starcoder2PreTrainedModel:()=>s.Starcoder2PreTrainedModel,StoppingCriteria:()=>b.StoppingCriteria,StoppingCriteriaList:()=>b.StoppingCriteriaList,StyleTextToSpeech2Model:()=>s.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>s.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>t.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>P.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>s.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>h.Swin2SRImageProcessor,Swin2SRModel:()=>s.Swin2SRModel,Swin2SRPreTrainedModel:()=>s.Swin2SRPreTrainedModel,SwinForImageClassification:()=>s.SwinForImageClassification,SwinModel:()=>s.SwinModel,SwinPreTrainedModel:()=>s.SwinPreTrainedModel,T5ForConditionalGeneration:()=>s.T5ForConditionalGeneration,T5Model:()=>s.T5Model,T5PreTrainedModel:()=>s.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>s.TableTransformerForObjectDetection,TableTransformerModel:()=>s.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>s.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>s.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>P.TemperatureLogitsWarper,Tensor:()=>i.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>T.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>s.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>P.TopKLogitsWarper,TopPLogitsWarper:()=>P.TopPLogitsWarper,TrOCRForCausalLM:()=>s.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>s.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UniSpeechForCTC:()=>s.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>s.UniSpeechForSequenceClassification,UniSpeechModel:()=>s.UniSpeechModel,UniSpeechPreTrainedModel:()=>s.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>s.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>s.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>s.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>s.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>s.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>M.VLChatProcessor,VLMImageProcessor:()=>h.VLMImageProcessor,ViTFeatureExtractor:()=>h.ViTFeatureExtractor,ViTForImageClassification:()=>s.ViTForImageClassification,ViTImageProcessor:()=>h.ViTImageProcessor,ViTMAEModel:()=>s.ViTMAEModel,ViTMAEPreTrainedModel:()=>s.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>s.ViTMSNForImageClassification,ViTMSNModel:()=>s.ViTMSNModel,ViTMSNPreTrainedModel:()=>s.ViTMSNPreTrainedModel,ViTModel:()=>s.ViTModel,ViTPreTrainedModel:()=>s.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>s.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>s.VitMatteForImageMatting,VitMatteImageProcessor:()=>h.VitMatteImageProcessor,VitMattePreTrainedModel:()=>s.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>s.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>h.VitPoseImageProcessor,VitPosePreTrainedModel:()=>s.VitPosePreTrainedModel,VitsModel:()=>s.VitsModel,VitsModelOutput:()=>s.VitsModelOutput,VitsPreTrainedModel:()=>s.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,Wav2Vec2BertForCTC:()=>s.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>s.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>s.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>s.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>s.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>s.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>s.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>s.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>s.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>M.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>s.WavLMForAudioFrameClassification,WavLMForCTC:()=>s.WavLMForCTC,WavLMForSequenceClassification:()=>s.WavLMForSequenceClassification,WavLMForXVector:()=>s.WavLMForXVector,WavLMModel:()=>s.WavLMModel,WavLMPreTrainedModel:()=>s.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>m.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>s.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>s.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>m.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>s.WhisperForConditionalGeneration,WhisperModel:()=>s.WhisperModel,WhisperPreTrainedModel:()=>s.WhisperPreTrainedModel,WhisperProcessor:()=>M.WhisperProcessor,WhisperTextStreamer:()=>T.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>P.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>s.XLMForQuestionAnswering,XLMForSequenceClassification:()=>s.XLMForSequenceClassification,XLMForTokenClassification:()=>s.XLMForTokenClassification,XLMModel:()=>s.XLMModel,XLMPreTrainedModel:()=>s.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>s.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>s.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>s.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>s.XLMRobertaForTokenClassification,XLMRobertaModel:()=>s.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>s.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>s.XLMWithLMHeadModel,XVectorOutput:()=>s.XVectorOutput,YolosFeatureExtractor:()=>h.YolosFeatureExtractor,YolosForObjectDetection:()=>s.YolosForObjectDetection,YolosImageProcessor:()=>h.YolosImageProcessor,YolosModel:()=>s.YolosModel,YolosObjectDetectionOutput:()=>s.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>s.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>l.bankers_round,cat:()=>i.cat,cos_sim:()=>l.cos_sim,dot:()=>l.dot,dynamic_time_warping:()=>l.dynamic_time_warping,env:()=>e.env,full:()=>i.full,full_like:()=>i.full_like,getKeyValueShapes:()=>o.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>i.interpolate,interpolate_4d:()=>i.interpolate_4d,interpolate_data:()=>l.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>i.layer_norm,load_image:()=>a.load_image,log_softmax:()=>l.log_softmax,magnitude:()=>l.magnitude,matmul:()=>i.matmul,max:()=>l.max,mean:()=>i.mean,mean_pooling:()=>i.mean_pooling,medianFilter:()=>l.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>l.min,ones:()=>i.ones,ones_like:()=>i.ones_like,permute:()=>i.permute,permute_data:()=>l.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>i.quantize_embeddings,rand:()=>i.rand,read_audio:()=>n.read_audio,rfft:()=>i.rfft,round:()=>l.round,slice:()=>i.slice,softmax:()=>l.softmax,spectrogram:()=>n.spectrogram,stack:()=>i.stack,std_mean:()=>i.std_mean,topk:()=>i.topk,window_function:()=>n.window_function,zeros:()=>i.zeros,zeros_like:()=>i.zeros_like});var e=c("./src/env.js"),t=c("./src/pipelines.js"),s=c("./src/models.js"),r=c("./src/tokenizers.js"),o=c("./src/configs.js"),n=c("./src/utils/audio.js"),a=c("./src/utils/image.js"),i=c("./src/utils/tensor.js"),l=c("./src/utils/maths.js"),u=c("./src/base/feature_extraction_utils.js"),m=c("./src/models/feature_extractors.js"),p=c("./src/models/auto/feature_extraction_auto.js"),_=c("./src/base/image_processors_utils.js"),h=c("./src/models/image_processors.js"),g=c("./src/models/auto/image_processing_auto.js"),f=c("./src/base/processing_utils.js"),M=c("./src/models/processors.js"),w=c("./src/models/auto/processing_auto.js"),T=c("./src/generation/streamers.js"),b=c("./src/generation/stopping_criteria.js"),P=c("./src/generation/logits_process.js")})();var u=d.ASTFeatureExtractor,m=d.ASTForAudioClassification,p=d.ASTModel,_=d.ASTPreTrainedModel,h=d.AlbertForMaskedLM,g=d.AlbertForQuestionAnswering,f=d.AlbertForSequenceClassification,M=d.AlbertModel,w=d.AlbertPreTrainedModel,T=d.AlbertTokenizer,b=d.AudioClassificationPipeline,P=d.AutoConfig,x=d.AutoFeatureExtractor,k=d.AutoImageProcessor,y=d.AutoModel,F=d.AutoModelForAudioClassification,v=d.AutoModelForAudioFrameClassification,C=d.AutoModelForCTC,S=d.AutoModelForCausalLM,A=d.AutoModelForDepthEstimation,E=d.AutoModelForDocumentQuestionAnswering,L=d.AutoModelForImageClassification,I=d.AutoModelForImageFeatureExtraction,z=d.AutoModelForImageMatting,j=d.AutoModelForImageSegmentation,N=d.AutoModelForImageToImage,B=d.AutoModelForMaskGeneration,V=d.AutoModelForMaskedLM,O=d.AutoModelForNormalEstimation,D=d.AutoModelForObjectDetection,G=d.AutoModelForPoseEstimation,R=d.AutoModelForQuestionAnswering,q=d.AutoModelForSemanticSegmentation,W=d.AutoModelForSeq2SeqLM,$=d.AutoModelForSequenceClassification,U=d.AutoModelForSpeechSeq2Seq,Q=d.AutoModelForTextToSpectrogram,X=d.AutoModelForTextToWaveform,H=d.AutoModelForTokenClassification,J=d.AutoModelForUniversalSegmentation,Y=d.AutoModelForVision2Seq,K=d.AutoModelForXVector,Z=d.AutoModelForZeroShotObjectDetection,ee=d.AutoProcessor,te=d.AutoTokenizer,se=d.AutomaticSpeechRecognitionPipeline,re=d.BartForConditionalGeneration,oe=d.BartForSequenceClassification,ne=d.BartModel,ae=d.BartPretrainedModel,ie=d.BartTokenizer,le=d.BaseModelOutput,ce=d.BaseStreamer,de=d.BeitFeatureExtractor,ue=d.BeitForImageClassification,me=d.BeitModel,pe=d.BeitPreTrainedModel,_e=d.BertForMaskedLM,he=d.BertForQuestionAnswering,ge=d.BertForSequenceClassification,fe=d.BertForTokenClassification,Me=d.BertModel,we=d.BertPreTrainedModel,Te=d.BertTokenizer,be=d.BitImageProcessor,Pe=d.BlenderbotForConditionalGeneration,xe=d.BlenderbotModel,ke=d.BlenderbotPreTrainedModel,ye=d.BlenderbotSmallForConditionalGeneration,Fe=d.BlenderbotSmallModel,ve=d.BlenderbotSmallPreTrainedModel,Ce=d.BlenderbotSmallTokenizer,Se=d.BlenderbotTokenizer,Ae=d.BloomForCausalLM,Ee=d.BloomModel,Le=d.BloomPreTrainedModel,Ie=d.BloomTokenizer,ze=d.CLIPFeatureExtractor,je=d.CLIPImageProcessor,Ne=d.CLIPModel,Be=d.CLIPPreTrainedModel,Ve=d.CLIPSegForImageSegmentation,Oe=d.CLIPSegModel,De=d.CLIPSegPreTrainedModel,Ge=d.CLIPTextModel,Re=d.CLIPTextModelWithProjection,qe=d.CLIPTokenizer,We=d.CLIPVisionModel,$e=d.CLIPVisionModelWithProjection,Ue=d.CamembertForMaskedLM,Qe=d.CamembertForQuestionAnswering,Xe=d.CamembertForSequenceClassification,He=d.CamembertForTokenClassification,Je=d.CamembertModel,Ye=d.CamembertPreTrainedModel,Ke=d.CamembertTokenizer,Ze=d.CausalLMOutput,et=d.CausalLMOutputWithPast,tt=d.ChineseCLIPFeatureExtractor,st=d.ChineseCLIPModel,rt=d.ChineseCLIPPreTrainedModel,ot=d.ClapAudioModelWithProjection,nt=d.ClapFeatureExtractor,at=d.ClapModel,it=d.ClapPreTrainedModel,lt=d.ClapTextModelWithProjection,ct=d.ClassifierFreeGuidanceLogitsProcessor,dt=d.CodeGenForCausalLM,ut=d.CodeGenModel,mt=d.CodeGenPreTrainedModel,pt=d.CodeGenTokenizer,_t=d.CodeLlamaTokenizer,ht=d.CohereForCausalLM,gt=d.CohereModel,ft=d.CoherePreTrainedModel,Mt=d.CohereTokenizer,wt=d.ConvBertForMaskedLM,Tt=d.ConvBertForQuestionAnswering,bt=d.ConvBertForSequenceClassification,Pt=d.ConvBertForTokenClassification,xt=d.ConvBertModel,kt=d.ConvBertPreTrainedModel,yt=d.ConvBertTokenizer,Ft=d.ConvNextFeatureExtractor,vt=d.ConvNextForImageClassification,Ct=d.ConvNextImageProcessor,St=d.ConvNextModel,At=d.ConvNextPreTrainedModel,Et=d.ConvNextV2ForImageClassification,Lt=d.ConvNextV2Model,It=d.ConvNextV2PreTrainedModel,zt=d.DPTFeatureExtractor,jt=d.DPTForDepthEstimation,Nt=d.DPTImageProcessor,Bt=d.DPTModel,Vt=d.DPTPreTrainedModel,Ot=d.DebertaForMaskedLM,Dt=d.DebertaForQuestionAnswering,Gt=d.DebertaForSequenceClassification,Rt=d.DebertaForTokenClassification,qt=d.DebertaModel,Wt=d.DebertaPreTrainedModel,$t=d.DebertaTokenizer,Ut=d.DebertaV2ForMaskedLM,Qt=d.DebertaV2ForQuestionAnswering,Xt=d.DebertaV2ForSequenceClassification,Ht=d.DebertaV2ForTokenClassification,Jt=d.DebertaV2Model,Yt=d.DebertaV2PreTrainedModel,Kt=d.DebertaV2Tokenizer,Zt=d.DecisionTransformerModel,es=d.DecisionTransformerPreTrainedModel,ts=d.DeiTFeatureExtractor,ss=d.DeiTForImageClassification,rs=d.DeiTImageProcessor,os=d.DeiTModel,ns=d.DeiTPreTrainedModel,as=d.DepthAnythingForDepthEstimation,is=d.DepthAnythingPreTrainedModel,ls=d.DepthEstimationPipeline,cs=d.DepthProForDepthEstimation,ds=d.DepthProPreTrainedModel,us=d.DetrFeatureExtractor,ms=d.DetrForObjectDetection,ps=d.DetrForSegmentation,_s=d.DetrImageProcessor,hs=d.DetrModel,gs=d.DetrObjectDetectionOutput,fs=d.DetrPreTrainedModel,Ms=d.DetrSegmentationOutput,ws=d.Dinov2ForImageClassification,Ts=d.Dinov2Model,bs=d.Dinov2PreTrainedModel,Ps=d.Dinov2WithRegistersForImageClassification,xs=d.Dinov2WithRegistersModel,ks=d.Dinov2WithRegistersPreTrainedModel,ys=d.DistilBertForMaskedLM,Fs=d.DistilBertForQuestionAnswering,vs=d.DistilBertForSequenceClassification,Cs=d.DistilBertForTokenClassification,Ss=d.DistilBertModel,As=d.DistilBertPreTrainedModel,Es=d.DistilBertTokenizer,Ls=d.DocumentQuestionAnsweringPipeline,Is=d.DonutFeatureExtractor,zs=d.DonutImageProcessor,js=d.DonutSwinModel,Ns=d.DonutSwinPreTrainedModel,Bs=d.EfficientNetForImageClassification,Vs=d.EfficientNetImageProcessor,Os=d.EfficientNetModel,Ds=d.EfficientNetPreTrainedModel,Gs=d.ElectraForMaskedLM,Rs=d.ElectraForQuestionAnswering,qs=d.ElectraForSequenceClassification,Ws=d.ElectraForTokenClassification,$s=d.ElectraModel,Us=d.ElectraPreTrainedModel,Qs=d.ElectraTokenizer,Xs=d.EosTokenCriteria,Hs=d.EsmForMaskedLM,Js=d.EsmForSequenceClassification,Ys=d.EsmForTokenClassification,Ks=d.EsmModel,Zs=d.EsmPreTrainedModel,er=d.EsmTokenizer,tr=d.ExaoneForCausalLM,sr=d.ExaoneModel,rr=d.ExaonePreTrainedModel,or=d.FFT,nr=d.FalconForCausalLM,ar=d.FalconModel,ir=d.FalconPreTrainedModel,lr=d.FalconTokenizer,cr=d.FastViTForImageClassification,dr=d.FastViTModel,ur=d.FastViTPreTrainedModel,mr=d.FeatureExtractionPipeline,pr=d.FeatureExtractor,_r=d.FillMaskPipeline,hr=d.Florence2ForConditionalGeneration,gr=d.Florence2PreTrainedModel,fr=d.Florence2Processor,Mr=d.ForcedBOSTokenLogitsProcessor,wr=d.ForcedEOSTokenLogitsProcessor,Tr=d.GLPNFeatureExtractor,br=d.GLPNForDepthEstimation,Pr=d.GLPNModel,xr=d.GLPNPreTrainedModel,kr=d.GPT2LMHeadModel,yr=d.GPT2Model,Fr=d.GPT2PreTrainedModel,vr=d.GPT2Tokenizer,Cr=d.GPTBigCodeForCausalLM,Sr=d.GPTBigCodeModel,Ar=d.GPTBigCodePreTrainedModel,Er=d.GPTJForCausalLM,Lr=d.GPTJModel,Ir=d.GPTJPreTrainedModel,zr=d.GPTNeoForCausalLM,jr=d.GPTNeoModel,Nr=d.GPTNeoPreTrainedModel,Br=d.GPTNeoXForCausalLM,Vr=d.GPTNeoXModel,Or=d.GPTNeoXPreTrainedModel,Dr=d.GPTNeoXTokenizer,Gr=d.Gemma2ForCausalLM,Rr=d.Gemma2Model,qr=d.Gemma2PreTrainedModel,Wr=d.GemmaForCausalLM,$r=d.GemmaModel,Ur=d.GemmaPreTrainedModel,Qr=d.GemmaTokenizer,Xr=d.GlmForCausalLM,Hr=d.GlmModel,Jr=d.GlmPreTrainedModel,Yr=d.GraniteForCausalLM,Kr=d.GraniteModel,Zr=d.GranitePreTrainedModel,eo=d.Grok1Tokenizer,to=d.GroundingDinoForObjectDetection,so=d.GroundingDinoImageProcessor,ro=d.GroundingDinoPreTrainedModel,oo=d.GroundingDinoProcessor,no=d.GroupViTModel,ao=d.GroupViTPreTrainedModel,io=d.HeliumForCausalLM,lo=d.HeliumModel,co=d.HeliumPreTrainedModel,uo=d.HerbertTokenizer,mo=d.HieraForImageClassification,po=d.HieraModel,_o=d.HieraPreTrainedModel,ho=d.HubertForCTC,go=d.HubertForSequenceClassification,fo=d.HubertModel,Mo=d.HubertPreTrainedModel,wo=d.IJepaForImageClassification,To=d.IJepaModel,bo=d.IJepaPreTrainedModel,Po=d.Idefics3ForConditionalGeneration,xo=d.Idefics3ImageProcessor,ko=d.Idefics3PreTrainedModel,yo=d.Idefics3Processor,Fo=d.ImageClassificationPipeline,vo=d.ImageFeatureExtractionPipeline,Co=d.ImageFeatureExtractor,So=d.ImageMattingOutput,Ao=d.ImageProcessor,Eo=d.ImageSegmentationPipeline,Lo=d.ImageToImagePipeline,Io=d.ImageToTextPipeline,zo=d.InterruptableStoppingCriteria,jo=d.JAISLMHeadModel,No=d.JAISModel,Bo=d.JAISPreTrainedModel,Vo=d.JinaCLIPImageProcessor,Oo=d.JinaCLIPModel,Do=d.JinaCLIPPreTrainedModel,Go=d.JinaCLIPProcessor,Ro=d.JinaCLIPTextModel,qo=d.JinaCLIPVisionModel,Wo=d.LlamaForCausalLM,$o=d.LlamaModel,Uo=d.LlamaPreTrainedModel,Qo=d.LlamaTokenizer,Xo=d.LlavaForConditionalGeneration,Ho=d.LlavaOnevisionForConditionalGeneration,Jo=d.LlavaOnevisionImageProcessor,Yo=d.LlavaPreTrainedModel,Ko=d.LogitsProcessor,Zo=d.LogitsProcessorList,en=d.LogitsWarper,tn=d.LongT5ForConditionalGeneration,sn=d.LongT5Model,rn=d.LongT5PreTrainedModel,on=d.M2M100ForConditionalGeneration,nn=d.M2M100Model,an=d.M2M100PreTrainedModel,ln=d.M2M100Tokenizer,cn=d.MBart50Tokenizer,dn=d.MBartForCausalLM,un=d.MBartForConditionalGeneration,mn=d.MBartForSequenceClassification,pn=d.MBartModel,_n=d.MBartPreTrainedModel,hn=d.MBartTokenizer,gn=d.MPNetForMaskedLM,fn=d.MPNetForQuestionAnswering,Mn=d.MPNetForSequenceClassification,wn=d.MPNetForTokenClassification,Tn=d.MPNetModel,bn=d.MPNetPreTrainedModel,Pn=d.MPNetTokenizer,xn=d.MT5ForConditionalGeneration,kn=d.MT5Model,yn=d.MT5PreTrainedModel,Fn=d.MarianMTModel,vn=d.MarianModel,Cn=d.MarianPreTrainedModel,Sn=d.MarianTokenizer,An=d.Mask2FormerImageProcessor,En=d.MaskFormerFeatureExtractor,Ln=d.MaskFormerForInstanceSegmentation,In=d.MaskFormerImageProcessor,zn=d.MaskFormerModel,jn=d.MaskFormerPreTrainedModel,Nn=d.MaskedLMOutput,Bn=d.MaxLengthCriteria,Vn=d.MgpstrForSceneTextRecognition,On=d.MgpstrModelOutput,Dn=d.MgpstrPreTrainedModel,Gn=d.MgpstrProcessor,Rn=d.MgpstrTokenizer,qn=d.MinLengthLogitsProcessor,Wn=d.MinNewTokensLengthLogitsProcessor,$n=d.MistralForCausalLM,Un=d.MistralModel,Qn=d.MistralPreTrainedModel,Xn=d.MobileBertForMaskedLM,Hn=d.MobileBertForQuestionAnswering,Jn=d.MobileBertForSequenceClassification,Yn=d.MobileBertModel,Kn=d.MobileBertPreTrainedModel,Zn=d.MobileBertTokenizer,ea=d.MobileLLMForCausalLM,ta=d.MobileLLMModel,sa=d.MobileLLMPreTrainedModel,ra=d.MobileNetV1FeatureExtractor,oa=d.MobileNetV1ForImageClassification,na=d.MobileNetV1ImageProcessor,aa=d.MobileNetV1Model,ia=d.MobileNetV1PreTrainedModel,la=d.MobileNetV2FeatureExtractor,ca=d.MobileNetV2ForImageClassification,da=d.MobileNetV2ImageProcessor,ua=d.MobileNetV2Model,ma=d.MobileNetV2PreTrainedModel,pa=d.MobileNetV3FeatureExtractor,_a=d.MobileNetV3ForImageClassification,ha=d.MobileNetV3ImageProcessor,ga=d.MobileNetV3Model,fa=d.MobileNetV3PreTrainedModel,Ma=d.MobileNetV4FeatureExtractor,wa=d.MobileNetV4ForImageClassification,Ta=d.MobileNetV4ImageProcessor,ba=d.MobileNetV4Model,Pa=d.MobileNetV4PreTrainedModel,xa=d.MobileViTFeatureExtractor,ka=d.MobileViTForImageClassification,ya=d.MobileViTImageProcessor,Fa=d.MobileViTModel,va=d.MobileViTPreTrainedModel,Ca=d.MobileViTV2ForImageClassification,Sa=d.MobileViTV2Model,Aa=d.MobileViTV2PreTrainedModel,Ea=d.ModelOutput,La=d.ModernBertForMaskedLM,Ia=d.ModernBertForSequenceClassification,za=d.ModernBertForTokenClassification,ja=d.ModernBertModel,Na=d.ModernBertPreTrainedModel,Ba=d.Moondream1ForConditionalGeneration,Va=d.MoonshineFeatureExtractor,Oa=d.MoonshineForConditionalGeneration,Da=d.MoonshineModel,Ga=d.MoonshinePreTrainedModel,Ra=d.MoonshineProcessor,qa=d.MptForCausalLM,Wa=d.MptModel,$a=d.MptPreTrainedModel,Ua=d.MultiModalityCausalLM,Qa=d.MultiModalityPreTrainedModel,Xa=d.MusicgenForCausalLM,Ha=d.MusicgenForConditionalGeneration,Ja=d.MusicgenModel,Ya=d.MusicgenPreTrainedModel,Ka=d.NllbTokenizer,Za=d.NoBadWordsLogitsProcessor,ei=d.NoRepeatNGramLogitsProcessor,ti=d.NomicBertModel,si=d.NomicBertPreTrainedModel,ri=d.NougatImageProcessor,oi=d.NougatTokenizer,ni=d.OPTForCausalLM,ai=d.OPTModel,ii=d.OPTPreTrainedModel,li=d.ObjectDetectionPipeline,ci=d.Olmo2ForCausalLM,di=d.Olmo2Model,ui=d.Olmo2PreTrainedModel,mi=d.OlmoForCausalLM,pi=d.OlmoModel,_i=d.OlmoPreTrainedModel,hi=d.OpenELMForCausalLM,gi=d.OpenELMModel,fi=d.OpenELMPreTrainedModel,Mi=d.OwlViTFeatureExtractor,wi=d.OwlViTForObjectDetection,Ti=d.OwlViTImageProcessor,bi=d.OwlViTModel,Pi=d.OwlViTPreTrainedModel,xi=d.OwlViTProcessor,ki=d.Owlv2ForObjectDetection,yi=d.Owlv2ImageProcessor,Fi=d.Owlv2Model,vi=d.Owlv2PreTrainedModel,Ci=d.PaliGemmaForConditionalGeneration,Si=d.PaliGemmaPreTrainedModel,Ai=d.PaliGemmaProcessor,Ei=d.PatchTSMixerForPrediction,Li=d.PatchTSMixerModel,Ii=d.PatchTSMixerPreTrainedModel,zi=d.PatchTSTForPrediction,ji=d.PatchTSTModel,Ni=d.PatchTSTPreTrainedModel,Bi=d.Phi3ForCausalLM,Vi=d.Phi3Model,Oi=d.Phi3PreTrainedModel,Di=d.Phi3VForCausalLM,Gi=d.Phi3VImageProcessor,Ri=d.Phi3VPreTrainedModel,qi=d.Phi3VProcessor,Wi=d.PhiForCausalLM,$i=d.PhiModel,Ui=d.PhiPreTrainedModel,Qi=d.Pipeline,Xi=d.PreTrainedModel,Hi=d.PreTrainedTokenizer,Ji=d.PretrainedConfig,Yi=d.PretrainedMixin,Ki=d.Processor,Zi=d.PvtForImageClassification,el=d.PvtImageProcessor,tl=d.PvtModel,sl=d.PvtPreTrainedModel,rl=d.PyAnnoteFeatureExtractor,ol=d.PyAnnoteForAudioFrameClassification,nl=d.PyAnnoteModel,al=d.PyAnnotePreTrainedModel,il=d.PyAnnoteProcessor,ll=d.QuestionAnsweringModelOutput,cl=d.QuestionAnsweringPipeline,dl=d.Qwen2ForCausalLM,ul=d.Qwen2Model,ml=d.Qwen2PreTrainedModel,pl=d.Qwen2Tokenizer,_l=d.Qwen2VLForConditionalGeneration,hl=d.Qwen2VLImageProcessor,gl=d.Qwen2VLPreTrainedModel,fl=d.Qwen2VLProcessor,Ml=d.RTDetrForObjectDetection,wl=d.RTDetrImageProcessor,Tl=d.RTDetrModel,bl=d.RTDetrObjectDetectionOutput,Pl=d.RTDetrPreTrainedModel,xl=d.RawAudio,kl=d.RawImage,yl=d.RepetitionPenaltyLogitsProcessor,Fl=d.ResNetForImageClassification,vl=d.ResNetModel,Cl=d.ResNetPreTrainedModel,Sl=d.RoFormerForMaskedLM,Al=d.RoFormerForQuestionAnswering,El=d.RoFormerForSequenceClassification,Ll=d.RoFormerForTokenClassification,Il=d.RoFormerModel,zl=d.RoFormerPreTrainedModel,jl=d.RoFormerTokenizer,Nl=d.RobertaForMaskedLM,Bl=d.RobertaForQuestionAnswering,Vl=d.RobertaForSequenceClassification,Ol=d.RobertaForTokenClassification,Dl=d.RobertaModel,Gl=d.RobertaPreTrainedModel,Rl=d.RobertaTokenizer,ql=d.SamImageProcessor,Wl=d.SamImageSegmentationOutput,$l=d.SamModel,Ul=d.SamPreTrainedModel,Ql=d.SamProcessor,Xl=d.SapiensForDepthEstimation,Hl=d.SapiensForNormalEstimation,Jl=d.SapiensForSemanticSegmentation,Yl=d.SapiensPreTrainedModel,Kl=d.SeamlessM4TFeatureExtractor,Zl=d.SegformerFeatureExtractor,ec=d.SegformerForImageClassification,tc=d.SegformerForSemanticSegmentation,sc=d.SegformerImageProcessor,rc=d.SegformerModel,oc=d.SegformerPreTrainedModel,nc=d.Seq2SeqLMOutput,ac=d.SequenceClassifierOutput,ic=d.SiglipImageProcessor,lc=d.SiglipModel,cc=d.SiglipPreTrainedModel,dc=d.SiglipTextModel,uc=d.SiglipTokenizer,mc=d.SiglipVisionModel,pc=d.SpeechT5FeatureExtractor,_c=d.SpeechT5ForSpeechToText,hc=d.SpeechT5ForTextToSpeech,gc=d.SpeechT5HifiGan,fc=d.SpeechT5Model,Mc=d.SpeechT5PreTrainedModel,wc=d.SpeechT5Processor,Tc=d.SpeechT5Tokenizer,bc=d.SqueezeBertForMaskedLM,Pc=d.SqueezeBertForQuestionAnswering,xc=d.SqueezeBertForSequenceClassification,kc=d.SqueezeBertModel,yc=d.SqueezeBertPreTrainedModel,Fc=d.SqueezeBertTokenizer,vc=d.StableLmForCausalLM,Cc=d.StableLmModel,Sc=d.StableLmPreTrainedModel,Ac=d.Starcoder2ForCausalLM,Ec=d.Starcoder2Model,Lc=d.Starcoder2PreTrainedModel,Ic=d.StoppingCriteria,zc=d.StoppingCriteriaList,jc=d.StyleTextToSpeech2Model,Nc=d.StyleTextToSpeech2PreTrainedModel,Bc=d.SummarizationPipeline,Vc=d.SuppressTokensAtBeginLogitsProcessor,Oc=d.Swin2SRForImageSuperResolution,Dc=d.Swin2SRImageProcessor,Gc=d.Swin2SRModel,Rc=d.Swin2SRPreTrainedModel,qc=d.SwinForImageClassification,Wc=d.SwinModel,$c=d.SwinPreTrainedModel,Uc=d.T5ForConditionalGeneration,Qc=d.T5Model,Xc=d.T5PreTrainedModel,Hc=d.T5Tokenizer,Jc=d.TableTransformerForObjectDetection,Yc=d.TableTransformerModel,Kc=d.TableTransformerObjectDetectionOutput,Zc=d.TableTransformerPreTrainedModel,ed=d.TemperatureLogitsWarper,td=d.Tensor,sd=d.Text2TextGenerationPipeline,rd=d.TextClassificationPipeline,od=d.TextGenerationPipeline,nd=d.TextStreamer,ad=d.TextToAudioPipeline,id=d.TokenClassificationPipeline,ld=d.TokenClassifierOutput,cd=d.TokenizerModel,dd=d.TopKLogitsWarper,ud=d.TopPLogitsWarper,md=d.TrOCRForCausalLM,pd=d.TrOCRPreTrainedModel,_d=d.TranslationPipeline,hd=d.UniSpeechForCTC,gd=d.UniSpeechForSequenceClassification,fd=d.UniSpeechModel,Md=d.UniSpeechPreTrainedModel,wd=d.UniSpeechSatForAudioFrameClassification,Td=d.UniSpeechSatForCTC,bd=d.UniSpeechSatForSequenceClassification,Pd=d.UniSpeechSatModel,xd=d.UniSpeechSatPreTrainedModel,kd=d.VLChatProcessor,yd=d.VLMImageProcessor,Fd=d.ViTFeatureExtractor,vd=d.ViTForImageClassification,Cd=d.ViTImageProcessor,Sd=d.ViTMAEModel,Ad=d.ViTMAEPreTrainedModel,Ed=d.ViTMSNForImageClassification,Ld=d.ViTMSNModel,Id=d.ViTMSNPreTrainedModel,zd=d.ViTModel,jd=d.ViTPreTrainedModel,Nd=d.VisionEncoderDecoderModel,Bd=d.VitMatteForImageMatting,Vd=d.VitMatteImageProcessor,Od=d.VitMattePreTrainedModel,Dd=d.VitPoseForPoseEstimation,Gd=d.VitPoseImageProcessor,Rd=d.VitPosePreTrainedModel,qd=d.VitsModel,Wd=d.VitsModelOutput,$d=d.VitsPreTrainedModel,Ud=d.VitsTokenizer,Qd=d.Wav2Vec2BertForCTC,Xd=d.Wav2Vec2BertForSequenceClassification,Hd=d.Wav2Vec2BertModel,Jd=d.Wav2Vec2BertPreTrainedModel,Yd=d.Wav2Vec2CTCTokenizer,Kd=d.Wav2Vec2FeatureExtractor,Zd=d.Wav2Vec2ForAudioFrameClassification,eu=d.Wav2Vec2ForCTC,tu=d.Wav2Vec2ForSequenceClassification,su=d.Wav2Vec2Model,ru=d.Wav2Vec2PreTrainedModel,ou=d.Wav2Vec2Processor,nu=d.Wav2Vec2ProcessorWithLM,au=d.WavLMForAudioFrameClassification,iu=d.WavLMForCTC,lu=d.WavLMForSequenceClassification,cu=d.WavLMForXVector,du=d.WavLMModel,uu=d.WavLMPreTrainedModel,mu=d.WeSpeakerFeatureExtractor,pu=d.WeSpeakerResNetModel,_u=d.WeSpeakerResNetPreTrainedModel,hu=d.WhisperFeatureExtractor,gu=d.WhisperForConditionalGeneration,fu=d.WhisperModel,Mu=d.WhisperPreTrainedModel,wu=d.WhisperProcessor,Tu=d.WhisperTextStreamer,bu=d.WhisperTimeStampLogitsProcessor,Pu=d.WhisperTokenizer,xu=d.XLMForQuestionAnswering,ku=d.XLMForSequenceClassification,yu=d.XLMForTokenClassification,Fu=d.XLMModel,vu=d.XLMPreTrainedModel,Cu=d.XLMRobertaForMaskedLM,Su=d.XLMRobertaForQuestionAnswering,Au=d.XLMRobertaForSequenceClassification,Eu=d.XLMRobertaForTokenClassification,Lu=d.XLMRobertaModel,Iu=d.XLMRobertaPreTrainedModel,zu=d.XLMRobertaTokenizer,ju=d.XLMTokenizer,Nu=d.XLMWithLMHeadModel,Bu=d.XVectorOutput,Vu=d.YolosFeatureExtractor,Ou=d.YolosForObjectDetection,Du=d.YolosImageProcessor,Gu=d.YolosModel,Ru=d.YolosObjectDetectionOutput,qu=d.YolosPreTrainedModel,Wu=d.ZeroShotAudioClassificationPipeline,$u=d.ZeroShotClassificationPipeline,Uu=d.ZeroShotImageClassificationPipeline,Qu=d.ZeroShotObjectDetectionPipeline,Xu=d.bankers_round,Hu=d.cat,Ju=d.cos_sim,Yu=d.dot,Ku=d.dynamic_time_warping,Zu=d.env,em=d.full,tm=d.full_like,sm=d.getKeyValueShapes,rm=d.hamming,om=d.hanning,nm=d.interpolate,am=d.interpolate_4d,im=d.interpolate_data,lm=d.is_chinese_char,cm=d.layer_norm,dm=d.load_image,um=d.log_softmax,mm=d.magnitude,pm=d.matmul,_m=d.max,hm=d.mean,gm=d.mean_pooling,fm=d.medianFilter,Mm=d.mel_filter_bank,wm=d.min,Tm=d.ones,bm=d.ones_like,Pm=d.permute,xm=d.permute_data,km=d.pipeline,ym=d.quantize_embeddings,Fm=d.rand,vm=d.read_audio,Cm=d.rfft,Sm=d.round,Am=d.slice,Em=d.softmax,Lm=d.spectrogram,Im=d.stack,zm=d.std_mean,jm=d.topk,Nm=d.window_function,Bm=d.zeros,Vm=d.zeros_like;export{u as ASTFeatureExtractor,m as ASTForAudioClassification,p as ASTModel,_ as ASTPreTrainedModel,h as AlbertForMaskedLM,g as AlbertForQuestionAnswering,f as AlbertForSequenceClassification,M as AlbertModel,w as AlbertPreTrainedModel,T as AlbertTokenizer,b as AudioClassificationPipeline,P as AutoConfig,x as AutoFeatureExtractor,k as AutoImageProcessor,y as AutoModel,F as AutoModelForAudioClassification,v as AutoModelForAudioFrameClassification,C as AutoModelForCTC,S as AutoModelForCausalLM,A as AutoModelForDepthEstimation,E as AutoModelForDocumentQuestionAnswering,L as AutoModelForImageClassification,I as AutoModelForImageFeatureExtraction,z as AutoModelForImageMatting,j as AutoModelForImageSegmentation,N as AutoModelForImageToImage,B as AutoModelForMaskGeneration,V as AutoModelForMaskedLM,O as AutoModelForNormalEstimation,D as AutoModelForObjectDetection,G as AutoModelForPoseEstimation,R as AutoModelForQuestionAnswering,q as AutoModelForSemanticSegmentation,W as AutoModelForSeq2SeqLM,$ as AutoModelForSequenceClassification,U as AutoModelForSpeechSeq2Seq,Q as AutoModelForTextToSpectrogram,X as AutoModelForTextToWaveform,H as AutoModelForTokenClassification,J as AutoModelForUniversalSegmentation,Y as AutoModelForVision2Seq,K as AutoModelForXVector,Z as AutoModelForZeroShotObjectDetection,ee as AutoProcessor,te as AutoTokenizer,se as AutomaticSpeechRecognitionPipeline,re as BartForConditionalGeneration,oe as BartForSequenceClassification,ne as BartModel,ae as BartPretrainedModel,ie as BartTokenizer,le as BaseModelOutput,ce as BaseStreamer,de as BeitFeatureExtractor,ue as BeitForImageClassification,me as BeitModel,pe as BeitPreTrainedModel,_e as BertForMaskedLM,he as BertForQuestionAnswering,ge as BertForSequenceClassification,fe as BertForTokenClassification,Me as BertModel,we as BertPreTrainedModel,Te as BertTokenizer,be as BitImageProcessor,Pe as BlenderbotForConditionalGeneration,xe as BlenderbotModel,ke as BlenderbotPreTrainedModel,ye as BlenderbotSmallForConditionalGeneration,Fe as BlenderbotSmallModel,ve as BlenderbotSmallPreTrainedModel,Ce as BlenderbotSmallTokenizer,Se as BlenderbotTokenizer,Ae as BloomForCausalLM,Ee as BloomModel,Le as BloomPreTrainedModel,Ie as BloomTokenizer,ze as CLIPFeatureExtractor,je as CLIPImageProcessor,Ne as CLIPModel,Be as CLIPPreTrainedModel,Ve as CLIPSegForImageSegmentation,Oe as CLIPSegModel,De as CLIPSegPreTrainedModel,Ge as CLIPTextModel,Re as CLIPTextModelWithProjection,qe as CLIPTokenizer,We as CLIPVisionModel,$e as CLIPVisionModelWithProjection,Ue as CamembertForMaskedLM,Qe as CamembertForQuestionAnswering,Xe as CamembertForSequenceClassification,He as CamembertForTokenClassification,Je as CamembertModel,Ye as CamembertPreTrainedModel,Ke as CamembertTokenizer,Ze as CausalLMOutput,et as CausalLMOutputWithPast,tt as ChineseCLIPFeatureExtractor,st as ChineseCLIPModel,rt as ChineseCLIPPreTrainedModel,ot as ClapAudioModelWithProjection,nt as ClapFeatureExtractor,at as ClapModel,it as ClapPreTrainedModel,lt as ClapTextModelWithProjection,ct as ClassifierFreeGuidanceLogitsProcessor,dt as CodeGenForCausalLM,ut as CodeGenModel,mt as CodeGenPreTrainedModel,pt as CodeGenTokenizer,_t as CodeLlamaTokenizer,ht as CohereForCausalLM,gt as CohereModel,ft as CoherePreTrainedModel,Mt as CohereTokenizer,wt as ConvBertForMaskedLM,Tt as ConvBertForQuestionAnswering,bt as ConvBertForSequenceClassification,Pt as ConvBertForTokenClassification,xt as ConvBertModel,kt as ConvBertPreTrainedModel,yt as ConvBertTokenizer,Ft as ConvNextFeatureExtractor,vt as ConvNextForImageClassification,Ct as ConvNextImageProcessor,St as ConvNextModel,At as ConvNextPreTrainedModel,Et as ConvNextV2ForImageClassification,Lt as ConvNextV2Model,It as ConvNextV2PreTrainedModel,zt as DPTFeatureExtractor,jt as DPTForDepthEstimation,Nt as DPTImageProcessor,Bt as DPTModel,Vt as DPTPreTrainedModel,Ot as DebertaForMaskedLM,Dt as DebertaForQuestionAnswering,Gt as DebertaForSequenceClassification,Rt as DebertaForTokenClassification,qt as DebertaModel,Wt as DebertaPreTrainedModel,$t as DebertaTokenizer,Ut as DebertaV2ForMaskedLM,Qt as DebertaV2ForQuestionAnswering,Xt as DebertaV2ForSequenceClassification,Ht as DebertaV2ForTokenClassification,Jt as DebertaV2Model,Yt as DebertaV2PreTrainedModel,Kt as DebertaV2Tokenizer,Zt as DecisionTransformerModel,es as DecisionTransformerPreTrainedModel,ts as DeiTFeatureExtractor,ss as DeiTForImageClassification,rs as DeiTImageProcessor,os as DeiTModel,ns as DeiTPreTrainedModel,as as DepthAnythingForDepthEstimation,is as DepthAnythingPreTrainedModel,ls as DepthEstimationPipeline,cs as DepthProForDepthEstimation,ds as DepthProPreTrainedModel,us as DetrFeatureExtractor,ms as DetrForObjectDetection,ps as DetrForSegmentation,_s as DetrImageProcessor,hs as DetrModel,gs as DetrObjectDetectionOutput,fs as DetrPreTrainedModel,Ms as DetrSegmentationOutput,ws as Dinov2ForImageClassification,Ts as Dinov2Model,bs as Dinov2PreTrainedModel,Ps as Dinov2WithRegistersForImageClassification,xs as Dinov2WithRegistersModel,ks as Dinov2WithRegistersPreTrainedModel,ys as DistilBertForMaskedLM,Fs as DistilBertForQuestionAnswering,vs as DistilBertForSequenceClassification,Cs as DistilBertForTokenClassification,Ss as DistilBertModel,As as DistilBertPreTrainedModel,Es as DistilBertTokenizer,Ls as DocumentQuestionAnsweringPipeline,Is as DonutFeatureExtractor,zs as DonutImageProcessor,js as DonutSwinModel,Ns as DonutSwinPreTrainedModel,Bs as EfficientNetForImageClassification,Vs as EfficientNetImageProcessor,Os as EfficientNetModel,Ds as EfficientNetPreTrainedModel,Gs as ElectraForMaskedLM,Rs as ElectraForQuestionAnswering,qs as ElectraForSequenceClassification,Ws as ElectraForTokenClassification,$s as ElectraModel,Us as ElectraPreTrainedModel,Qs as ElectraTokenizer,Xs as EosTokenCriteria,Hs as EsmForMaskedLM,Js as EsmForSequenceClassification,Ys as EsmForTokenClassification,Ks as EsmModel,Zs as EsmPreTrainedModel,er as EsmTokenizer,tr as ExaoneForCausalLM,sr as ExaoneModel,rr as ExaonePreTrainedModel,or as FFT,nr as FalconForCausalLM,ar as FalconModel,ir as FalconPreTrainedModel,lr as FalconTokenizer,cr as FastViTForImageClassification,dr as FastViTModel,ur as FastViTPreTrainedModel,mr as FeatureExtractionPipeline,pr as FeatureExtractor,_r as FillMaskPipeline,hr as Florence2ForConditionalGeneration,gr as Florence2PreTrainedModel,fr as Florence2Processor,Mr as ForcedBOSTokenLogitsProcessor,wr as ForcedEOSTokenLogitsProcessor,Tr as GLPNFeatureExtractor,br as GLPNForDepthEstimation,Pr as GLPNModel,xr as GLPNPreTrainedModel,kr as GPT2LMHeadModel,yr as GPT2Model,Fr as GPT2PreTrainedModel,vr as GPT2Tokenizer,Cr as GPTBigCodeForCausalLM,Sr as GPTBigCodeModel,Ar as GPTBigCodePreTrainedModel,Er as GPTJForCausalLM,Lr as GPTJModel,Ir as GPTJPreTrainedModel,zr as GPTNeoForCausalLM,jr as GPTNeoModel,Nr as GPTNeoPreTrainedModel,Br as GPTNeoXForCausalLM,Vr as GPTNeoXModel,Or as GPTNeoXPreTrainedModel,Dr as GPTNeoXTokenizer,Gr as Gemma2ForCausalLM,Rr as Gemma2Model,qr as Gemma2PreTrainedModel,Wr as GemmaForCausalLM,$r as GemmaModel,Ur as GemmaPreTrainedModel,Qr as GemmaTokenizer,Xr as GlmForCausalLM,Hr as GlmModel,Jr as GlmPreTrainedModel,Yr as GraniteForCausalLM,Kr as GraniteModel,Zr as GranitePreTrainedModel,eo as Grok1Tokenizer,to as GroundingDinoForObjectDetection,so as GroundingDinoImageProcessor,ro as GroundingDinoPreTrainedModel,oo as GroundingDinoProcessor,no as GroupViTModel,ao as GroupViTPreTrainedModel,io as HeliumForCausalLM,lo as HeliumModel,co as HeliumPreTrainedModel,uo as HerbertTokenizer,mo as HieraForImageClassification,po as HieraModel,_o as HieraPreTrainedModel,ho as HubertForCTC,go as HubertForSequenceClassification,fo as HubertModel,Mo as HubertPreTrainedModel,wo as IJepaForImageClassification,To as IJepaModel,bo as IJepaPreTrainedModel,Po as Idefics3ForConditionalGeneration,xo as Idefics3ImageProcessor,ko as Idefics3PreTrainedModel,yo as Idefics3Processor,Fo as ImageClassificationPipeline,vo as ImageFeatureExtractionPipeline,Co as ImageFeatureExtractor,So as ImageMattingOutput,Ao as ImageProcessor,Eo as ImageSegmentationPipeline,Lo as ImageToImagePipeline,Io as ImageToTextPipeline,zo as InterruptableStoppingCriteria,jo as JAISLMHeadModel,No as JAISModel,Bo as JAISPreTrainedModel,Vo as JinaCLIPImageProcessor,Oo as JinaCLIPModel,Do as JinaCLIPPreTrainedModel,Go as JinaCLIPProcessor,Ro as JinaCLIPTextModel,qo as JinaCLIPVisionModel,Wo as LlamaForCausalLM,$o as LlamaModel,Uo as LlamaPreTrainedModel,Qo as LlamaTokenizer,Xo as LlavaForConditionalGeneration,Ho as LlavaOnevisionForConditionalGeneration,Jo as LlavaOnevisionImageProcessor,Yo as LlavaPreTrainedModel,Ko as LogitsProcessor,Zo as LogitsProcessorList,en as LogitsWarper,tn as LongT5ForConditionalGeneration,sn as LongT5Model,rn as LongT5PreTrainedModel,on as M2M100ForConditionalGeneration,nn as M2M100Model,an as M2M100PreTrainedModel,ln as M2M100Tokenizer,cn as MBart50Tokenizer,dn as MBartForCausalLM,un as MBartForConditionalGeneration,mn as MBartForSequenceClassification,pn as MBartModel,_n as MBartPreTrainedModel,hn as MBartTokenizer,gn as MPNetForMaskedLM,fn as MPNetForQuestionAnswering,Mn as MPNetForSequenceClassification,wn as MPNetForTokenClassification,Tn as MPNetModel,bn as MPNetPreTrainedModel,Pn as MPNetTokenizer,xn as MT5ForConditionalGeneration,kn as MT5Model,yn as MT5PreTrainedModel,Fn as MarianMTModel,vn as MarianModel,Cn as MarianPreTrainedModel,Sn as MarianTokenizer,An as Mask2FormerImageProcessor,En as MaskFormerFeatureExtractor,Ln as MaskFormerForInstanceSegmentation,In as MaskFormerImageProcessor,zn as MaskFormerModel,jn as MaskFormerPreTrainedModel,Nn as MaskedLMOutput,Bn as MaxLengthCriteria,Vn as MgpstrForSceneTextRecognition,On as MgpstrModelOutput,Dn as MgpstrPreTrainedModel,Gn as MgpstrProcessor,Rn as MgpstrTokenizer,qn as MinLengthLogitsProcessor,Wn as MinNewTokensLengthLogitsProcessor,$n as MistralForCausalLM,Un as MistralModel,Qn as MistralPreTrainedModel,Xn as MobileBertForMaskedLM,Hn as MobileBertForQuestionAnswering,Jn as MobileBertForSequenceClassification,Yn as MobileBertModel,Kn as MobileBertPreTrainedModel,Zn as MobileBertTokenizer,ea as MobileLLMForCausalLM,ta as MobileLLMModel,sa as MobileLLMPreTrainedModel,ra as MobileNetV1FeatureExtractor,oa as MobileNetV1ForImageClassification,na as MobileNetV1ImageProcessor,aa as MobileNetV1Model,ia as MobileNetV1PreTrainedModel,la as MobileNetV2FeatureExtractor,ca as MobileNetV2ForImageClassification,da as MobileNetV2ImageProcessor,ua as MobileNetV2Model,ma as MobileNetV2PreTrainedModel,pa as MobileNetV3FeatureExtractor,_a as MobileNetV3ForImageClassification,ha as MobileNetV3ImageProcessor,ga as MobileNetV3Model,fa as MobileNetV3PreTrainedModel,Ma as MobileNetV4FeatureExtractor,wa as MobileNetV4ForImageClassification,Ta as MobileNetV4ImageProcessor,ba as MobileNetV4Model,Pa as MobileNetV4PreTrainedModel,xa as MobileViTFeatureExtractor,ka as MobileViTForImageClassification,ya as MobileViTImageProcessor,Fa as MobileViTModel,va as MobileViTPreTrainedModel,Ca as MobileViTV2ForImageClassification,Sa as MobileViTV2Model,Aa as MobileViTV2PreTrainedModel,Ea as ModelOutput,La as ModernBertForMaskedLM,Ia as ModernBertForSequenceClassification,za as ModernBertForTokenClassification,ja as ModernBertModel,Na as ModernBertPreTrainedModel,Ba as Moondream1ForConditionalGeneration,Va as MoonshineFeatureExtractor,Oa as MoonshineForConditionalGeneration,Da as MoonshineModel,Ga as MoonshinePreTrainedModel,Ra as MoonshineProcessor,qa as MptForCausalLM,Wa as MptModel,$a as MptPreTrainedModel,Ua as MultiModalityCausalLM,Qa as MultiModalityPreTrainedModel,Xa as MusicgenForCausalLM,Ha as MusicgenForConditionalGeneration,Ja as MusicgenModel,Ya as MusicgenPreTrainedModel,Ka as NllbTokenizer,Za as NoBadWordsLogitsProcessor,ei as NoRepeatNGramLogitsProcessor,ti as NomicBertModel,si as NomicBertPreTrainedModel,ri as NougatImageProcessor,oi as NougatTokenizer,ni as OPTForCausalLM,ai as OPTModel,ii as OPTPreTrainedModel,li as ObjectDetectionPipeline,ci as Olmo2ForCausalLM,di as Olmo2Model,ui as Olmo2PreTrainedModel,mi as OlmoForCausalLM,pi as OlmoModel,_i as OlmoPreTrainedModel,hi as OpenELMForCausalLM,gi as OpenELMModel,fi as OpenELMPreTrainedModel,Mi as OwlViTFeatureExtractor,wi as OwlViTForObjectDetection,Ti as OwlViTImageProcessor,bi as OwlViTModel,Pi as OwlViTPreTrainedModel,xi as OwlViTProcessor,ki as Owlv2ForObjectDetection,yi as Owlv2ImageProcessor,Fi as Owlv2Model,vi as Owlv2PreTrainedModel,Ci as PaliGemmaForConditionalGeneration,Si as PaliGemmaPreTrainedModel,Ai as PaliGemmaProcessor,Ei as PatchTSMixerForPrediction,Li as PatchTSMixerModel,Ii as PatchTSMixerPreTrainedModel,zi as PatchTSTForPrediction,ji as PatchTSTModel,Ni as PatchTSTPreTrainedModel,Bi as Phi3ForCausalLM,Vi as Phi3Model,Oi as Phi3PreTrainedModel,Di as Phi3VForCausalLM,Gi as Phi3VImageProcessor,Ri as Phi3VPreTrainedModel,qi as Phi3VProcessor,Wi as PhiForCausalLM,$i as PhiModel,Ui as PhiPreTrainedModel,Qi as Pipeline,Xi as PreTrainedModel,Hi as PreTrainedTokenizer,Ji as PretrainedConfig,Yi as PretrainedMixin,Ki as Processor,Zi as PvtForImageClassification,el as PvtImageProcessor,tl as PvtModel,sl as PvtPreTrainedModel,rl as PyAnnoteFeatureExtractor,ol as PyAnnoteForAudioFrameClassification,nl as PyAnnoteModel,al as PyAnnotePreTrainedModel,il as PyAnnoteProcessor,ll as QuestionAnsweringModelOutput,cl as QuestionAnsweringPipeline,dl as Qwen2ForCausalLM,ul as Qwen2Model,ml as Qwen2PreTrainedModel,pl as Qwen2Tokenizer,_l as Qwen2VLForConditionalGeneration,hl as Qwen2VLImageProcessor,gl as Qwen2VLPreTrainedModel,fl as Qwen2VLProcessor,Ml as RTDetrForObjectDetection,wl as RTDetrImageProcessor,Tl as RTDetrModel,bl as RTDetrObjectDetectionOutput,Pl as RTDetrPreTrainedModel,xl as RawAudio,kl as RawImage,yl as RepetitionPenaltyLogitsProcessor,Fl as ResNetForImageClassification,vl as ResNetModel,Cl as ResNetPreTrainedModel,Sl as RoFormerForMaskedLM,Al as RoFormerForQuestionAnswering,El as RoFormerForSequenceClassification,Ll as RoFormerForTokenClassification,Il as RoFormerModel,zl as RoFormerPreTrainedModel,jl as RoFormerTokenizer,Nl as RobertaForMaskedLM,Bl as RobertaForQuestionAnswering,Vl as RobertaForSequenceClassification,Ol as RobertaForTokenClassification,Dl as RobertaModel,Gl as RobertaPreTrainedModel,Rl as RobertaTokenizer,ql as SamImageProcessor,Wl as SamImageSegmentationOutput,$l as SamModel,Ul as SamPreTrainedModel,Ql as SamProcessor,Xl as SapiensForDepthEstimation,Hl as SapiensForNormalEstimation,Jl as SapiensForSemanticSegmentation,Yl as SapiensPreTrainedModel,Kl as SeamlessM4TFeatureExtractor,Zl as SegformerFeatureExtractor,ec as SegformerForImageClassification,tc as SegformerForSemanticSegmentation,sc as SegformerImageProcessor,rc as SegformerModel,oc as SegformerPreTrainedModel,nc as Seq2SeqLMOutput,ac as SequenceClassifierOutput,ic as SiglipImageProcessor,lc as SiglipModel,cc as SiglipPreTrainedModel,dc as SiglipTextModel,uc as SiglipTokenizer,mc as SiglipVisionModel,pc as SpeechT5FeatureExtractor,_c as SpeechT5ForSpeechToText,hc as SpeechT5ForTextToSpeech,gc as SpeechT5HifiGan,fc as SpeechT5Model,Mc as SpeechT5PreTrainedModel,wc as SpeechT5Processor,Tc as SpeechT5Tokenizer,bc as SqueezeBertForMaskedLM,Pc as SqueezeBertForQuestionAnswering,xc as SqueezeBertForSequenceClassification,kc as SqueezeBertModel,yc as SqueezeBertPreTrainedModel,Fc as SqueezeBertTokenizer,vc as StableLmForCausalLM,Cc as StableLmModel,Sc as StableLmPreTrainedModel,Ac as Starcoder2ForCausalLM,Ec as Starcoder2Model,Lc as Starcoder2PreTrainedModel,Ic as StoppingCriteria,zc as StoppingCriteriaList,jc as StyleTextToSpeech2Model,Nc as StyleTextToSpeech2PreTrainedModel,Bc as SummarizationPipeline,Vc as SuppressTokensAtBeginLogitsProcessor,Oc as Swin2SRForImageSuperResolution,Dc as Swin2SRImageProcessor,Gc as Swin2SRModel,Rc as Swin2SRPreTrainedModel,qc as SwinForImageClassification,Wc as SwinModel,$c as SwinPreTrainedModel,Uc as T5ForConditionalGeneration,Qc as T5Model,Xc as T5PreTrainedModel,Hc as T5Tokenizer,Jc as TableTransformerForObjectDetection,Yc as TableTransformerModel,Kc as TableTransformerObjectDetectionOutput,Zc as TableTransformerPreTrainedModel,ed as TemperatureLogitsWarper,td as Tensor,sd as Text2TextGenerationPipeline,rd as TextClassificationPipeline,od as TextGenerationPipeline,nd as TextStreamer,ad as TextToAudioPipeline,id as TokenClassificationPipeline,ld as TokenClassifierOutput,cd as TokenizerModel,dd as TopKLogitsWarper,ud as TopPLogitsWarper,md as TrOCRForCausalLM,pd as TrOCRPreTrainedModel,_d as TranslationPipeline,hd as UniSpeechForCTC,gd as UniSpeechForSequenceClassification,fd as UniSpeechModel,Md as UniSpeechPreTrainedModel,wd as UniSpeechSatForAudioFrameClassification,Td as UniSpeechSatForCTC,bd as UniSpeechSatForSequenceClassification,Pd as UniSpeechSatModel,xd as UniSpeechSatPreTrainedModel,kd as VLChatProcessor,yd as VLMImageProcessor,Fd as ViTFeatureExtractor,vd as ViTForImageClassification,Cd as ViTImageProcessor,Sd as ViTMAEModel,Ad as ViTMAEPreTrainedModel,Ed as ViTMSNForImageClassification,Ld as ViTMSNModel,Id as ViTMSNPreTrainedModel,zd as ViTModel,jd as ViTPreTrainedModel,Nd as VisionEncoderDecoderModel,Bd as VitMatteForImageMatting,Vd as VitMatteImageProcessor,Od as VitMattePreTrainedModel,Dd as VitPoseForPoseEstimation,Gd as VitPoseImageProcessor,Rd as VitPosePreTrainedModel,qd as VitsModel,Wd as VitsModelOutput,$d as VitsPreTrainedModel,Ud as VitsTokenizer,Qd as Wav2Vec2BertForCTC,Xd as Wav2Vec2BertForSequenceClassification,Hd as Wav2Vec2BertModel,Jd as Wav2Vec2BertPreTrainedModel,Yd as Wav2Vec2CTCTokenizer,Kd as Wav2Vec2FeatureExtractor,Zd as Wav2Vec2ForAudioFrameClassification,eu as Wav2Vec2ForCTC,tu as Wav2Vec2ForSequenceClassification,su as Wav2Vec2Model,ru as Wav2Vec2PreTrainedModel,ou as Wav2Vec2Processor,nu as Wav2Vec2ProcessorWithLM,au as WavLMForAudioFrameClassification,iu as WavLMForCTC,lu as WavLMForSequenceClassification,cu as WavLMForXVector,du as WavLMModel,uu as WavLMPreTrainedModel,mu as WeSpeakerFeatureExtractor,pu as WeSpeakerResNetModel,_u as WeSpeakerResNetPreTrainedModel,hu as WhisperFeatureExtractor,gu as WhisperForConditionalGeneration,fu as WhisperModel,Mu as WhisperPreTrainedModel,wu as WhisperProcessor,Tu as WhisperTextStreamer,bu as WhisperTimeStampLogitsProcessor,Pu as WhisperTokenizer,xu as XLMForQuestionAnswering,ku as XLMForSequenceClassification,yu as XLMForTokenClassification,Fu as XLMModel,vu as XLMPreTrainedModel,Cu as XLMRobertaForMaskedLM,Su as XLMRobertaForQuestionAnswering,Au as XLMRobertaForSequenceClassification,Eu as XLMRobertaForTokenClassification,Lu as XLMRobertaModel,Iu as XLMRobertaPreTrainedModel,zu as XLMRobertaTokenizer,ju as XLMTokenizer,Nu as XLMWithLMHeadModel,Bu as XVectorOutput,Vu as YolosFeatureExtractor,Ou as YolosForObjectDetection,Du as YolosImageProcessor,Gu as YolosModel,Ru as YolosObjectDetectionOutput,qu as YolosPreTrainedModel,Wu as ZeroShotAudioClassificationPipeline,$u as ZeroShotClassificationPipeline,Uu as ZeroShotImageClassificationPipeline,Qu as ZeroShotObjectDetectionPipeline,Xu as bankers_round,Hu as cat,Ju as cos_sim,Yu as dot,Ku as dynamic_time_warping,Zu as env,em as full,tm as full_like,sm as getKeyValueShapes,rm as hamming,om as hanning,nm as interpolate,am as interpolate_4d,im as interpolate_data,lm as is_chinese_char,cm as layer_norm,dm as load_image,um as log_softmax,mm as magnitude,pm as matmul,_m as max,hm as mean,gm as mean_pooling,fm as medianFilter,Mm as mel_filter_bank,wm as min,Tm as ones,bm as ones_like,Pm as permute,xm as permute_data,km as pipeline,ym as quantize_embeddings,Fm as rand,vm as read_audio,Cm as rfft,Sm as round,Am as slice,Em as softmax,Lm as spectrogram,Im as stack,zm as std_mean,jm as topk,Nm as window_function,Bm as zeros,Vm as zeros_like};
//# sourceMappingURL=transformers.min.mjs.map